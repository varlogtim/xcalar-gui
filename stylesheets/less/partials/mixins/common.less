@import "partials/mixins/constants.less";
@import "partials/mixins/flex.less";

.box-sizing (@type: border-box) {
    -webkit-box-sizing: @type;
    -moz-box-sizing:    @type;
    box-sizing:         @type;
}

.nomargin-padding() {
    margin: 0;
    padding: 0;
}

.vertical-align() {
    .transform (translateY(50%));
    position: relative;
    top: 50%;
}


.noSelection() {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none; 
    -ms-user-select: none; 
    user-select: none;
}

.background(@url, @w, @h, @repeat: no-repeat, @pX: 0, @pY: 0) {
    width: @w;
    height: @h;
    background-image: url(@url);
    background-repeat: @repeat;
    background-position: @pX @pY;
    background-size: @w @h;
}

/* DROP DOWN COLUMN STYLING */
.dropDown() {
    .dropdownBox {
        width: 16px;
        height: 12px;
        position: absolute;
        vertical-align: middle;
        right: 3px;
        bottom: 3px;
        cursor: pointer;
        z-index: 6;
        opacity: 0;
        .transition (opacity 0.02s linear);
        .transition-delay (0.08s);
        border-top: 11px solid transparent;
        border-right: 11px solid @color-dropBox;
        &:hover {
            opacity: 1 !important;
        }
        &.hidden {
            opacity: 0 !important;
        }
    }

    & .flex-right > .dropdownBox {
        right: -3px;
        bottom: -4px;
        height: 24px;
        width: 22px;
        border: none;

        .innerBox {
            position: absolute;
            width: 16px;
            height: 12px;
            right: 6px;
            bottom: 7px;
            border-top: 11px solid transparent;
            border-right: 11px solid @color-dropBox;
        }
    }
}

// used for datasetTableWrap in datastore.less
.typeIcon() {
    .typeIconCSS(@type: "Unknown") {
        @url: "/images/datastore/typeIcon/type-@{type}.png";
        .type.icon {
            .background(@url, 22px, 22px);
        }
    }
    .typeIconCSS(); // default value is Unknown
    &.type-array {
        .typeIconCSS("Array");
    }
    &.type-boolean {
        .typeIconCSS("Boolean");
    }
    &.type-mixed {
        .typeIconCSS("Mixed");
    }
    &.type-number {
        .typeIconCSS("Number");
    }
    &.type-object {
        .typeIconCSS("Object");
    }
    &.type-string {
        .typeIconCSS("String");
    }
}

.dataTableHeader() {
    border: 5px solid @color-background-tableBorders;
    background-color: @color-background-darkGray;
    border-left: none;
    z-index: 9;
    border-radius: 0px;
    box-shadow: 0px 1px  1px @color-shadow-black;
    .typeIcon;
    .dropDown;
    .editableHead {
        width: 100%;
        outline: none;
        text-overflow: ellipsis;
    }
}

// grid-unit
.gridViewForGrid() {
    height: 65px;
    width: 45px;
    margin: 7px;
    text-align: center;
    cursor: pointer;
    position: relative;
    float: left;
    display: inline-block;

    > .gridIcon {
        display: inline-block;
        width: 50px;
        height: 40px;
    }

    > .listIcon {
        display: none;
    }

    > .label {
        .flex(1 1 25px);
        .flex-order(2);
        .transition (opacity 0.6s);
        font-size: 9px;
        font-weight: 600;
        text-overflow: ellipsis;
        overflow: hidden;
    }

    &.inactive {
        .icon, .label {
            opacity: 0.5;
            .transition (opacity 0.6s);
        }
    }

    &.active {
        background: @color-background-lightLightGray;
        box-shadow: 0px 0px 0px 2px @color-background-topAction;
        .label {
            font-weight: 700;
            color: #333333;
        }
    }
}

.listViewForGrid() {
    position: relative;
    display: block;
    clear: both;
    float: none;
    width: 230px;
    text-align: left;
    margin: 10px 0px 0px 0px;
    background-color: transparent;

     > .label {
        font-size: 11px;
        line-height: 24px;
        height: 25px;
        border-radius: 3px;
        background-color: @color-background-white;
        box-shadow: 1px 2px 1px rgba(0,0,0,.2);
    }

    > .gridIcon {
        display: none;
    }

    > .listIcon {
        display: inline-block;
        .gray-gradient;
        height: 100%;
        float: left;
        padding-top: 1px;
        margin-right: 10px;
        border-top-left-radius: 3px;
        border-bottom-left-radius: 3px;

        .icon {
            margin: 2px 2px 1px 2px;
            display: inline-block;
            width: 19px;
            height: 19px;
        }
    }

    &:hover {
        > .listIcon {
            // .gray-inverse-gradient;
        }
    }

    &.active {
        > .label {
            box-shadow: 0px 0px 0px 2px @color-background-topAction;
        }
        > .listIcon {
            .action-gradient !important;
        }
    }

    &.iconWaiting {
        left: 98px;
        top: -6px;
    }
}

/* ========== Transition ========== */
.transition (@argument) {
    -webkit-transition: @argument;
    -moz-transition: @argument;
    -ms-transition: @argument;
    -o-transition: @argument;
    transition: @argument;
}

.transition-duration (@argument) {
    -webkit-transition-duration: @argument;
    -moz-transition-duration: @argument;
    -ms-transition-duration: @argument;
    -o-transition-duration: @argument;
    transition-duration: @argument;
}

.transition-delay (@argument) {
    -webkit-transition-delay: @argument;
    -moz-transition-delay: @argument;
    -ms-transition-delay: @argument;
    -o-transition-delay: @argument;
    transition-delay: @argument;
}

.transform (@argument) {
    -webkit-transform: @argument;
    -moz-transform: @argument;
    -ms-transform: @argument;
    -o-transform: @argument;
    transform: @argument;
}
/* ========== End Of Transition ========== */

/* ========== Gradient Color ========== */
.linear-gradient(@origin: left, @start: #ffffff, @stop: #000000) {
    background: -webkit-linear-gradient(@origin, @start, @stop);
    background: -moz-linear-gradient(@origin, @start, @stop);
    background: -o-linear-gradient(@origin, @start, @stop);
    background: -ms-linear-gradient(@origin, @start, @stop);
    background: linear-gradient(@origin, @start, @stop);
}

.action-gradient() {
    .linear-gradient(top, @color-background-topAction, @color-background-bottomAction);
}

.action-inverse-gradient() {
    .linear-gradient(top, @color-background-bottomAction, @color-background-topAction);
}

.gray-gradient() {
    .linear-gradient(top, @color-background-topGrayMed, @color-background-bottomGrayMed);
}

.gray-inverse-gradient() {
    .linear-gradient(top, @color-background-bottomGrayMed, @color-background-topGrayMed);
}

.lightGray-gradient() {
    .linear-gradient(top, @color-background-topGrayMed, @color-background-midGrayMed);
}

.darkGray-gradient() {
    .linear-gradient(top, @color-background-midGrayMed, @color-background-bottomGrayMed);
}

.light-gradient() {
    .linear-gradient(top, @color-background-darkGray, #C6C6C6);
}

.red-gradient() {
    .linear-gradient(top, #F28481, #DC4135);
}

/* Dag */
.dag-gradient() {
    .linear-gradient(top, #EAEAEA, @color-background-lightGray);
}

.dagDark-gradient() {
    .linear-gradient(top, #ABABAB, #737373);
}
/* ========== End Of Gradient Color ========== */

/* ========== New Table Color Theme ========== */
// gradient color theme for furture th use
.columnColorTheme-gradient(@startColor, @endColor, @aplpha) {
    .linear-gradient(top, fade(@startColor, @aplpha),
                          fade(@endColor, @aplpha))  !important;
}
.normal-column-gradient(@aplpha: 100%) {
    .columnColorTheme-gradient(@color-table-normal-lightGray,
                      @color-table-normal-darkGray, @aplpha);
}
.inactive-column-gradient(@aplpha: 100%) {
    .columnColorTheme-gradient(@color-table-inactive-lightGray,
                      @color-table-inactive-darkGray, @aplpha);
}
.selected-column-gradient(@aplpha: 100%) {
    .columnColorTheme-gradient(@color-table-selected-lightBlue,
                      @color-table-selected-darkBlue, @aplpha);
}
.error-column-gradient(@aplpha: 100%) {
    .columnColorTheme-gradient(@color-table-error-lightRed,
                      @color-table-error-darkRed, @aplpha);
}
.go-column-gradient(@aplpha: 100%) {
    .columnColorTheme-gradient(@color-table-go-lightGreen,
                      @color-table-go-darkGreen, @aplpha);
}
.option-column-gradient(@aplpha: 100%) {
    .columnColorTheme-gradient(@color-table-option-lightBrown,
                      @color-table-option-darkBrown, @aplpha);
}

// solid color theme for td
.columnColorTheme-solid(@color, @aplpha) {
    background: fade(@color, @aplpha),!important;
}
.normal-column-solid(@aplpha: 100%) {
    .columnColorTheme-solid(@color-table-normal-lightGray, @aplpha);
}
.inactive-column-solid(@aplpha: 100%) {
    .columnColorTheme-solid(@color-table-inactive-lightGray, @aplpha);
}
.selected-column-solid(@aplpha: 100%) {
    .columnColorTheme-solid(@color-table-selected-lightBlue, @aplpha);
}
.error-column-solid(@aplpha: 100%) {
    .columnColorTheme-solid(@color-table-error-lightRed, @aplpha);
}
.go-column-solid(@aplpha: 100%) {
    .columnColorTheme-solid(@color-table-go-lightGreen, @aplpha);
}
.option-column-solid(@aplpha: 100%) {
    .columnColorTheme-solid(@color-table-option-lightBrown, @aplpha);
}
/* ========== End Of Table Color Theme ========== */