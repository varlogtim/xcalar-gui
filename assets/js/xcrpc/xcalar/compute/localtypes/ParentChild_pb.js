/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var xcalar_compute_localtypes_ProtoFieldValue_pb = require('../../../xcalar/compute/localtypes/ProtoFieldValue_pb.js');
var xcalar_compute_localtypes_RuntimeEnums_pb = require('../../../xcalar/compute/localtypes/RuntimeEnums_pb.js');
goog.exportSymbol('proto.ChildAppStartRequest', null, global);
goog.exportSymbol('proto.ChildAppStartRequest.XpuIdRange', null, global);
goog.exportSymbol('proto.ChildEvalRequest', null, global);
goog.exportSymbol('proto.ChildUdfInitRequest', null, global);
goog.exportSymbol('proto.ParentAppDoneRequest', null, global);
goog.exportSymbol('proto.ParentAppGetOutputBuffersRequest', null, global);
goog.exportSymbol('proto.ParentAppLoadBufferRequest', null, global);
goog.exportSymbol('proto.ParentAppLoadBufferRequest.Buffer', null, global);
goog.exportSymbol('proto.ParentAppLoadBufferRequest.DataBuffer', null, global);
goog.exportSymbol('proto.ParentAppRequest', null, global);
goog.exportSymbol('proto.ParentChildBuf', null, global);
goog.exportSymbol('proto.ParentChildShmPtr', null, global);
goog.exportSymbol('proto.ParentGetOutputBufferResponse', null, global);
goog.exportSymbol('proto.ParentGetOutputBufferResponse.Buffer', null, global);
goog.exportSymbol('proto.ParentReportFileErrorRequest', null, global);
goog.exportSymbol('proto.ParentReportNumFilesRequest', null, global);
goog.exportSymbol('proto.ProtoChildFunc', null, global);
goog.exportSymbol('proto.ProtoChildRequest', null, global);
goog.exportSymbol('proto.ProtoParentChildResponse', null, global);
goog.exportSymbol('proto.ProtoParentFunc', null, global);
goog.exportSymbol('proto.ProtoParentRequest', null, global);
goog.exportSymbol('proto.ProtoTxn', null, global);
goog.exportSymbol('proto.ProtoTxn.ModeType', null, global);
goog.exportSymbol('proto.ProtoTxn.SchedType', null, global);
goog.exportSymbol('proto.XdbColumnDesc', null, global);
goog.exportSymbol('proto.XdbGetLocalRowsRequest', null, global);
goog.exportSymbol('proto.XdbGetLocalRowsResponse', null, global);
goog.exportSymbol('proto.XdbGetLocalRowsResponse.RowBatch', null, global);
goog.exportSymbol('proto.XdbGetMetaRequest', null, global);
goog.exportSymbol('proto.XdbGetMetaResponse', null, global);
goog.exportSymbol('proto.XpuReceiveBufferFromSrc', null, global);
goog.exportSymbol('proto.XpuReceiveBufferFromSrc.Buffer', null, global);
goog.exportSymbol('proto.XpuSendListToDsts', null, global);
goog.exportSymbol('proto.XpuSendListToDsts.XpuSendListBufferToDst', null, global);
goog.exportSymbol('proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentChildBuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentChildBuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentChildBuf.displayName = 'proto.ParentChildBuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentChildBuf.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentChildBuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentChildBuf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildBuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    buf: msg.getBuf_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentChildBuf}
 */
proto.ParentChildBuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentChildBuf;
  return proto.ParentChildBuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentChildBuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentChildBuf}
 */
proto.ParentChildBuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBuf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentChildBuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentChildBuf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentChildBuf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildBuf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuf_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes buf = 1;
 * @return {!(string|Uint8Array)}
 */
proto.ParentChildBuf.prototype.getBuf = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes buf = 1;
 * This is a type-conversion wrapper around `getBuf()`
 * @return {string}
 */
proto.ParentChildBuf.prototype.getBuf_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBuf()));
};


/**
 * optional bytes buf = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBuf()`
 * @return {!Uint8Array}
 */
proto.ParentChildBuf.prototype.getBuf_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBuf()));
};


/** @param {!(string|Uint8Array)} value */
proto.ParentChildBuf.prototype.setBuf = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoTxn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoTxn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ProtoTxn.displayName = 'proto.ProtoTxn';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoTxn.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoTxn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoTxn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoTxn.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    schedid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    runtimetype: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoTxn}
 */
proto.ProtoTxn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoTxn;
  return proto.ProtoTxn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoTxn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoTxn}
 */
proto.ProtoTxn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.ProtoTxn.ModeType} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 3:
      var value = /** @type {!proto.ProtoTxn.SchedType} */ (reader.readEnum());
      msg.setSchedid(value);
      break;
    case 4:
      var value = /** @type {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType} */ (reader.readEnum());
      msg.setRuntimetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoTxn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoTxn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoTxn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoTxn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSchedid();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRuntimetype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ProtoTxn.SchedType = {
  SCHED0: 0,
  SCHED1: 1,
  SCHED2: 2,
  IMMEDIATE: 3,
  MAXSCHED: 4
};

/**
 * @enum {number}
 */
proto.ProtoTxn.ModeType = {
  LRQ: 0,
  NONLRQ: 1,
  INVALID: 2
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.ProtoTxn.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ProtoTxn.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ModeType mode = 2;
 * @return {!proto.ProtoTxn.ModeType}
 */
proto.ProtoTxn.prototype.getMode = function() {
  return /** @type {!proto.ProtoTxn.ModeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.ProtoTxn.ModeType} value */
proto.ProtoTxn.prototype.setMode = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SchedType schedId = 3;
 * @return {!proto.ProtoTxn.SchedType}
 */
proto.ProtoTxn.prototype.getSchedid = function() {
  return /** @type {!proto.ProtoTxn.SchedType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.ProtoTxn.SchedType} value */
proto.ProtoTxn.prototype.setSchedid = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional xcalar.compute.localtypes.XcalarEnumType.RuntimeType runTimeType = 4;
 * @return {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType}
 */
proto.ProtoTxn.prototype.getRuntimetype = function() {
  return /** @type {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType} value */
proto.ProtoTxn.prototype.setRuntimetype = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentChildShmPtr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentChildShmPtr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentChildShmPtr.displayName = 'proto.ParentChildShmPtr';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentChildShmPtr.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentChildShmPtr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentChildShmPtr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildShmPtr.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bufCacheOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentChildShmPtr}
 */
proto.ParentChildShmPtr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentChildShmPtr;
  return proto.ParentChildShmPtr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentChildShmPtr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentChildShmPtr}
 */
proto.ParentChildShmPtr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBufCacheOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentChildShmPtr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentChildShmPtr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentChildShmPtr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildShmPtr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBufCacheOffset();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.ParentChildShmPtr.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParentChildShmPtr.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 offset = 2;
 * @return {number}
 */
proto.ParentChildShmPtr.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ParentChildShmPtr.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 buf_cache_offset = 3;
 * @return {number}
 */
proto.ParentChildShmPtr.prototype.getBufCacheOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ParentChildShmPtr.prototype.setBufCacheOffset = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildUdfInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ChildUdfInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ChildUdfInitRequest.displayName = 'proto.ChildUdfInitRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildUdfInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildUdfInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildUdfInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildUdfInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sessionId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildUdfInitRequest}
 */
proto.ChildUdfInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildUdfInitRequest;
  return proto.ChildUdfInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildUdfInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildUdfInitRequest}
 */
proto.ChildUdfInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildUdfInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildUdfInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildUdfInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildUdfInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.ChildUdfInitRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ChildUdfInitRequest.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 session_id = 2;
 * @return {number}
 */
proto.ChildUdfInitRequest.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ChildUdfInitRequest.prototype.setSessionId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildEvalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ChildEvalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ChildEvalRequest.displayName = 'proto.ChildEvalRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildEvalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildEvalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildEvalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildEvalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ptrInput: (f = msg.getPtrInput()) && proto.ParentChildShmPtr.toObject(includeInstance, f),
    ptrOutput: (f = msg.getPtrOutput()) && proto.ParentChildShmPtr.toObject(includeInstance, f),
    icvmode: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildEvalRequest}
 */
proto.ChildEvalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildEvalRequest;
  return proto.ChildEvalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildEvalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildEvalRequest}
 */
proto.ChildEvalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentChildShmPtr;
      reader.readMessage(value,proto.ParentChildShmPtr.deserializeBinaryFromReader);
      msg.setPtrInput(value);
      break;
    case 2:
      var value = new proto.ParentChildShmPtr;
      reader.readMessage(value,proto.ParentChildShmPtr.deserializeBinaryFromReader);
      msg.setPtrOutput(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIcvmode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildEvalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildEvalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildEvalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildEvalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPtrInput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParentChildShmPtr.serializeBinaryToWriter
    );
  }
  f = message.getPtrOutput();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentChildShmPtr.serializeBinaryToWriter
    );
  }
  f = message.getIcvmode();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional ParentChildShmPtr ptr_input = 1;
 * @return {?proto.ParentChildShmPtr}
 */
proto.ChildEvalRequest.prototype.getPtrInput = function() {
  return /** @type{?proto.ParentChildShmPtr} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildShmPtr, 1));
};


/** @param {?proto.ParentChildShmPtr|undefined} value */
proto.ChildEvalRequest.prototype.setPtrInput = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ChildEvalRequest.prototype.clearPtrInput = function() {
  this.setPtrInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ChildEvalRequest.prototype.hasPtrInput = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ParentChildShmPtr ptr_output = 2;
 * @return {?proto.ParentChildShmPtr}
 */
proto.ChildEvalRequest.prototype.getPtrOutput = function() {
  return /** @type{?proto.ParentChildShmPtr} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildShmPtr, 2));
};


/** @param {?proto.ParentChildShmPtr|undefined} value */
proto.ChildEvalRequest.prototype.setPtrOutput = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ChildEvalRequest.prototype.clearPtrOutput = function() {
  this.setPtrOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ChildEvalRequest.prototype.hasPtrOutput = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool icvMode = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ChildEvalRequest.prototype.getIcvmode = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ChildEvalRequest.prototype.setIcvmode = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildAppStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ChildAppStartRequest.repeatedFields_, null);
};
goog.inherits(proto.ChildAppStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ChildAppStartRequest.displayName = 'proto.ChildAppStartRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ChildAppStartRequest.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildAppStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildAppStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildAppStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    exec: msg.getExec_asB64(),
    inStr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    appName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    xpuId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    xpuClusterSize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    sessionId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    xpuIdRangeList: jspb.Message.toObjectList(msg.getXpuIdRangeList(),
    proto.ChildAppStartRequest.XpuIdRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildAppStartRequest}
 */
proto.ChildAppStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildAppStartRequest;
  return proto.ChildAppStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildAppStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildAppStartRequest}
 */
proto.ChildAppStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHostType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setExec(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInStr(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuClusterSize(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSessionId(value);
      break;
    case 9:
      var value = new proto.ChildAppStartRequest.XpuIdRange;
      reader.readMessage(value,proto.ChildAppStartRequest.XpuIdRange.deserializeBinaryFromReader);
      msg.addXpuIdRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildAppStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildAppStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildAppStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostType();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getExec_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getInStr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAppName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getXpuId();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getXpuClusterSize();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getXpuIdRangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ChildAppStartRequest.XpuIdRange.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildAppStartRequest.XpuIdRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ChildAppStartRequest.XpuIdRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ChildAppStartRequest.XpuIdRange.displayName = 'proto.ChildAppStartRequest.XpuIdRange';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildAppStartRequest.XpuIdRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildAppStartRequest.XpuIdRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.XpuIdRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    xpuIdStart: jspb.Message.getFieldWithDefault(msg, 1, 0),
    xpuIdEnd: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildAppStartRequest.XpuIdRange}
 */
proto.ChildAppStartRequest.XpuIdRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildAppStartRequest.XpuIdRange;
  return proto.ChildAppStartRequest.XpuIdRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildAppStartRequest.XpuIdRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildAppStartRequest.XpuIdRange}
 */
proto.ChildAppStartRequest.XpuIdRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuIdStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuIdEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildAppStartRequest.XpuIdRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildAppStartRequest.XpuIdRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.XpuIdRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXpuIdStart();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getXpuIdEnd();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 xpu_id_start = 1;
 * @return {number}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.getXpuIdStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ChildAppStartRequest.XpuIdRange.prototype.setXpuIdStart = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 xpu_id_end = 2;
 * @return {number}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.getXpuIdEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ChildAppStartRequest.XpuIdRange.prototype.setXpuIdEnd = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 host_type = 1;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getHostType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ChildAppStartRequest.prototype.setHostType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes exec = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ChildAppStartRequest.prototype.getExec = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes exec = 2;
 * This is a type-conversion wrapper around `getExec()`
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getExec_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getExec()));
};


/**
 * optional bytes exec = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExec()`
 * @return {!Uint8Array}
 */
proto.ChildAppStartRequest.prototype.getExec_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getExec()));
};


/** @param {!(string|Uint8Array)} value */
proto.ChildAppStartRequest.prototype.setExec = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string in_str = 3;
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getInStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ChildAppStartRequest.prototype.setInStr = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string app_name = 4;
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getAppName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ChildAppStartRequest.prototype.setAppName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string user_name = 5;
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ChildAppStartRequest.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 xpu_id = 6;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getXpuId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ChildAppStartRequest.prototype.setXpuId = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 xpu_cluster_size = 7;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getXpuClusterSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ChildAppStartRequest.prototype.setXpuClusterSize = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 session_id = 8;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ChildAppStartRequest.prototype.setSessionId = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated XpuIdRange xpu_id_range = 9;
 * @return {!Array<!proto.ChildAppStartRequest.XpuIdRange>}
 */
proto.ChildAppStartRequest.prototype.getXpuIdRangeList = function() {
  return /** @type{!Array<!proto.ChildAppStartRequest.XpuIdRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ChildAppStartRequest.XpuIdRange, 9));
};


/** @param {!Array<!proto.ChildAppStartRequest.XpuIdRange>} value */
proto.ChildAppStartRequest.prototype.setXpuIdRangeList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ChildAppStartRequest.XpuIdRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ChildAppStartRequest.XpuIdRange}
 */
proto.ChildAppStartRequest.prototype.addXpuIdRange = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ChildAppStartRequest.XpuIdRange, opt_index);
};


proto.ChildAppStartRequest.prototype.clearXpuIdRangeList = function() {
  this.setXpuIdRangeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuReceiveBufferFromSrc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XpuReceiveBufferFromSrc.repeatedFields_, null);
};
goog.inherits(proto.XpuReceiveBufferFromSrc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XpuReceiveBufferFromSrc.displayName = 'proto.XpuReceiveBufferFromSrc';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XpuReceiveBufferFromSrc.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuReceiveBufferFromSrc.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuReceiveBufferFromSrc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuReceiveBufferFromSrc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcXpuId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dstXpuId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    buffersList: jspb.Message.toObjectList(msg.getBuffersList(),
    proto.XpuReceiveBufferFromSrc.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuReceiveBufferFromSrc}
 */
proto.XpuReceiveBufferFromSrc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuReceiveBufferFromSrc;
  return proto.XpuReceiveBufferFromSrc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuReceiveBufferFromSrc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuReceiveBufferFromSrc}
 */
proto.XpuReceiveBufferFromSrc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSrcXpuId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDstXpuId(value);
      break;
    case 3:
      var value = new proto.XpuReceiveBufferFromSrc.Buffer;
      reader.readMessage(value,proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinaryFromReader);
      msg.addBuffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuReceiveBufferFromSrc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuReceiveBufferFromSrc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuReceiveBufferFromSrc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcXpuId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getDstXpuId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.XpuReceiveBufferFromSrc.Buffer.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuReceiveBufferFromSrc.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XpuReceiveBufferFromSrc.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XpuReceiveBufferFromSrc.Buffer.displayName = 'proto.XpuReceiveBufferFromSrc.Buffer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuReceiveBufferFromSrc.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    length: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer}
 */
proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuReceiveBufferFromSrc.Buffer;
  return proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer}
 */
proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuReceiveBufferFromSrc.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 length = 2;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.setLength = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 src_xpu_id = 1;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.prototype.getSrcXpuId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XpuReceiveBufferFromSrc.prototype.setSrcXpuId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 dst_xpu_id = 2;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.prototype.getDstXpuId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.XpuReceiveBufferFromSrc.prototype.setDstXpuId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Buffer buffers = 3;
 * @return {!Array<!proto.XpuReceiveBufferFromSrc.Buffer>}
 */
proto.XpuReceiveBufferFromSrc.prototype.getBuffersList = function() {
  return /** @type{!Array<!proto.XpuReceiveBufferFromSrc.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XpuReceiveBufferFromSrc.Buffer, 3));
};


/** @param {!Array<!proto.XpuReceiveBufferFromSrc.Buffer>} value */
proto.XpuReceiveBufferFromSrc.prototype.setBuffersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer}
 */
proto.XpuReceiveBufferFromSrc.prototype.addBuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.XpuReceiveBufferFromSrc.Buffer, opt_index);
};


proto.XpuReceiveBufferFromSrc.prototype.clearBuffersList = function() {
  this.setBuffersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoChildRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoChildRequest.oneofGroups_);
};
goog.inherits(proto.ProtoChildRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ProtoChildRequest.displayName = 'proto.ProtoChildRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoChildRequest.oneofGroups_ = [[2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.ProtoChildRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SHM_PTR: 2,
  PC_BUF: 3,
  CHILD_EVAL: 4,
  APP_START: 5,
  RECV_BUFFER_FROM_SRC: 6,
  CHILD_UDF_INIT: 7
};

/**
 * @return {proto.ProtoChildRequest.PayloadCase}
 */
proto.ProtoChildRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoChildRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoChildRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoChildRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoChildRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoChildRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoChildRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    func: jspb.Message.getFieldWithDefault(msg, 1, 0),
    shmPtr: (f = msg.getShmPtr()) && proto.ParentChildShmPtr.toObject(includeInstance, f),
    pcBuf: (f = msg.getPcBuf()) && proto.ParentChildBuf.toObject(includeInstance, f),
    childEval: (f = msg.getChildEval()) && proto.ChildEvalRequest.toObject(includeInstance, f),
    appStart: (f = msg.getAppStart()) && proto.ChildAppStartRequest.toObject(includeInstance, f),
    recvBufferFromSrc: (f = msg.getRecvBufferFromSrc()) && proto.XpuReceiveBufferFromSrc.toObject(includeInstance, f),
    childUdfInit: (f = msg.getChildUdfInit()) && proto.ChildUdfInitRequest.toObject(includeInstance, f),
    txn: (f = msg.getTxn()) && proto.ProtoTxn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoChildRequest}
 */
proto.ProtoChildRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoChildRequest;
  return proto.ProtoChildRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoChildRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoChildRequest}
 */
proto.ProtoChildRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoChildFunc} */ (reader.readEnum());
      msg.setFunc(value);
      break;
    case 2:
      var value = new proto.ParentChildShmPtr;
      reader.readMessage(value,proto.ParentChildShmPtr.deserializeBinaryFromReader);
      msg.setShmPtr(value);
      break;
    case 3:
      var value = new proto.ParentChildBuf;
      reader.readMessage(value,proto.ParentChildBuf.deserializeBinaryFromReader);
      msg.setPcBuf(value);
      break;
    case 4:
      var value = new proto.ChildEvalRequest;
      reader.readMessage(value,proto.ChildEvalRequest.deserializeBinaryFromReader);
      msg.setChildEval(value);
      break;
    case 5:
      var value = new proto.ChildAppStartRequest;
      reader.readMessage(value,proto.ChildAppStartRequest.deserializeBinaryFromReader);
      msg.setAppStart(value);
      break;
    case 6:
      var value = new proto.XpuReceiveBufferFromSrc;
      reader.readMessage(value,proto.XpuReceiveBufferFromSrc.deserializeBinaryFromReader);
      msg.setRecvBufferFromSrc(value);
      break;
    case 7:
      var value = new proto.ChildUdfInitRequest;
      reader.readMessage(value,proto.ChildUdfInitRequest.deserializeBinaryFromReader);
      msg.setChildUdfInit(value);
      break;
    case 8:
      var value = new proto.ProtoTxn;
      reader.readMessage(value,proto.ProtoTxn.deserializeBinaryFromReader);
      msg.setTxn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoChildRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoChildRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoChildRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoChildRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFunc();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getShmPtr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentChildShmPtr.serializeBinaryToWriter
    );
  }
  f = message.getPcBuf();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ParentChildBuf.serializeBinaryToWriter
    );
  }
  f = message.getChildEval();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ChildEvalRequest.serializeBinaryToWriter
    );
  }
  f = message.getAppStart();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ChildAppStartRequest.serializeBinaryToWriter
    );
  }
  f = message.getRecvBufferFromSrc();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.XpuReceiveBufferFromSrc.serializeBinaryToWriter
    );
  }
  f = message.getChildUdfInit();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ChildUdfInitRequest.serializeBinaryToWriter
    );
  }
  f = message.getTxn();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ProtoTxn.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoChildFunc func = 1;
 * @return {!proto.ProtoChildFunc}
 */
proto.ProtoChildRequest.prototype.getFunc = function() {
  return /** @type {!proto.ProtoChildFunc} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ProtoChildFunc} value */
proto.ProtoChildRequest.prototype.setFunc = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ParentChildShmPtr shm_ptr = 2;
 * @return {?proto.ParentChildShmPtr}
 */
proto.ProtoChildRequest.prototype.getShmPtr = function() {
  return /** @type{?proto.ParentChildShmPtr} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildShmPtr, 2));
};


/** @param {?proto.ParentChildShmPtr|undefined} value */
proto.ProtoChildRequest.prototype.setShmPtr = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ProtoChildRequest.oneofGroups_[0], value);
};


proto.ProtoChildRequest.prototype.clearShmPtr = function() {
  this.setShmPtr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoChildRequest.prototype.hasShmPtr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ParentChildBuf pc_buf = 3;
 * @return {?proto.ParentChildBuf}
 */
proto.ProtoChildRequest.prototype.getPcBuf = function() {
  return /** @type{?proto.ParentChildBuf} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildBuf, 3));
};


/** @param {?proto.ParentChildBuf|undefined} value */
proto.ProtoChildRequest.prototype.setPcBuf = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ProtoChildRequest.oneofGroups_[0], value);
};


proto.ProtoChildRequest.prototype.clearPcBuf = function() {
  this.setPcBuf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoChildRequest.prototype.hasPcBuf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ChildEvalRequest child_eval = 4;
 * @return {?proto.ChildEvalRequest}
 */
proto.ProtoChildRequest.prototype.getChildEval = function() {
  return /** @type{?proto.ChildEvalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ChildEvalRequest, 4));
};


/** @param {?proto.ChildEvalRequest|undefined} value */
proto.ProtoChildRequest.prototype.setChildEval = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ProtoChildRequest.oneofGroups_[0], value);
};


proto.ProtoChildRequest.prototype.clearChildEval = function() {
  this.setChildEval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoChildRequest.prototype.hasChildEval = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChildAppStartRequest app_start = 5;
 * @return {?proto.ChildAppStartRequest}
 */
proto.ProtoChildRequest.prototype.getAppStart = function() {
  return /** @type{?proto.ChildAppStartRequest} */ (
    jspb.Message.getWrapperField(this, proto.ChildAppStartRequest, 5));
};


/** @param {?proto.ChildAppStartRequest|undefined} value */
proto.ProtoChildRequest.prototype.setAppStart = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.ProtoChildRequest.oneofGroups_[0], value);
};


proto.ProtoChildRequest.prototype.clearAppStart = function() {
  this.setAppStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoChildRequest.prototype.hasAppStart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional XpuReceiveBufferFromSrc recv_buffer_from_src = 6;
 * @return {?proto.XpuReceiveBufferFromSrc}
 */
proto.ProtoChildRequest.prototype.getRecvBufferFromSrc = function() {
  return /** @type{?proto.XpuReceiveBufferFromSrc} */ (
    jspb.Message.getWrapperField(this, proto.XpuReceiveBufferFromSrc, 6));
};


/** @param {?proto.XpuReceiveBufferFromSrc|undefined} value */
proto.ProtoChildRequest.prototype.setRecvBufferFromSrc = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.ProtoChildRequest.oneofGroups_[0], value);
};


proto.ProtoChildRequest.prototype.clearRecvBufferFromSrc = function() {
  this.setRecvBufferFromSrc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoChildRequest.prototype.hasRecvBufferFromSrc = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ChildUdfInitRequest child_udf_init = 7;
 * @return {?proto.ChildUdfInitRequest}
 */
proto.ProtoChildRequest.prototype.getChildUdfInit = function() {
  return /** @type{?proto.ChildUdfInitRequest} */ (
    jspb.Message.getWrapperField(this, proto.ChildUdfInitRequest, 7));
};


/** @param {?proto.ChildUdfInitRequest|undefined} value */
proto.ProtoChildRequest.prototype.setChildUdfInit = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.ProtoChildRequest.oneofGroups_[0], value);
};


proto.ProtoChildRequest.prototype.clearChildUdfInit = function() {
  this.setChildUdfInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoChildRequest.prototype.hasChildUdfInit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ProtoTxn txn = 8;
 * @return {?proto.ProtoTxn}
 */
proto.ProtoChildRequest.prototype.getTxn = function() {
  return /** @type{?proto.ProtoTxn} */ (
    jspb.Message.getWrapperField(this, proto.ProtoTxn, 8));
};


/** @param {?proto.ProtoTxn|undefined} value */
proto.ProtoChildRequest.prototype.setTxn = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.ProtoChildRequest.prototype.clearTxn = function() {
  this.setTxn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoChildRequest.prototype.hasTxn = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppGetOutputBuffersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppGetOutputBuffersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentAppGetOutputBuffersRequest.displayName = 'proto.ParentAppGetOutputBuffersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppGetOutputBuffersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppGetOutputBuffersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppGetOutputBuffersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppGetOutputBuffersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    numBuffers: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppGetOutputBuffersRequest}
 */
proto.ParentAppGetOutputBuffersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppGetOutputBuffersRequest;
  return proto.ParentAppGetOutputBuffersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppGetOutputBuffersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppGetOutputBuffersRequest}
 */
proto.ParentAppGetOutputBuffersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumBuffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppGetOutputBuffersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppGetOutputBuffersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppGetOutputBuffersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppGetOutputBuffersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumBuffers();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 num_buffers = 1;
 * @return {number}
 */
proto.ParentAppGetOutputBuffersRequest.prototype.getNumBuffers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParentAppGetOutputBuffersRequest.prototype.setNumBuffers = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppDoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppDoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentAppDoneRequest.displayName = 'proto.ParentAppDoneRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppDoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppDoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppDoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppDoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    outStr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errStr: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppDoneRequest}
 */
proto.ParentAppDoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppDoneRequest;
  return proto.ParentAppDoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppDoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppDoneRequest}
 */
proto.ParentAppDoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutStr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppDoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppDoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppDoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppDoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOutStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrStr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 status = 1;
 * @return {number}
 */
proto.ParentAppDoneRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParentAppDoneRequest.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string out_str = 2;
 * @return {string}
 */
proto.ParentAppDoneRequest.prototype.getOutStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ParentAppDoneRequest.prototype.setOutStr = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string err_str = 3;
 * @return {string}
 */
proto.ParentAppDoneRequest.prototype.getErrStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ParentAppDoneRequest.prototype.setErrStr = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentReportNumFilesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentReportNumFilesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentReportNumFilesRequest.displayName = 'proto.ParentReportNumFilesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentReportNumFilesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentReportNumFilesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentReportNumFilesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportNumFilesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filesSampled: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalFileBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    downSampled: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentReportNumFilesRequest}
 */
proto.ParentReportNumFilesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentReportNumFilesRequest;
  return proto.ParentReportNumFilesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentReportNumFilesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentReportNumFilesRequest}
 */
proto.ParentReportNumFilesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFilesSampled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalFileBytes(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownSampled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentReportNumFilesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentReportNumFilesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentReportNumFilesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportNumFilesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilesSampled();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTotalFileBytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDownSampled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 files_sampled = 1;
 * @return {number}
 */
proto.ParentReportNumFilesRequest.prototype.getFilesSampled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParentReportNumFilesRequest.prototype.setFilesSampled = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 total_file_bytes = 2;
 * @return {number}
 */
proto.ParentReportNumFilesRequest.prototype.getTotalFileBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ParentReportNumFilesRequest.prototype.setTotalFileBytes = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool down_sampled = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ParentReportNumFilesRequest.prototype.getDownSampled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ParentReportNumFilesRequest.prototype.setDownSampled = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppLoadBufferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ParentAppLoadBufferRequest.repeatedFields_, null);
};
goog.inherits(proto.ParentAppLoadBufferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentAppLoadBufferRequest.displayName = 'proto.ParentAppLoadBufferRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ParentAppLoadBufferRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppLoadBufferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppLoadBufferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppLoadBufferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    numFiles: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numFileBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numErrors: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dataBuffersList: jspb.Message.toObjectList(msg.getDataBuffersList(),
    proto.ParentAppLoadBufferRequest.DataBuffer.toObject, includeInstance),
    unusedBuffersList: jspb.Message.toObjectList(msg.getUnusedBuffersList(),
    proto.ParentAppLoadBufferRequest.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppLoadBufferRequest}
 */
proto.ParentAppLoadBufferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppLoadBufferRequest;
  return proto.ParentAppLoadBufferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppLoadBufferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppLoadBufferRequest}
 */
proto.ParentAppLoadBufferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumFiles(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumFileBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumErrors(value);
      break;
    case 4:
      var value = new proto.ParentAppLoadBufferRequest.DataBuffer;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinaryFromReader);
      msg.addDataBuffers(value);
      break;
    case 5:
      var value = new proto.ParentAppLoadBufferRequest.Buffer;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader);
      msg.addUnusedBuffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppLoadBufferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppLoadBufferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppLoadBufferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumFiles();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNumFileBytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNumErrors();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDataBuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ParentAppLoadBufferRequest.DataBuffer.serializeBinaryToWriter
    );
  }
  f = message.getUnusedBuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppLoadBufferRequest.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppLoadBufferRequest.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentAppLoadBufferRequest.Buffer.displayName = 'proto.ParentAppLoadBufferRequest.Buffer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppLoadBufferRequest.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppLoadBufferRequest.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppLoadBufferRequest.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppLoadBufferRequest.Buffer;
  return proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppLoadBufferRequest.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppLoadBufferRequest.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppLoadBufferRequest.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParentAppLoadBufferRequest.Buffer.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppLoadBufferRequest.DataBuffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppLoadBufferRequest.DataBuffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentAppLoadBufferRequest.DataBuffer.displayName = 'proto.ParentAppLoadBufferRequest.DataBuffer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppLoadBufferRequest.DataBuffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.DataBuffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasErrors: jspb.Message.getFieldWithDefault(msg, 1, false),
    buffer: (f = msg.getBuffer()) && proto.ParentAppLoadBufferRequest.Buffer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppLoadBufferRequest.DataBuffer;
  return proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasErrors(value);
      break;
    case 2:
      var value = new proto.ParentAppLoadBufferRequest.Buffer;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader);
      msg.setBuffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppLoadBufferRequest.DataBuffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.DataBuffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasErrors();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getBuffer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool has_errors = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.getHasErrors = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.setHasErrors = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Buffer buffer = 2;
 * @return {?proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.getBuffer = function() {
  return /** @type{?proto.ParentAppLoadBufferRequest.Buffer} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppLoadBufferRequest.Buffer, 2));
};


/** @param {?proto.ParentAppLoadBufferRequest.Buffer|undefined} value */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.setBuffer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ParentAppLoadBufferRequest.DataBuffer.prototype.clearBuffer = function() {
  this.setBuffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.hasBuffer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 num_files = 1;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.prototype.getNumFiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParentAppLoadBufferRequest.prototype.setNumFiles = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 num_file_bytes = 2;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.prototype.getNumFileBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ParentAppLoadBufferRequest.prototype.setNumFileBytes = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 num_errors = 3;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.prototype.getNumErrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ParentAppLoadBufferRequest.prototype.setNumErrors = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated DataBuffer data_buffers = 4;
 * @return {!Array<!proto.ParentAppLoadBufferRequest.DataBuffer>}
 */
proto.ParentAppLoadBufferRequest.prototype.getDataBuffersList = function() {
  return /** @type{!Array<!proto.ParentAppLoadBufferRequest.DataBuffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ParentAppLoadBufferRequest.DataBuffer, 4));
};


/** @param {!Array<!proto.ParentAppLoadBufferRequest.DataBuffer>} value */
proto.ParentAppLoadBufferRequest.prototype.setDataBuffersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer}
 */
proto.ParentAppLoadBufferRequest.prototype.addDataBuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ParentAppLoadBufferRequest.DataBuffer, opt_index);
};


proto.ParentAppLoadBufferRequest.prototype.clearDataBuffersList = function() {
  this.setDataBuffersList([]);
};


/**
 * repeated Buffer unused_buffers = 5;
 * @return {!Array<!proto.ParentAppLoadBufferRequest.Buffer>}
 */
proto.ParentAppLoadBufferRequest.prototype.getUnusedBuffersList = function() {
  return /** @type{!Array<!proto.ParentAppLoadBufferRequest.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ParentAppLoadBufferRequest.Buffer, 5));
};


/** @param {!Array<!proto.ParentAppLoadBufferRequest.Buffer>} value */
proto.ParentAppLoadBufferRequest.prototype.setUnusedBuffersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ParentAppLoadBufferRequest.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.prototype.addUnusedBuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ParentAppLoadBufferRequest.Buffer, opt_index);
};


proto.ParentAppLoadBufferRequest.prototype.clearUnusedBuffersList = function() {
  this.setUnusedBuffersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuSendListToDsts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XpuSendListToDsts.repeatedFields_, null);
};
goog.inherits(proto.XpuSendListToDsts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XpuSendListToDsts.displayName = 'proto.XpuSendListToDsts';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XpuSendListToDsts.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuSendListToDsts.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuSendListToDsts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuSendListToDsts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcXpuId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sendListList: jspb.Message.toObjectList(msg.getSendListList(),
    proto.XpuSendListToDsts.XpuSendListBufferToDst.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuSendListToDsts}
 */
proto.XpuSendListToDsts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuSendListToDsts;
  return proto.XpuSendListToDsts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuSendListToDsts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuSendListToDsts}
 */
proto.XpuSendListToDsts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSrcXpuId(value);
      break;
    case 2:
      var value = new proto.XpuSendListToDsts.XpuSendListBufferToDst;
      reader.readMessage(value,proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinaryFromReader);
      msg.addSendList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuSendListToDsts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuSendListToDsts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuSendListToDsts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcXpuId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSendListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.XpuSendListToDsts.XpuSendListBufferToDst.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XpuSendListToDsts.XpuSendListBufferToDst.repeatedFields_, null);
};
goog.inherits(proto.XpuSendListToDsts.XpuSendListBufferToDst, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XpuSendListToDsts.XpuSendListBufferToDst.displayName = 'proto.XpuSendListToDsts.XpuSendListBufferToDst';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.toObject = function(includeInstance, msg) {
  var f, obj = {
    dstXpuId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    buffersList: jspb.Message.toObjectList(msg.getBuffersList(),
    proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuSendListToDsts.XpuSendListBufferToDst;
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDstXpuId(value);
      break;
    case 2:
      var value = new proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer;
      reader.readMessage(value,proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinaryFromReader);
      msg.addBuffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuSendListToDsts.XpuSendListBufferToDst.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDstXpuId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.displayName = 'proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    length: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer;
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 length = 2;
 * @return {number}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.setLength = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 dst_xpu_id = 1;
 * @return {number}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.getDstXpuId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.setDstXpuId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Buffer buffers = 2;
 * @return {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer>}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.getBuffersList = function() {
  return /** @type{!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer, 2));
};


/** @param {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer>} value */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.setBuffersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.addBuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer, opt_index);
};


proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.clearBuffersList = function() {
  this.setBuffersList([]);
};


/**
 * optional uint32 src_xpu_id = 1;
 * @return {number}
 */
proto.XpuSendListToDsts.prototype.getSrcXpuId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XpuSendListToDsts.prototype.setSrcXpuId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated XpuSendListBufferToDst send_list = 2;
 * @return {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst>}
 */
proto.XpuSendListToDsts.prototype.getSendListList = function() {
  return /** @type{!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XpuSendListToDsts.XpuSendListBufferToDst, 2));
};


/** @param {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst>} value */
proto.XpuSendListToDsts.prototype.setSendListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst}
 */
proto.XpuSendListToDsts.prototype.addSendList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.XpuSendListToDsts.XpuSendListBufferToDst, opt_index);
};


proto.XpuSendListToDsts.prototype.clearSendListList = function() {
  this.setSendListList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentReportFileErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentReportFileErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentReportFileErrorRequest.displayName = 'proto.ParentReportFileErrorRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentReportFileErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentReportFileErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentReportFileErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportFileErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileError: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentReportFileErrorRequest}
 */
proto.ParentReportFileErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentReportFileErrorRequest;
  return proto.ParentReportFileErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentReportFileErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentReportFileErrorRequest}
 */
proto.ParentReportFileErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentReportFileErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentReportFileErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentReportFileErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportFileErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.ParentReportFileErrorRequest.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ParentReportFileErrorRequest.prototype.setFileName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string file_error = 2;
 * @return {string}
 */
proto.ParentReportFileErrorRequest.prototype.getFileError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ParentReportFileErrorRequest.prototype.setFileError = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetMetaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XdbGetMetaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XdbGetMetaRequest.displayName = 'proto.XdbGetMetaRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetMetaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetMetaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetMetaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    xdbId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetMetaRequest}
 */
proto.XdbGetMetaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetMetaRequest;
  return proto.XdbGetMetaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetMetaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetMetaRequest}
 */
proto.XdbGetMetaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXdbId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetMetaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetMetaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetMetaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXdbId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 xdb_id = 1;
 * @return {number}
 */
proto.XdbGetMetaRequest.prototype.getXdbId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XdbGetMetaRequest.prototype.setXdbId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbColumnDesc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XdbColumnDesc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XdbColumnDesc.displayName = 'proto.XdbColumnDesc';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbColumnDesc.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbColumnDesc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbColumnDesc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbColumnDesc.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbColumnDesc}
 */
proto.XdbColumnDesc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbColumnDesc;
  return proto.XdbColumnDesc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbColumnDesc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbColumnDesc}
 */
proto.XdbColumnDesc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbColumnDesc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbColumnDesc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbColumnDesc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbColumnDesc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.XdbColumnDesc.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.XdbColumnDesc.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.XdbColumnDesc.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.XdbColumnDesc.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetMetaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XdbGetMetaResponse.repeatedFields_, null);
};
goog.inherits(proto.XdbGetMetaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XdbGetMetaResponse.displayName = 'proto.XdbGetMetaResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XdbGetMetaResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetMetaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetMetaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetMetaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    xdbId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numRowsPerNodeList: jspb.Message.getRepeatedField(msg, 2),
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.XdbColumnDesc.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetMetaResponse}
 */
proto.XdbGetMetaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetMetaResponse;
  return proto.XdbGetMetaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetMetaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetMetaResponse}
 */
proto.XdbGetMetaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXdbId(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setNumRowsPerNodeList(value);
      break;
    case 3:
      var value = new proto.XdbColumnDesc;
      reader.readMessage(value,proto.XdbColumnDesc.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetMetaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetMetaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetMetaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXdbId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNumRowsPerNodeList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.XdbColumnDesc.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 xdb_id = 1;
 * @return {number}
 */
proto.XdbGetMetaResponse.prototype.getXdbId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XdbGetMetaResponse.prototype.setXdbId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int64 num_rows_per_node = 2;
 * @return {!Array<number>}
 */
proto.XdbGetMetaResponse.prototype.getNumRowsPerNodeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.XdbGetMetaResponse.prototype.setNumRowsPerNodeList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.XdbGetMetaResponse.prototype.addNumRowsPerNode = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.XdbGetMetaResponse.prototype.clearNumRowsPerNodeList = function() {
  this.setNumRowsPerNodeList([]);
};


/**
 * repeated XdbColumnDesc columns = 3;
 * @return {!Array<!proto.XdbColumnDesc>}
 */
proto.XdbGetMetaResponse.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.XdbColumnDesc>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XdbColumnDesc, 3));
};


/** @param {!Array<!proto.XdbColumnDesc>} value */
proto.XdbGetMetaResponse.prototype.setColumnsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.XdbColumnDesc=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XdbColumnDesc}
 */
proto.XdbGetMetaResponse.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.XdbColumnDesc, opt_index);
};


proto.XdbGetMetaResponse.prototype.clearColumnsList = function() {
  this.setColumnsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetLocalRowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XdbGetLocalRowsRequest.repeatedFields_, null);
};
goog.inherits(proto.XdbGetLocalRowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XdbGetLocalRowsRequest.displayName = 'proto.XdbGetLocalRowsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XdbGetLocalRowsRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetLocalRowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetLocalRowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetLocalRowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    xdbId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startRow: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numRows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nodeId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    asDataPage: jspb.Message.getFieldWithDefault(msg, 5, false),
    columnsList: jspb.Message.getRepeatedField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetLocalRowsRequest}
 */
proto.XdbGetLocalRowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetLocalRowsRequest;
  return proto.XdbGetLocalRowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetLocalRowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetLocalRowsRequest}
 */
proto.XdbGetLocalRowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXdbId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartRow(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumRows(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsDataPage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetLocalRowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetLocalRowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXdbId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStartRow();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNumRows();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNodeId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAsDataPage();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional int64 xdb_id = 1;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getXdbId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.XdbGetLocalRowsRequest.prototype.setXdbId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 start_row = 2;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getStartRow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.XdbGetLocalRowsRequest.prototype.setStartRow = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 num_rows = 3;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getNumRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.XdbGetLocalRowsRequest.prototype.setNumRows = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 node_id = 4;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getNodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.XdbGetLocalRowsRequest.prototype.setNodeId = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool as_data_page = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.XdbGetLocalRowsRequest.prototype.getAsDataPage = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.XdbGetLocalRowsRequest.prototype.setAsDataPage = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated string columns = 6;
 * @return {!Array<string>}
 */
proto.XdbGetLocalRowsRequest.prototype.getColumnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.XdbGetLocalRowsRequest.prototype.setColumnsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.XdbGetLocalRowsRequest.prototype.addColumns = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.XdbGetLocalRowsRequest.prototype.clearColumnsList = function() {
  this.setColumnsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetLocalRowsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.XdbGetLocalRowsResponse.oneofGroups_);
};
goog.inherits(proto.XdbGetLocalRowsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XdbGetLocalRowsResponse.displayName = 'proto.XdbGetLocalRowsResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.XdbGetLocalRowsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.XdbGetLocalRowsResponse.DataCase = {
  DATA_NOT_SET: 0,
  DATA_PAGE: 1,
  ROWS: 2
};

/**
 * @return {proto.XdbGetLocalRowsResponse.DataCase}
 */
proto.XdbGetLocalRowsResponse.prototype.getDataCase = function() {
  return /** @type {proto.XdbGetLocalRowsResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.XdbGetLocalRowsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetLocalRowsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetLocalRowsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetLocalRowsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataPage: msg.getDataPage_asB64(),
    rows: (f = msg.getRows()) && proto.XdbGetLocalRowsResponse.RowBatch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetLocalRowsResponse}
 */
proto.XdbGetLocalRowsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetLocalRowsResponse;
  return proto.XdbGetLocalRowsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetLocalRowsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetLocalRowsResponse}
 */
proto.XdbGetLocalRowsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDataPage(value);
      break;
    case 2:
      var value = new proto.XdbGetLocalRowsResponse.RowBatch;
      reader.readMessage(value,proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinaryFromReader);
      msg.setRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetLocalRowsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetLocalRowsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRows();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.XdbGetLocalRowsResponse.RowBatch.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetLocalRowsResponse.RowBatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XdbGetLocalRowsResponse.RowBatch.repeatedFields_, null);
};
goog.inherits(proto.XdbGetLocalRowsResponse.RowBatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XdbGetLocalRowsResponse.RowBatch.displayName = 'proto.XdbGetLocalRowsResponse.RowBatch';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XdbGetLocalRowsResponse.RowBatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetLocalRowsResponse.RowBatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetLocalRowsResponse.RowBatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.RowBatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetLocalRowsResponse.RowBatch}
 */
proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetLocalRowsResponse.RowBatch;
  return proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetLocalRowsResponse.RowBatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetLocalRowsResponse.RowBatch}
 */
proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow;
      reader.readMessage(value,xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetLocalRowsResponse.RowBatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetLocalRowsResponse.RowBatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.RowBatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProtoRow rows = 1;
 * @return {!Array<!proto.ProtoRow>}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.ProtoRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow, 1));
};


/** @param {!Array<!proto.ProtoRow>} value */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.setRowsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ProtoRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ProtoRow}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ProtoRow, opt_index);
};


proto.XdbGetLocalRowsResponse.RowBatch.prototype.clearRowsList = function() {
  this.setRowsList([]);
};


/**
 * optional bytes data_page = 1;
 * @return {!(string|Uint8Array)}
 */
proto.XdbGetLocalRowsResponse.prototype.getDataPage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data_page = 1;
 * This is a type-conversion wrapper around `getDataPage()`
 * @return {string}
 */
proto.XdbGetLocalRowsResponse.prototype.getDataPage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDataPage()));
};


/**
 * optional bytes data_page = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataPage()`
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsResponse.prototype.getDataPage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDataPage()));
};


/** @param {!(string|Uint8Array)} value */
proto.XdbGetLocalRowsResponse.prototype.setDataPage = function(value) {
  jspb.Message.setOneofField(this, 1, proto.XdbGetLocalRowsResponse.oneofGroups_[0], value);
};


proto.XdbGetLocalRowsResponse.prototype.clearDataPage = function() {
  jspb.Message.setOneofField(this, 1, proto.XdbGetLocalRowsResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.XdbGetLocalRowsResponse.prototype.hasDataPage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RowBatch rows = 2;
 * @return {?proto.XdbGetLocalRowsResponse.RowBatch}
 */
proto.XdbGetLocalRowsResponse.prototype.getRows = function() {
  return /** @type{?proto.XdbGetLocalRowsResponse.RowBatch} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetLocalRowsResponse.RowBatch, 2));
};


/** @param {?proto.XdbGetLocalRowsResponse.RowBatch|undefined} value */
proto.XdbGetLocalRowsResponse.prototype.setRows = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.XdbGetLocalRowsResponse.oneofGroups_[0], value);
};


proto.XdbGetLocalRowsResponse.prototype.clearRows = function() {
  this.setRows(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.XdbGetLocalRowsResponse.prototype.hasRows = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ParentAppRequest.oneofGroups_);
};
goog.inherits(proto.ParentAppRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentAppRequest.displayName = 'proto.ParentAppRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ParentAppRequest.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.ParentAppRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  GET_BUFFERS: 1,
  DONE: 2,
  REPORT_NUM_FILES: 3,
  LOAD_BUFFERS: 4,
  FILE_ERROR: 5,
  SEND_LIST_TO_DSTS: 6,
  XDB_GET_META: 7,
  XDB_GET_LOCAL_ROWS: 8
};

/**
 * @return {proto.ParentAppRequest.PayloadCase}
 */
proto.ParentAppRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.ParentAppRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ParentAppRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    getBuffers: (f = msg.getGetBuffers()) && proto.ParentAppGetOutputBuffersRequest.toObject(includeInstance, f),
    done: (f = msg.getDone()) && proto.ParentAppDoneRequest.toObject(includeInstance, f),
    reportNumFiles: (f = msg.getReportNumFiles()) && proto.ParentReportNumFilesRequest.toObject(includeInstance, f),
    loadBuffers: (f = msg.getLoadBuffers()) && proto.ParentAppLoadBufferRequest.toObject(includeInstance, f),
    fileError: (f = msg.getFileError()) && proto.ParentReportFileErrorRequest.toObject(includeInstance, f),
    sendListToDsts: (f = msg.getSendListToDsts()) && proto.XpuSendListToDsts.toObject(includeInstance, f),
    xdbGetMeta: (f = msg.getXdbGetMeta()) && proto.XdbGetMetaRequest.toObject(includeInstance, f),
    xdbGetLocalRows: (f = msg.getXdbGetLocalRows()) && proto.XdbGetLocalRowsRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppRequest}
 */
proto.ParentAppRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppRequest;
  return proto.ParentAppRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppRequest}
 */
proto.ParentAppRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentAppGetOutputBuffersRequest;
      reader.readMessage(value,proto.ParentAppGetOutputBuffersRequest.deserializeBinaryFromReader);
      msg.setGetBuffers(value);
      break;
    case 2:
      var value = new proto.ParentAppDoneRequest;
      reader.readMessage(value,proto.ParentAppDoneRequest.deserializeBinaryFromReader);
      msg.setDone(value);
      break;
    case 3:
      var value = new proto.ParentReportNumFilesRequest;
      reader.readMessage(value,proto.ParentReportNumFilesRequest.deserializeBinaryFromReader);
      msg.setReportNumFiles(value);
      break;
    case 4:
      var value = new proto.ParentAppLoadBufferRequest;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.deserializeBinaryFromReader);
      msg.setLoadBuffers(value);
      break;
    case 5:
      var value = new proto.ParentReportFileErrorRequest;
      reader.readMessage(value,proto.ParentReportFileErrorRequest.deserializeBinaryFromReader);
      msg.setFileError(value);
      break;
    case 6:
      var value = new proto.XpuSendListToDsts;
      reader.readMessage(value,proto.XpuSendListToDsts.deserializeBinaryFromReader);
      msg.setSendListToDsts(value);
      break;
    case 7:
      var value = new proto.XdbGetMetaRequest;
      reader.readMessage(value,proto.XdbGetMetaRequest.deserializeBinaryFromReader);
      msg.setXdbGetMeta(value);
      break;
    case 8:
      var value = new proto.XdbGetLocalRowsRequest;
      reader.readMessage(value,proto.XdbGetLocalRowsRequest.deserializeBinaryFromReader);
      msg.setXdbGetLocalRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetBuffers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParentAppGetOutputBuffersRequest.serializeBinaryToWriter
    );
  }
  f = message.getDone();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentAppDoneRequest.serializeBinaryToWriter
    );
  }
  f = message.getReportNumFiles();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ParentReportNumFilesRequest.serializeBinaryToWriter
    );
  }
  f = message.getLoadBuffers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ParentAppLoadBufferRequest.serializeBinaryToWriter
    );
  }
  f = message.getFileError();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ParentReportFileErrorRequest.serializeBinaryToWriter
    );
  }
  f = message.getSendListToDsts();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.XpuSendListToDsts.serializeBinaryToWriter
    );
  }
  f = message.getXdbGetMeta();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.XdbGetMetaRequest.serializeBinaryToWriter
    );
  }
  f = message.getXdbGetLocalRows();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.XdbGetLocalRowsRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional ParentAppGetOutputBuffersRequest get_buffers = 1;
 * @return {?proto.ParentAppGetOutputBuffersRequest}
 */
proto.ParentAppRequest.prototype.getGetBuffers = function() {
  return /** @type{?proto.ParentAppGetOutputBuffersRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppGetOutputBuffersRequest, 1));
};


/** @param {?proto.ParentAppGetOutputBuffersRequest|undefined} value */
proto.ParentAppRequest.prototype.setGetBuffers = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearGetBuffers = function() {
  this.setGetBuffers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasGetBuffers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ParentAppDoneRequest done = 2;
 * @return {?proto.ParentAppDoneRequest}
 */
proto.ParentAppRequest.prototype.getDone = function() {
  return /** @type{?proto.ParentAppDoneRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppDoneRequest, 2));
};


/** @param {?proto.ParentAppDoneRequest|undefined} value */
proto.ParentAppRequest.prototype.setDone = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearDone = function() {
  this.setDone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasDone = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ParentReportNumFilesRequest report_num_files = 3;
 * @return {?proto.ParentReportNumFilesRequest}
 */
proto.ParentAppRequest.prototype.getReportNumFiles = function() {
  return /** @type{?proto.ParentReportNumFilesRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentReportNumFilesRequest, 3));
};


/** @param {?proto.ParentReportNumFilesRequest|undefined} value */
proto.ParentAppRequest.prototype.setReportNumFiles = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearReportNumFiles = function() {
  this.setReportNumFiles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasReportNumFiles = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ParentAppLoadBufferRequest load_buffers = 4;
 * @return {?proto.ParentAppLoadBufferRequest}
 */
proto.ParentAppRequest.prototype.getLoadBuffers = function() {
  return /** @type{?proto.ParentAppLoadBufferRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppLoadBufferRequest, 4));
};


/** @param {?proto.ParentAppLoadBufferRequest|undefined} value */
proto.ParentAppRequest.prototype.setLoadBuffers = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearLoadBuffers = function() {
  this.setLoadBuffers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasLoadBuffers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ParentReportFileErrorRequest file_error = 5;
 * @return {?proto.ParentReportFileErrorRequest}
 */
proto.ParentAppRequest.prototype.getFileError = function() {
  return /** @type{?proto.ParentReportFileErrorRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentReportFileErrorRequest, 5));
};


/** @param {?proto.ParentReportFileErrorRequest|undefined} value */
proto.ParentAppRequest.prototype.setFileError = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearFileError = function() {
  this.setFileError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasFileError = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional XpuSendListToDsts send_list_to_dsts = 6;
 * @return {?proto.XpuSendListToDsts}
 */
proto.ParentAppRequest.prototype.getSendListToDsts = function() {
  return /** @type{?proto.XpuSendListToDsts} */ (
    jspb.Message.getWrapperField(this, proto.XpuSendListToDsts, 6));
};


/** @param {?proto.XpuSendListToDsts|undefined} value */
proto.ParentAppRequest.prototype.setSendListToDsts = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearSendListToDsts = function() {
  this.setSendListToDsts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasSendListToDsts = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional XdbGetMetaRequest xdb_get_meta = 7;
 * @return {?proto.XdbGetMetaRequest}
 */
proto.ParentAppRequest.prototype.getXdbGetMeta = function() {
  return /** @type{?proto.XdbGetMetaRequest} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetMetaRequest, 7));
};


/** @param {?proto.XdbGetMetaRequest|undefined} value */
proto.ParentAppRequest.prototype.setXdbGetMeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearXdbGetMeta = function() {
  this.setXdbGetMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasXdbGetMeta = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional XdbGetLocalRowsRequest xdb_get_local_rows = 8;
 * @return {?proto.XdbGetLocalRowsRequest}
 */
proto.ParentAppRequest.prototype.getXdbGetLocalRows = function() {
  return /** @type{?proto.XdbGetLocalRowsRequest} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetLocalRowsRequest, 8));
};


/** @param {?proto.XdbGetLocalRowsRequest|undefined} value */
proto.ParentAppRequest.prototype.setXdbGetLocalRows = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.ParentAppRequest.oneofGroups_[0], value);
};


proto.ParentAppRequest.prototype.clearXdbGetLocalRows = function() {
  this.setXdbGetLocalRows(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParentAppRequest.prototype.hasXdbGetLocalRows = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoParentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoParentRequest.oneofGroups_);
};
goog.inherits(proto.ProtoParentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ProtoParentRequest.displayName = 'proto.ProtoParentRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoParentRequest.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.ProtoParentRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  APP: 2
};

/**
 * @return {proto.ProtoParentRequest.PayloadCase}
 */
proto.ProtoParentRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoParentRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoParentRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoParentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoParentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoParentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    func: jspb.Message.getFieldWithDefault(msg, 1, 0),
    app: (f = msg.getApp()) && proto.ParentAppRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoParentRequest}
 */
proto.ProtoParentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoParentRequest;
  return proto.ProtoParentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoParentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoParentRequest}
 */
proto.ProtoParentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoParentFunc} */ (reader.readEnum());
      msg.setFunc(value);
      break;
    case 2:
      var value = new proto.ParentAppRequest;
      reader.readMessage(value,proto.ParentAppRequest.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoParentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoParentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoParentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFunc();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentAppRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoParentFunc func = 1;
 * @return {!proto.ProtoParentFunc}
 */
proto.ProtoParentRequest.prototype.getFunc = function() {
  return /** @type {!proto.ProtoParentFunc} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ProtoParentFunc} value */
proto.ProtoParentRequest.prototype.setFunc = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ParentAppRequest app = 2;
 * @return {?proto.ParentAppRequest}
 */
proto.ProtoParentRequest.prototype.getApp = function() {
  return /** @type{?proto.ParentAppRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppRequest, 2));
};


/** @param {?proto.ParentAppRequest|undefined} value */
proto.ProtoParentRequest.prototype.setApp = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ProtoParentRequest.oneofGroups_[0], value);
};


proto.ProtoParentRequest.prototype.clearApp = function() {
  this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoParentRequest.prototype.hasApp = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentGetOutputBufferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ParentGetOutputBufferResponse.repeatedFields_, null);
};
goog.inherits(proto.ParentGetOutputBufferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentGetOutputBufferResponse.displayName = 'proto.ParentGetOutputBufferResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ParentGetOutputBufferResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentGetOutputBufferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentGetOutputBufferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentGetOutputBufferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bufsList: jspb.Message.toObjectList(msg.getBufsList(),
    proto.ParentGetOutputBufferResponse.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentGetOutputBufferResponse}
 */
proto.ParentGetOutputBufferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentGetOutputBufferResponse;
  return proto.ParentGetOutputBufferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentGetOutputBufferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentGetOutputBufferResponse}
 */
proto.ParentGetOutputBufferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentGetOutputBufferResponse.Buffer;
      reader.readMessage(value,proto.ParentGetOutputBufferResponse.Buffer.deserializeBinaryFromReader);
      msg.addBufs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentGetOutputBufferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentGetOutputBufferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentGetOutputBufferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBufsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ParentGetOutputBufferResponse.Buffer.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentGetOutputBufferResponse.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentGetOutputBufferResponse.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParentGetOutputBufferResponse.Buffer.displayName = 'proto.ParentGetOutputBufferResponse.Buffer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentGetOutputBufferResponse.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentGetOutputBufferResponse.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentGetOutputBufferResponse.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentGetOutputBufferResponse.Buffer}
 */
proto.ParentGetOutputBufferResponse.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentGetOutputBufferResponse.Buffer;
  return proto.ParentGetOutputBufferResponse.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentGetOutputBufferResponse.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentGetOutputBufferResponse.Buffer}
 */
proto.ParentGetOutputBufferResponse.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentGetOutputBufferResponse.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentGetOutputBufferResponse.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentGetOutputBufferResponse.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.ParentGetOutputBufferResponse.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParentGetOutputBufferResponse.Buffer.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Buffer bufs = 1;
 * @return {!Array<!proto.ParentGetOutputBufferResponse.Buffer>}
 */
proto.ParentGetOutputBufferResponse.prototype.getBufsList = function() {
  return /** @type{!Array<!proto.ParentGetOutputBufferResponse.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ParentGetOutputBufferResponse.Buffer, 1));
};


/** @param {!Array<!proto.ParentGetOutputBufferResponse.Buffer>} value */
proto.ParentGetOutputBufferResponse.prototype.setBufsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ParentGetOutputBufferResponse.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ParentGetOutputBufferResponse.Buffer}
 */
proto.ParentGetOutputBufferResponse.prototype.addBufs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ParentGetOutputBufferResponse.Buffer, opt_index);
};


proto.ParentGetOutputBufferResponse.prototype.clearBufsList = function() {
  this.setBufsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoParentChildResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoParentChildResponse.oneofGroups_);
};
goog.inherits(proto.ProtoParentChildResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ProtoParentChildResponse.displayName = 'proto.ProtoParentChildResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoParentChildResponse.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.ProtoParentChildResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  OUTPUT_BUFFERS: 1,
  GROUP_ID: 2,
  PC_BUF: 3,
  XDB_GET_META: 4,
  XDB_GET_LOCAL_ROWS: 5,
  NUM_ROWS_FAILED_TOTAL: 6
};

/**
 * @return {proto.ProtoParentChildResponse.PayloadCase}
 */
proto.ProtoParentChildResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoParentChildResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoParentChildResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoParentChildResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoParentChildResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoParentChildResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentChildResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputBuffers: (f = msg.getOutputBuffers()) && proto.ParentGetOutputBufferResponse.toObject(includeInstance, f),
    groupId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pcBuf: (f = msg.getPcBuf()) && proto.ParentChildBuf.toObject(includeInstance, f),
    xdbGetMeta: (f = msg.getXdbGetMeta()) && proto.XdbGetMetaResponse.toObject(includeInstance, f),
    xdbGetLocalRows: (f = msg.getXdbGetLocalRows()) && proto.XdbGetLocalRowsResponse.toObject(includeInstance, f),
    numRowsFailedTotal: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoParentChildResponse}
 */
proto.ProtoParentChildResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoParentChildResponse;
  return proto.ProtoParentChildResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoParentChildResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoParentChildResponse}
 */
proto.ProtoParentChildResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentGetOutputBufferResponse;
      reader.readMessage(value,proto.ParentGetOutputBufferResponse.deserializeBinaryFromReader);
      msg.setOutputBuffers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 3:
      var value = new proto.ParentChildBuf;
      reader.readMessage(value,proto.ParentChildBuf.deserializeBinaryFromReader);
      msg.setPcBuf(value);
      break;
    case 4:
      var value = new proto.XdbGetMetaResponse;
      reader.readMessage(value,proto.XdbGetMetaResponse.deserializeBinaryFromReader);
      msg.setXdbGetMeta(value);
      break;
    case 5:
      var value = new proto.XdbGetLocalRowsResponse;
      reader.readMessage(value,proto.XdbGetLocalRowsResponse.deserializeBinaryFromReader);
      msg.setXdbGetLocalRows(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumRowsFailedTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoParentChildResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoParentChildResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoParentChildResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentChildResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputBuffers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParentGetOutputBufferResponse.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPcBuf();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ParentChildBuf.serializeBinaryToWriter
    );
  }
  f = message.getXdbGetMeta();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.XdbGetMetaResponse.serializeBinaryToWriter
    );
  }
  f = message.getXdbGetLocalRows();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.XdbGetLocalRowsResponse.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional ParentGetOutputBufferResponse output_buffers = 1;
 * @return {?proto.ParentGetOutputBufferResponse}
 */
proto.ProtoParentChildResponse.prototype.getOutputBuffers = function() {
  return /** @type{?proto.ParentGetOutputBufferResponse} */ (
    jspb.Message.getWrapperField(this, proto.ParentGetOutputBufferResponse, 1));
};


/** @param {?proto.ParentGetOutputBufferResponse|undefined} value */
proto.ProtoParentChildResponse.prototype.setOutputBuffers = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


proto.ProtoParentChildResponse.prototype.clearOutputBuffers = function() {
  this.setOutputBuffers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoParentChildResponse.prototype.hasOutputBuffers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string group_id = 2;
 * @return {string}
 */
proto.ProtoParentChildResponse.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ProtoParentChildResponse.prototype.setGroupId = function(value) {
  jspb.Message.setOneofField(this, 2, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


proto.ProtoParentChildResponse.prototype.clearGroupId = function() {
  jspb.Message.setOneofField(this, 2, proto.ProtoParentChildResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoParentChildResponse.prototype.hasGroupId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ParentChildBuf pc_buf = 3;
 * @return {?proto.ParentChildBuf}
 */
proto.ProtoParentChildResponse.prototype.getPcBuf = function() {
  return /** @type{?proto.ParentChildBuf} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildBuf, 3));
};


/** @param {?proto.ParentChildBuf|undefined} value */
proto.ProtoParentChildResponse.prototype.setPcBuf = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


proto.ProtoParentChildResponse.prototype.clearPcBuf = function() {
  this.setPcBuf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoParentChildResponse.prototype.hasPcBuf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional XdbGetMetaResponse xdb_get_meta = 4;
 * @return {?proto.XdbGetMetaResponse}
 */
proto.ProtoParentChildResponse.prototype.getXdbGetMeta = function() {
  return /** @type{?proto.XdbGetMetaResponse} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetMetaResponse, 4));
};


/** @param {?proto.XdbGetMetaResponse|undefined} value */
proto.ProtoParentChildResponse.prototype.setXdbGetMeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


proto.ProtoParentChildResponse.prototype.clearXdbGetMeta = function() {
  this.setXdbGetMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoParentChildResponse.prototype.hasXdbGetMeta = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional XdbGetLocalRowsResponse xdb_get_local_rows = 5;
 * @return {?proto.XdbGetLocalRowsResponse}
 */
proto.ProtoParentChildResponse.prototype.getXdbGetLocalRows = function() {
  return /** @type{?proto.XdbGetLocalRowsResponse} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetLocalRowsResponse, 5));
};


/** @param {?proto.XdbGetLocalRowsResponse|undefined} value */
proto.ProtoParentChildResponse.prototype.setXdbGetLocalRows = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


proto.ProtoParentChildResponse.prototype.clearXdbGetLocalRows = function() {
  this.setXdbGetLocalRows(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoParentChildResponse.prototype.hasXdbGetLocalRows = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 num_rows_failed_total = 6;
 * @return {number}
 */
proto.ProtoParentChildResponse.prototype.getNumRowsFailedTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ProtoParentChildResponse.prototype.setNumRowsFailedTotal = function(value) {
  jspb.Message.setOneofField(this, 6, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


proto.ProtoParentChildResponse.prototype.clearNumRowsFailedTotal = function() {
  jspb.Message.setOneofField(this, 6, proto.ProtoParentChildResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ProtoParentChildResponse.prototype.hasNumRowsFailedTotal = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.ProtoChildFunc = {
  CHILD_FUNC_SHUT_DOWN: 0,
  CHILD_FUNC_UDF_EVAL: 1,
  CHILD_FUNC_APP_START: 2,
  CHILD_FUNC_UDF_ADD: 3,
  CHILD_FUNC_UDF_UPDATE: 4,
  CHILD_FUNC_UDF_LIST_FUNCTIONS: 5,
  CHILD_FUNC_RECV_BUFFER_FROM_SRC: 6,
  CHILD_FUNC_UDF_INIT: 7
};

/**
 * @enum {number}
 */
proto.ProtoParentFunc = {
  PARENT_FUNC_CONNECT: 0,
  PARENT_FUNC_APP_DONE: 1,
  PARENT_FUNC_APP_GET_GROUP_ID: 2,
  PARENT_FUNC_APP_REPORT_NUM_FILES: 3,
  PARENT_FUNC_APP_LOAD_BUFFER: 4,
  PARENT_FUNC_APP_GET_OUTPUT_BUFFER: 5,
  PARENT_FUNC_APP_REPORT_FILE_ERROR: 6,
  PARENT_FUNC_XPU_SEND_LIST_TO_DSTS: 7,
  PARENT_FUNC_XDB_GET_META: 8,
  PARENT_FUNC_XDB_GET_LOCAL_ROWS: 9
};

goog.object.extend(exports, proto);
