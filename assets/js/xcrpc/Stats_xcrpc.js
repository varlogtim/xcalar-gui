// **********************************************************************
// *** DO NOT EDIT!  This file was autogenerated by xcrpc             ***
// **********************************************************************
// Copyright 2018 Xcalar, Inc. All rights reserved.
//
// No use, or distribution, of this source code is permitted in any form or
// means without a valid, written license agreement with Xcalar, Inc.
// Please refer to the included "COPYING" file for terms and conditions
// regarding the use and redistribution of this software.
//

var client = require("./Client");
var service = require('./xcalar/compute/localtypes/Service_pb');

var stats = require("./xcalar/compute/localtypes/Stats_pb");
var proto_empty = require("google-protobuf/google/protobuf/empty_pb");


////////////////////////////////////////////////////////////////////////////////
// Constructors
////////////////////////////////////////////////////////////////////////////////

function StatsService(client) {
    this.client = client;
}

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

StatsService.prototype = {
    getStats: async function(getStatsRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(getStatsRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Stats.GetStatsRequest");
        //anyWrapper.pack(getStatsRequest.serializeBinary(), "GetStatsRequest");

        try {
            var responseData = await this.client.execute("Stats", "GetStats", anyWrapper);
            var specificBytes = responseData.getValue();
            // XXX Any.unpack() is only available in protobuf 3.2; see above
            //var getStatsResponse =
            //    responseData.unpack(stats.GetStatsResponse.deserializeBinary,
            //                        "GetStatsResponse");
            var getStatsResponse = stats.GetStatsResponse.deserializeBinary(specificBytes);
            return getStatsResponse;
        } catch(error) {
            if (error.response != null) {
                const specificBytes = error.response.getValue();
                error.response = stats.GetStatsResponse.deserializeBinary(specificBytes);
            }
            throw error;
        }
    },
    resetStat: async function(resetStatRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(resetStatRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Stats.ResetStatRequest");
        //anyWrapper.pack(resetStatRequest.serializeBinary(), "ResetStatRequest");

        try {
            var responseData = await this.client.execute("Stats", "ResetStat", anyWrapper);
            var specificBytes = responseData.getValue();
            // XXX Any.unpack() is only available in protobuf 3.2; see above
            //var empty =
            //    responseData.unpack(proto_empty.Empty.deserializeBinary,
            //                        "Empty");
            var empty = proto_empty.Empty.deserializeBinary(specificBytes);
            return empty;
        } catch(error) {
            if (error.response != null) {
                const specificBytes = error.response.getValue();
                error.response = proto_empty.Empty.deserializeBinary(specificBytes);
            }
            throw error;
        }
    },
    getStatGroupIdMap: async function(getStatGroupIdMapRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(getStatGroupIdMapRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Stats.GetStatGroupIdMapRequest");
        //anyWrapper.pack(getStatGroupIdMapRequest.serializeBinary(), "GetStatGroupIdMapRequest");

        try {
            var responseData = await this.client.execute("Stats", "GetStatGroupIdMap", anyWrapper);
            var specificBytes = responseData.getValue();
            // XXX Any.unpack() is only available in protobuf 3.2; see above
            //var getStatGroupIdMapResponse =
            //    responseData.unpack(stats.GetStatGroupIdMapResponse.deserializeBinary,
            //                        "GetStatGroupIdMapResponse");
            var getStatGroupIdMapResponse = stats.GetStatGroupIdMapResponse.deserializeBinary(specificBytes);
            return getStatGroupIdMapResponse;
        } catch(error) {
            if (error.response != null) {
                const specificBytes = error.response.getValue();
                error.response = stats.GetStatGroupIdMapResponse.deserializeBinary(specificBytes);
            }
            throw error;
        }
    },
    getStatFromNodeId: async function(getStatFromNodeIdRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(getStatFromNodeIdRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Stats.GetStatFromNodeIdRequest");
        //anyWrapper.pack(getStatFromNodeIdRequest.serializeBinary(), "GetStatFromNodeIdRequest");

        try {
            var responseData = await this.client.execute("Stats", "GetStatFromNodeId", anyWrapper);
            var specificBytes = responseData.getValue();
            // XXX Any.unpack() is only available in protobuf 3.2; see above
            //var getStatFromNodeIdResponse =
            //    responseData.unpack(stats.GetStatFromNodeIdResponse.deserializeBinary,
            //                        "GetStatFromNodeIdResponse");
            var getStatFromNodeIdResponse = stats.GetStatFromNodeIdResponse.deserializeBinary(specificBytes);
            return getStatFromNodeIdResponse;
        } catch(error) {
            if (error.response != null) {
                const specificBytes = error.response.getValue();
                error.response = stats.GetStatFromNodeIdResponse.deserializeBinary(specificBytes);
            }
            throw error;
        }
    },
};

exports.StatsService = StatsService;
