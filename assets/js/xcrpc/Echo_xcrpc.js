// **********************************************************************
// *** DO NOT EDIT!  This file was autogenerated by xcrpc             ***
// **********************************************************************
// Copyright 2018 Xcalar, Inc. All rights reserved.
//
// No use, or distribution, of this source code is permitted in any form or
// means without a valid, written license agreement with Xcalar, Inc.
// Please refer to the included "COPYING" file for terms and conditions
// regarding the use and redistribution of this software.
//

var jQuery = require('jquery');
var client = require("./Client");
var service = require('./xcalar/compute/localtypes/Service_pb');

var echo = require("./xcalar/compute/localtypes/Echo_pb");
var proto_empty = require("google-protobuf/google/protobuf/empty_pb");


////////////////////////////////////////////////////////////////////////////////
// Constructors
////////////////////////////////////////////////////////////////////////////////

function Echo(client) {
    this.client = client;
}

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

Echo.prototype = {
    echoMessage: function(echoRequest) {
        var deferred = jQuery.Deferred();
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(echoRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Echo.EchoRequest");
        //anyWrapper.pack(echoRequest.serializeBinary(), "EchoRequest");

        var response = this.client.execute("Echo", "EchoMessage", anyWrapper)
        .then(function(responseData) {
            var specificBytes = responseData.getValue();
            // XXX Any.unpack() is only available in protobuf 3.2; see above
            //var echoResponse =
            //    responseData.unpack(echo.EchoResponse.deserializeBinary,
            //                        "EchoResponse");
            var echoResponse = echo.EchoResponse.deserializeBinary(specificBytes);
            deferred.resolve(echoResponse);
        })
        .fail(function(error) {
            console.log("echoMessage fail:" + JSON.stringify(error));
            deferred.reject(error);
        });
        return deferred.promise();
    },
    echoErrorMessage: function(echoErrorRequest) {
        var deferred = jQuery.Deferred();
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(echoErrorRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Echo.EchoErrorRequest");
        //anyWrapper.pack(echoErrorRequest.serializeBinary(), "EchoErrorRequest");

        var response = this.client.execute("Echo", "EchoErrorMessage", anyWrapper)
        .then(function(responseData) {
            var specificBytes = responseData.getValue();
            // XXX Any.unpack() is only available in protobuf 3.2; see above
            //var empty =
            //    responseData.unpack(proto_empty.Empty.deserializeBinary,
            //                        "Empty");
            var empty = proto_empty.Empty.deserializeBinary(specificBytes);
            deferred.resolve(empty);
        })
        .fail(function(error) {
            console.log("echoErrorMessage fail:" + JSON.stringify(error));
            deferred.reject(error);
        });
        return deferred.promise();
    },
};

exports.Echo = Echo;
