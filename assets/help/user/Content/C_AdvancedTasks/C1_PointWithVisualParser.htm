<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Advanced tasks">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Using a visual parser to create a UDF</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.5.5.0.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <link href="../Fonts/open-sans.regular.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Semibold.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Light.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Bold.ttf" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.topic-ratings-button
{
	-pie-background: transparent url('../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../Resources/TableStyles/SimpleTable.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.5.5.0_custom.js">
        </script>
        <script src="../../Resources/Scripts/foundation.offcanvas.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap">
            <div class="off-canvas-wrap" data-offcanvas="">
                <section class="inner-wrap">
                    <nav class="tab-bar" data-mc-ignore="true">
                        <section class="middle tab-bar-section outer-row clearfix">
                            <div class="relative clearfix"><a class="logo" href="../Home.htm" alt="Logo"></a>
                                <div class="navigation-wrapper">
                                    <ul class="navigation clearfix">
                                        <li class="has-children"><a href="../A_GettingStarted/GettingStarted.htm">Getting started</a>
                                            <ul class="sub-menu">
                                                <li><a href="../A_GettingStarted/A_Requirements.htm">Requirements for Xcalar Design</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/B_BasicConcepts.htm">Basic Xcalar concepts</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/B1_PreviewSteps.htm">Steps for Xcalar Cloud Preview</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/B2_PrepareDataSource.htm">Preparing the data source</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/C_EasySteps.htm">Easy steps for Xcalar 1.2 (with default settings)</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/D_DetailedStepsForPointing.htm">Detailed steps for Xcalar 1.2 (with custom settings)</a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="has-children"><a href="../B_CommonTasks/CommonTasks.htm">Common tasks</a>
                                            <ul class="sub-menu">
                                                <li><a href="../B_CommonTasks/A_ManageDatasetRef.htm">Managing datasets</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/B_CreateTable.htm">Creating a table</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/C_AddColumns.htm">Adding columns from a dataset to a table</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/D_ChangeDataType.htm">Changing the data type for a column</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/E_CountOccurrencesOfValues.htm">Counting occurrences of unique values in a column</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/E1_SortAndQuartile.htm">Sorting a column and finding quartiles</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/F_UndoRedo.htm">Undoing and redoing an operation</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/G_FilterValue.htm">Filtering in a table column</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/H_ErroneousRows.htm">Creating a table with erroneous rows only</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/I_JoinTables.htm">Joining tables</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/J_GroupBy.htm">Grouping data in a table</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/K_Map.htm">Using the Map function to create new values</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/L_Correlation.htm">Determining correlation between two values</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/M_QuickAggregates.htm">Determining aggregate values</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/N_ChangeTableStatus.htm">Understanding and changing a table status</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/O_ManageWorksheet.htm">Managing worksheets</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/P_UnderstandFNF.htm">Working with a table containing FNF</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/Q_SearchTableOrColName.htm">Searching for a table or column</a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="has-children"><a href="AdvancedTasks.htm">Advanced tasks</a>
                                            <ul class="sub-menu">
                                                <li><a href="A_Extensions.htm">Using extensions</a>
                                                </li>
                                                <li><a href="B_UDFUnderstand.htm">Understanding user-defined functions (UDFs)</a>
                                                </li>
                                                <li><a href="C_UDFTasks.htm">Using user-defined functions (UDFs)</a>
                                                </li>
                                                <li><a href="#" class="selected">Using a visual parser to create a UDF</a>
                                                </li>
                                                <li><a href="D_FunctionBar.htm">Using the function  bar</a>
                                                </li>
                                                <li><a href="E_CreateBatchDataflow.htm">Understanding and creating batch dataflows</a>
                                                </li>
                                                <li><a href="F_UseBatchDataflow.htm">Using batch dataflows</a>
                                                </li>
                                                <li><a href="F1_ScheduleBatchDataflow.htm">Scheduling batch dataflows</a>
                                                </li>
                                                <li><a href="G_ExportTable.htm">Exporting a table</a>
                                                </li>
                                                <li><a href="H_Parameterization.htm">Parameterizing operations</a>
                                                </li>
                                                <li><a href="I_UnderstandMemoryUse.htm">Understanding memory usage</a>
                                                </li>
                                                <li><a href="J_OptimizeMemory.htm">Optimizing memory usage</a>
                                                </li>
                                                <li><a href="K_Monitor.htm">Using the Monitor</a>
                                                </li>
                                                <li><a href="K1_Troubleshooting.htm">Troubleshooting</a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="has-children"><a href="../D_Reference/Reference.htm">Reference</a>
                                            <ul class="sub-menu">
                                                <li><a href="../D_Reference/A_InsightWindow.htm">Xcalar Design window</a>
                                                </li>
                                                <li><a href="../D_Reference/B_WkbkBrowser.htm">Workbook Browser</a>
                                                </li>
                                                <li><a href="../D_Reference/C_WorksheetWindow.htm">Worksheet window with tables</a>
                                                </li>
                                                <li><a href="../D_Reference/D_DataBrowser.htm">Data Browser</a>
                                                </li>
                                                <li><a href="../D_Reference/E_DataflowGraph.htm">Dataflow graph</a>
                                                </li>
                                                <li><a href="../D_Reference/F_Table_options.htm">Table options</a>
                                                </li>
                                                <li><a href="../D_Reference/G_ColumnOptions.htm">Column options</a>
                                                </li>
                                                <li><a href="../D_Reference/H_CellOptions.htm">Cell options</a>
                                                </li>
                                                <li><a href="../D_Reference/H1_UdfExamples.htm">User-defined function (UDF) examples</a>
                                                </li>
                                                <li><a href="../D_Reference/I_MapFunctions.htm">Map functions</a>
                                                </li>
                                                <li><a href="../D_Reference/J_ExcelComparison.htm">Excel-equivalent functions</a>
                                                </li>
                                                <li><a href="../D_Reference/K_SASComparison.htm">SAS-equivalent functions</a>
                                                </li>
                                                <li><a href="../D_Reference/L_Glossary.htm">Glossary</a>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                </div><a class="menu-icon right-off-canvas-toggle" href="#"><span></span></a>
                            </div>
                        </section>
                        <div class="nav-search row outer-row">
                            <form class="search" action="#">
                                <div class="search-bar search-bar-container needs-pie">
                                    <input class="search-field needs-pie" type="search" placeholder="Search" />
                                    <div class="search-filter-wrapper">
                                        <div class="search-filter">
                                            <div class="search-filter-content">
                                                <ul>
                                                    <li>All Files</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="search-submit-wrapper" dir="ltr">
                                        <div class="search-submit" title="Search">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </nav>
                    <aside class="right-off-canvas-menu" data-mc-ignore="true">
                        <ul class="off-canvas-list" data-mc-back-link="Back" data-mc-css-tree-node-expanded="has-submenu" data-mc-css-tree-node-collapsed="has-submenu" data-mc-css-sub-menu="right-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.fndtn.offcanvas" data-mc-toc="True">
                        </ul>
                    </aside>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <div id="contentBody">
                                <div class="row collapse">
                                    <div class="sideContent">
                                        <div class="clearfix">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component">
                                                <div class="button-group-container-left">
                                                    <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                    </button>
                                                    <button class="button needs-pie next-topic-button" title="Navigate next">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                    </button>
                                                    <div class="button-group star-buttons loading feedback-topic-required">
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                    </div>
                                                    <div class="button-separator">
                                                    </div>
                                                    <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                    </button>
                                                    <button class="button needs-pie print-button" title="Print">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <ul class="menu _Skins_SideMenu mc-component">
                                            <li class="has-children"><a href="AdvancedTasks.htm">Advanced tasks</a>
                                                <ul class="sub-menu">
                                                    <li><a href="A_Extensions.htm">Using extensions</a>
                                                    </li>
                                                    <li><a href="B_UDFUnderstand.htm">Understanding user-defined functions (UDFs)</a>
                                                    </li>
                                                    <li><a href="C_UDFTasks.htm">Using user-defined functions (UDFs)</a>
                                                    </li>
                                                    <li><a href="#" class="selected">Using a visual parser to create a UDF</a>
                                                    </li>
                                                    <li><a href="D_FunctionBar.htm">Using the function  bar</a>
                                                    </li>
                                                    <li><a href="E_CreateBatchDataflow.htm">Understanding and creating batch dataflows</a>
                                                    </li>
                                                    <li><a href="F_UseBatchDataflow.htm">Using batch dataflows</a>
                                                    </li>
                                                    <li><a href="F1_ScheduleBatchDataflow.htm">Scheduling batch dataflows</a>
                                                    </li>
                                                    <li><a href="G_ExportTable.htm">Exporting a table</a>
                                                    </li>
                                                    <li><a href="H_Parameterization.htm">Parameterizing operations</a>
                                                    </li>
                                                    <li><a href="I_UnderstandMemoryUse.htm">Understanding memory usage</a>
                                                    </li>
                                                    <li><a href="J_OptimizeMemory.htm">Optimizing memory usage</a>
                                                    </li>
                                                    <li><a href="K_Monitor.htm">Using the Monitor</a>
                                                    </li>
                                                    <li><a href="K1_Troubleshooting.htm">Troubleshooting</a>
                                                    </li>
                                                </ul>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="AdvancedTasks.htm">Advanced tasks</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Using a visual parser to create a UDF</span>
                                    </div>
                                    <div class="bodyProxyNarrow">
                                        <h1><a name="Using" class="ForCSH"></a>Using a visual parser to create a UDF</h1>
                                        <p>When you use <span class="GeneralProductName">Xcalar Design</span> to point to a data source,  the Previewing section of the <span class="UIelement">Point To Data Source</span> window might not present the data in your desired tabular format. For example, you might want items in a JSON&#160;array to be placed in separate columns, but each table column in the Previewing section contains an entire array. For <span class="GeneralProductName">Xcalar Design</span> to arrange the data in a way that you can easily read and manipulate later,  run a streaming UDF when pointing to the data. </p>
                                        <p>If the UDF&#160;already exists, simply click the check box for <span class="UIelement">Parse Data With UDF</span> and select the appropriate UDF as described in <a href="../A_GettingStarted/D_DetailedStepsForPointing.htm#Creating2" class="MCXref xref">Pointing to your data source</a>. </p>
                                        <p>If the UDF does not exist, create one as described in <a href="C_UDFTasks.htm" class="MCXref xref">Using UDFs</a>. Alternatively, use the visual parser to generate a UDF.</p>
                                        <h2>Understanding the visual parser</h2>
                                        <p>If the UDF&#160;for parsing data does not exist, you must create one appropriate to the data source. Typically, you create a UDF by either using the UDF editor in <span class="GeneralProductName">Xcalar Design</span> or by writing it on your computer and uploading it. </p>
                                        <p>To create a streaming UDF, you have an additional option:&#160;You can use a point-and-click mechanism offered in the <span class="UIelement">Point to Data Source</span> window. The method is called a visual parser because you can visually inspect the entire source file and add keys.  This method enables you to create a UDF&#160;with no knowledge of the Python language. <span class="GeneralProductName">Xcalar Design</span> automatically writes the UDF for you based on the keys selected.</p>
                                        <p>Visual parsers are currently available only to data files in JSON, XML, or plain text format.</p>
                                        <div class="Note"><span class="label">NOTE</span>:&#160;The visual parser for a text file does not create a UDF. The main purpose of using a visual parser for a text file is to examine the contents of the entire source file. This is particularly useful for large files because they are harder to browse elsewhere in <span class="GeneralProductName">Xcalar Design</span>.</div>
                                        <h2>Understanding the schema in the visual parser</h2>
                                        <p>The visual parser displays a <span class="state">Preview Mode</span> pane in which you can see a consolidated JSON&#160;schema or an XML schema. Through examining the schema, you can better understand the structure of your source data. Knowledge about the structure enables you to provide information to  <span class="GeneralProductName">Xcalar Design</span> so that it can create an appropriate UDF.</p>
                                        <p>The exact contents of the <span class="state">Preview Mode</span> pane depend on whether the file format is JSON&#160;or XML.</p>
                                        <h3>JSON schema</h3>
                                        <p>A consolidated JSON&#160;schema describes the structure of all JSON&#160;strings  in the source file. For each string, you can see how objects are nested, the data type for each value, and so on. </p>
                                        <p>The following screenshot shows an example of a consolidated JSON&#160;schema in the <span class="UIelement">Preview Mode</span> pane. Notice that JSON values are not displayed in the schema. Also, while a key such as <span class="UIelement">a</span> appears multiple times in the source file, the schema consolidates the information about the key and shows its data type only once. In this example, you know from the schema that the data type of the key <span class="UIelement">a</span> is String.</p>
                                        <p>
                                            <img src="../Resources/Images/XD_screenshots/json-schema.png" />
                                        </p>
                                        <h3>XML&#160;schema</h3>
                                        <p>An XML schema describes the entire structure of the XML&#160;file.</p>
                                        <p>The following screenshot shows an example of an XML&#160;schema:</p>
                                        <p>
                                            <img src="../Resources/Images/XD_screenshots/xmlschema.png" />
                                        </p>
                                        <h2>Using a visual parser</h2>
                                        <p>Follow these steps to create a UDF&#160;with a visual parser:</p>
                                        <ol>
                                            <li value="1">
                                                <p>To start the visual parser, click <span class="UIelement">ADVANCED&#160;USUAL&#160;PARSER</span> in the <span class="UIelement">Point to Data Source</span> window. </p>
                                                <p>If the data source is a file, go to step 3.</p>
                                            </li>
                                            <li value="2">
                                                <p>If the data source is a directory, the <span class="UIelement">Select File To Parse</span> modal window is displayed. For JSON&#160;and XML files, select the file that contains the most keys. This enables you to choose all the keys in the visual parser that are necessary for creating the desired records. </p>
                                                <p>After making the selection, click <span class="UIelement">PARSE</span>. </p>
                                            </li>
                                            <li value="3">
                                                <p>The <span class="UIelement">Data Source Parser</span> window is displayed. The left side of the window enables you to preview the contents of the source file with added newlines, line numbers, and indentation. The right side of the window depends on the source file format.</p>
                                                <p>The following screenshot shows a sample JSON&#160;file for a visual parser.</p>
                                                <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../Resources/Images/XD_screenshots/visual-parser1.png"><img class="MCPopupThumbnail img imgBigImage" data-mc-width="1194" data-mc-height="521" src="../Resources/Images/XD_screenshots/visual-parser1_thumb_0_150.png" tabindex="" /></a>
                                                </p>
                                                <p>If the format of the source file is Text, <span class="UIelement">Record Delimiter</span> pane is displayed instead of <span class="UIelement">Preview Mode</span> pane.</p>
                                            </li>
                                            <li value="4">
                                                <p>This step is only for a text file. Go to step 5 if the file is a JSON&#160;or XML&#160;file.</p>
                                                <p>In the <span class="UIelement">Record Delimiter</span> window, type the character for separating the records or accept the default, which is the newline character. (This is the same character that you would type in the <span class="UIelement">Record Delimiter</span> field of the <span class="UIelement">Point to Data Source</span> window.) Then go to step 6.</p>
                                            </li>
                                            <li value="5">
                                                <p>Select the keys for the visual parser. Each key  become one or more records in the <span class="GeneralProductName">Xcalar Design</span> table. </p>
                                                <p>For a JSON&#160;file, a key can be one of the following:</p>
                                                <ul>
                                                    <li value="1">an array</li>
                                                    <li value="2">an object value in an array. (Array values of other types are ignored by the parser.)</li>
                                                    <li value="3">an object</li>
                                                </ul>
                                                <p>For an XML&#160;file, a key is an XML element.</p>
                                                <p>To select a key, follow these steps:</p>
                                                <ol style="list-style-type: lower-alpha;">
                                                    <li value="1">
                                                        <p>For an XML file, in the main Previewing window, double click or highlight the opening or closing tag.</p>
                                                        <p>For a JSON&#160;file, in the main Previewing window, double click an opening brace or bracket to select an object or array, respectively. Double-clicking any name within the braces or brackets (or the closing brace or bracket) achieve the same effect. Suppose the window shows that your file contains the following array:</p>
                                                        <p class="sampleCode">3 &#160;&#160;"Quote": [</p>
                                                        <p class="sampleCode">4&#160;&#160;&#160;&#160;&#160;{</p>
                                                        <p class="sampleCode"> 5&#160;&#160;&#160;&#160;&#160;&#160;&#160;"Currency": "USD",</p>
                                                        <p class="sampleCode">6&#160;&#160;&#160;&#160;&#160;&#160;&#160; "MeasureType": "Percentage",</p>
                                                        <p class="sampleCode">7&#160;&#160;&#160;&#160;&#160;&#160; &#160;"Value": "0.1234567"</p>
                                                        <p class="sampleCode">8&#160;&#160;&#160;&#160;&#160;},</p>
                                                        <p class="sampleCode">9&#160;&#160;&#160;&#160;&#160;{</p>
                                                        <p class="sampleCode">10&#160;&#160; &#160;&#160;&#160;&#160;"Currency": "USD",</p>
                                                        <p class="sampleCode">11&#160;&#160;&#160;&#160;&#160;&#160;"MeasureType": "ExecutedSpread",</p>
                                                        <p class="sampleCode">12&#160;&#160;&#160;&#160;&#160;&#160; "Value": "12.345"</p>
                                                        <p class="sampleCode">13&#160;&#160;&#160;&#160;}</p>
                                                        <p class="sampleCode">14&#160;&#160;&#160;],</p>
                                                        <p>The following table illustrates how to select various keys in the sample JSON&#160;string:</p>
                                                        <table class="TableStyle-SimpleTable" style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                                            <thead>
                                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">To select…</th>
                                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Do this…</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">First object of the Quote array</td>
                                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
                                                                        <p>Double click Currency, MeasureType, or Value on line 5, 6, or 7.</p>
                                                                        <p>You can also double click or highlight the opening or closing brace  on line 4 or 8.</p>
                                                                    </td>
                                                                </tr>
                                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Second object of the Quote array</td>
                                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">
                                                                        <p>Double click Currency, MeasureType, or Value on line 10, 11, or 12. </p>
                                                                        <p>You can also double click the opening or closing brace on line 9 or 13.</p>
                                                                    </td>
                                                                </tr>
                                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">The Quote array</td>
                                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body1">Double click the opening or closing square bracket on line 3 or 14.</td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </li>
                                                    <li value="2">
                                                        <p>In the pop-up menu displayed after you double click a name, you can select whether the full or partial path is used for identifying the selected key.  The following screenshot shows the pop-up menu after you double click an array value in a JSON&#160;file.</p>
                                                        <p>
                                                            <img src="../Resources/Images/XD_screenshots/visual-parser2.png" />
                                                        </p>
                                                        <p>In this example, if you select <span class="UIelement">Full Path</span>, the complete path to the Quote array is used. The path to the array is as follows:</p>
                                                        <p>aaaaaaagya:Message.Transaction.Quote</p>
                                                        <p> If you select <span class="UIelement">Partial Path</span>, the names of the objects nesting the Quote array are ignored. The path to the array is as follows:</p>
                                                        <p>Quote</p>
                                                        <p>Being able to select a full or partial path means you can distinguish values of fields or tags that have the same name but are nested differently.</p>
                                                    </li>
                                                </ol>
                                            </li>
                                            <li value="6">
                                                <p>Verify in the <span class="UIelement">Selected Keys</span> window that the keys are correct. To remove a key, click the trash can icon for the key. The following screenshot is an example of the <span class="UIelement">Selected Keys</span> window:</p>
                                                <p>
                                                    <img src="../Resources/Images/XD_screenshots/visual-parser3.png" />
                                                </p>
                                            </li>
                                            <li value="7">Click <span class="UIelement">NEXT</span> in the <span class="UIelement">Data Source Parser</span> window. If the source file is a text file, the <span class="UIelement">Point to Data Source</span> window is displayed. Go to step 8. If your file is a JSON&#160;or XML&#160;file, go to the next step.</li>
                                            <li value="8">
                                                <p>A message is displayed asking whether you want to submit the visual parser, which means submitting the information to <span class="GeneralProductName">Xcalar Design</span> for it to generate the streaming UDF. Click <span class="UIelement">CONFIRM</span> if you want to generate the UDF. If you want to return to the <span class="UIelement">Data Source Parser</span> window to make changes, click <span class="UIelement">CANCEL</span>.</p>
                                                <div class="Note"><span class="label">NOTE</span>: If the data source is a directory, the <span class="UIelement">Preview Mode</span> might not include some JSON&#160;strings or XML&#160;tags that you want for creating records. This is because the file you selected for parsing does not contain the desired strings or tags.&#160;To include keys that are not selectable in the Previewing window, additional steps are necessary as described in <a href="#Adding" class="MCXref xref selected">Adding keys not selectable in the file shown in the visual parser</a>.</div>
                                            </li>
                                            <li value="9">
                                                <p>After <span class="GeneralProductName">Xcalar Design</span> generates the UDF, it displays the&#160;<span class="UIelement">Point to Data Source</span> window. This time the check box for <span class="UIelement">Parse Data With UDF</span> and the newly created UDF are selected automatically as shown in the following partial screenshot. When you point to the data source, this UDF will be executed to parse the data.</p>
                                                <p>Also, this UDF is saved just like other UDFs. You can view it in the <span class="UIelement">User Defined Function</span> panel.</p>
                                                <p>
                                                    <img src="../Resources/Images/XD_screenshots/visual-parser4.png" />
                                                </p>
                                            </li>
                                            <li value="10">
                                                <p>In the same window, a table preview is provided as usual. Based on the preview, you can determine how to specify values for other options in this window. Click <span class="UIelement">REFRESH&#160;PREVIEW</span> to see how your specified values affect the way data is arranged in the table. You can also click <span class="UIelement">ADVANCED&#160;VISUAL&#160;PARSER</span> to return to the parser.</p>
                                                <p>If the table in the preview is satisfactory, create the dataset.</p>
                                            </li>
                                        </ol>
                                        <h2><a name="Adding"></a>Adding keys not selectable in the file shown in the visual parser</h2>
                                        <div class="Note"><span class="label">IMPORTANT</span>:&#160;This section is for advanced users who are familiar with the source files and Python. If you introduce errors when editing the UDF, your data source cannot to be parsed correctly.</div>
                                        <p><span class="GeneralProductName">Xcalar Design</span> allows you to point to a directory. The files in the directory might contain different JSON&#160;strings or XML&#160;tags. The <span class="UIelement">Preview Mode</span> window of the visual parser only reflects the strings or tags of the file you selected for parsing. To select a JSON&#160;object or an XML tag in another file, you need to edit the UDF&#160;manually. </p>
                                        <p>Follow these steps to add a key to the UDF&#160;created by the visual parser:</p>
                                        <ol>
                                            <li value="1">After you submit the visual parser, the <span class="UIelement">Point to Data Source</span> window displays the name of the UDF in the <span class="UIelement">Parse Data With UDF</span> field. This is the UDF to which you need to add the desired key.</li>
                                            <li value="2">Open the <span class="UIelement">User Defined Function</span> panel and click the <span class="UIelement">Manager</span> tab to list the UDFs. Locate the UDF created by the visual parser and click the <span class="UIelement">Edit</span> icon for the UDF.</li>
                                            <li value="3">
                                                <p>Use the UDF&#160;editor to add the desired key.&#160;The following partial screenshot shows how to use the UDF&#160;editor to add an XML&#160;tag  as a full path (/html/head/meta):</p>
                                                <p>
                                                    <img src="../Resources/Images/XD_screenshots/visual-parser-add-key-manually.png" />
                                                </p>
                                            </li>
                                            <li value="4">Click <span class="UIelement">ADD&#160;UDF</span>. </li>
                                            <li value="5">When the <span class="UIelement">DUPLICATE&#160;MODULE</span> modal window is displayed, click <span class="UIelement">CONFIRM</span>. This overwrites the original contents of the UDF. Now you have a UDF with the desired keys for generating records.</li>
                                            <li value="6">In the <span class="UIelement">Point to Data Source</span> window, click <span class="UIelement">REFRESH&#160;PREVIEW</span> to see the table with the edited UDF. Then create the dataset.</li>
                                        </ol>
                                        <h2>Understanding the table created by a visual parser</h2>
                                        <p>A table created by a visual parser contains columns that provide information about the visual parser as explained in the following list:</p>
                                        <ul>
                                            <li value="1">The <span class="UIelement">xcPath</span> column shows the path to the object that is displayed as a record in the table. </li>
                                            <li value="2">The <span class="UIelement">xcMethod</span> column indicates whether the path to the object is a full path or a partial path.</li>
                                            <li value="3">
                                                <p>If an error occurs when the UDF&#160;processes the data, the xcParserError column is created. The value in this column is True, and the value in the xcPath column is the path to the key causing the error. One row is created to indicate that the path causes at least one error. The table does not indicate the number of errors or the location of the error in the source file.</p>
                                                <div class="Example"><span class="label">EXAMPLE</span>:&#160;A key you selected is supposed to result in four records in the table. However, while the first two records contain correct values, the third and fourth records cannot be parsed due to errors. <span class="GeneralProductName">Xcalar Design</span> displays one row in the table for these erroneous records, in which xcParserError shows True, and the xcPath shows the path to the key. </div>
                                            </li>
                                        </ul>
                                        <p>The following screenshot illustrates a table with one record containing an object named Quote. The full path to the Quote object is used to create this table.</p>
                                        <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../Resources/Images/XD_screenshots/visual-parser-full-path.png"><img class="MCPopupThumbnail img imgBigImage" data-mc-width="1001" data-mc-height="234" src="../Resources/Images/XD_screenshots/visual-parser-full-path_thumb_0_150.png" tabindex="" /></a>
                                        </p>
                                    </div>
                                    <p><a href="#Top" class="selected">Go to top</a>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </section><a class="exit-off-canvas"></a>
                </section>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>