<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Getting started">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Basic Xcalar concepts</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <link href="../Fonts/open-sans.regular.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Semibold.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Light.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Bold.ttf" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.topic-ratings-button
{
	-pie-background: transparent url('../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="relative clearfix"><a class="logo" href="../Home.htm" alt="Logo"></a>
                                    <div class="navigation-wrapper nocontent">
                                        <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="nav-search row outer-row">
                                <form class="search" action="#">
                                    <div class="search-bar search-bar-container needs-pie">
                                        <input class="search-field needs-pie" type="search" placeholder="Search" />
                                        <div class="search-filter-wrapper">
                                            <div class="search-filter">
                                                <div class="search-filter-content">
                                                    <ul>
                                                        <li>All Files</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="search-submit-wrapper" dir="ltr">
                                            <div class="search-submit" title="Search">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <div id="contentBody">
                                <div class="row collapse">
                                    <div class="sideContent">
                                        <div class="clearfix">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                <div class="button-group-container-left">
                                                    <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                    </button>
                                                    <button class="button needs-pie next-topic-button" title="Navigate next">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                    </button>
                                                    <div class="button-group star-buttons loading feedback-topic-required">
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                    </div>
                                                    <div class="button-separator">
                                                    </div>
                                                    <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                    </button>
                                                    <button class="button needs-pie print-button" title="Print">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/XD_help.js" data-mc-side-menu="True" data-mc-max-depth="-1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        </ul>
                                    </div>
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <div class="bodyProxyNarrow">
                                        <h1>Basic <MadCap:conditionalText data-mc-conditions="General.XDHelp"><span class="GeneralCompanyNameShort">Xcalar</span></MadCap:conditionalText> concepts</h1>
                                        <p>This section explains basic concepts you must understand to use <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> efficiently.</p>
                                        <h2>Understanding the purpose of <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span></h2>
                                        <p><span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> is an HTML5-based visual tool that enables you to interactively and intuitively design algorithms through elementary operations. By manipulating the values in the tables presented in the graphical user interface, you can clean and consolidate your data before performing data analysis. You can also publish data from <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> to a Jupyter Notebook, an open-source, web-based application, for further data analysis or visualization.  </p>
                                        <p>When you use  <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> interactively, it generates a dataflow to show a sequence of operations leading up to each table. </p>
                                        <p data-mc-conditions="General.XDHelp">If you use <span class="GeneralProductOperationalizing">Xcalar in operational mode</span>, you can save dataflows for you to run on demand or at scheduled intervals. If you use <span class="GeneralProductModeling">Xcalar in modeling mode</span>, you can save dataflows but you cannot run them. To run a saved dataflow, use <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> to download it and then upload it to a <span class="GeneralProductName3">Xcalar</span> cluster with an operational mode license.</p>
                                        <p> <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> can import data that is unstructured or organized in arbitrary formats. The data sources can reside on file systems such as NFS, HDFS, Amazon S3, or a local  file system. </p>
                                        <h2>Understanding <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> login</h2>
                                        <p>Each <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> user can have one login at a given time. Closing the browser window does not automatically log you out of <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span>. If you are logged in to <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> and you try to log in again (for example, from another browser tab), a message informs you that you are already logged in elsewhere. You can either go back to the login screen or continue the login, which causes <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> to terminate your other connection. </p>
                                        <p>Login names are case-insensitive.</p>
                                        <h2>Shared vs. shared-nothing storage for Xcalar</h2>
                                        <p><span class="GeneralCompanyNameShort">Xcalar</span>'s True Data in Place algorithms enable you to store source data on shared or shared-nothing storage, without having to move your data in advance to attain maximum processing speed.</p>
                                        <h3>Comparison between the <span class="GeneralProductName3">Xcalar</span> and other architectures</h3>
                                        <p><span class="GeneralProductName3">Xcalar</span>'s unique architecture eliminates the need for data sharding, partitioning, or placement for node affinity, which is commonly required by other data analytics tools using software frameworks such as Hadoop and Spark. In these frameworks, you typically shard the data for locality of reference to a node where a particular algorithm is running.  The placement of data occurs either at the start or when a MapReduce job begins to execute. Without proper placement,  you cannot achieve optimal data processing speed.</p>
                                        <p>Xcalar's nodes, however, read data in parallel and process it optimally irrespective of locality. Furthermore, while processing the data, <span class="GeneralProductName3">Xcalar</span> does not shuffle data as a MapReduce job would. Data has mass, and movement of terabytes of data for locality of reference at the start of processing, or later, during the shuffle phase, incurs huge processing and performance costs. <span class="GeneralProductName3">Xcalar</span>'s capability to keep source files in their original location from beginning to end greatly simplifies deployment and improves data processing performance. </p>
                                        <h3>Examples of <span class="GeneralProductName3">Xcalar</span> using  all cores for parallel I/O</h3>
                                        <p>In this example, a 4-node cluster with 32 cores processes files in parallel without requiring the files to be moved from one storage space to another or redistributed among nodes.&#160;When you use <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> to import 1,024 files, the nodes of the cluster read the files in batches of 32, utilizing the full parallel I/O bandwidth from all the cores. Files may be read asynchronously or synchronously, where the former option may provide higher throughput.</p>
                                        <p>The following figure illustrates the cluster processing 1,024 files.</p>
                                        <p>
                                            <img src="../Resources/Images/ingest-1024-files.png" />
                                        </p>
                                        <p>Suppose you use the same cluster to import 1,025 files. Again, the 32 cores read 32 files at a time. The last file is processed in its entirety by only one core.</p>
                                        <p>Similarly, if you only need to import one file, only one core is used to process the file. </p>
                                        <p>In cases where only one core processes a source file, <span class="GeneralProductName3">Xcalar</span> does not arbitrarily break the file into chunks to parallelize I/O as that would violate the sequential integrity of the data. Remember that each core reads a file in its entirety; the core never reads a partial file. Therefore, if you want to take advantage of the bandwidth of all cores, you must split the source file into multiple smaller files in a way that can be understood by your logic when you perform modeling later on. </p>
                                        <h2><a name="Understa"></a>Understanding workbooks and worksheets</h2>
                                        <p>You can create workbooks in <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span>, which can be regarded as files. Within a workbook, you can create as many worksheets as you want. Worksheets in the same workbook usually contain data related to the same project. The worksheet displayed on your screen is the active worksheet.</p>
                                        <p>At any time, only one workbook can be active. You can deactivate or activate a workbook as desired.</p>
                                        <p>The relationship between a worksheet and a workbook is similar to the relationship between a Microsoft Excel worksheet and workbook.</p>
                                        <p>The following sample screen shows a <span class="UIelement">Worksheet</span> window for a workbook titled MyNewWorkbook.</p>
                                        <p data-mc-conditions="General.XDHelp"><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../Resources/Images/XD_screenshots/workbook_worksheet_selection.png"><img class="MCPopupThumbnail img imgBigImage" data-mc-width="896" data-mc-height="703" src="../Resources/Images/XD_screenshots/workbook_worksheet_selection_thumb_0_150.png" tabindex="" /></a>
                                        </p>
                                        <h2>Understanding data sources, datasets, and tables</h2>
                                        <p>The raw data you want to analyze can be stored in one file, or multiple files in the same directory or different directories. The term <em>data source</em> refers to the file, files, or directory containing the raw data.<MadCap:conditionalText data-mc-conditions="General.XDHelp"> For example, your data source can be an HDFS&#160;file system that your <span class="GeneralProductName3">Xcalar</span> nodes can access or a file system NFS-mounted on each node of the cluster. </MadCap:conditionalText>Through reading the data at its source, <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> obtains the metadata to build a dataset. This process of reading the data and building the dataset is called importing a data source, </p>
                                        <p>After you import data from a data source, you can pull fields of interest from the dataset to create tables in a <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> worksheet. More fields from the dataset can be added to an active table at any time. </p>
                                        <p>You can manipulate and transform data within a table (for example, by sorting or filtering) or  manipulate multiple tables, which can be in different worksheets, to create a new table (for example, by joining).&#160;Use data operations to implement an algorithm that you design for deriving meanings from your data.   With <span class="GeneralCompanyNameShort">Xcalar</span>'s True Data in Place architecture, data is imported and analyzed without any  ETL (Extract, Transform, and Load).</p>
                                        <p>Each table is created with a name unique in the workbook. You can move tables between worksheets but not workbooks.</p>
                                        <div class="Note"><span class="label">NOTE</span>:&#160;All tables you interact with in <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> during the modeling phase are virtual tables. The tables are <em> virtual</em> because they are a concise representation of the operators, operands (the input and output for each operation), and the resulting schema. Only when you export a virtual table from <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> to an export target is a table projected and materialized. Product documentation and <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span>, use the term <em>table</em>, when modeling is described,  to mean a virtual table.</div>
                                        <p><a name="pointToDataSource" class="ForCSH"></a>The following diagram illustrates the relationships among data sources, datasets,  and tables.</p>
                                        <p>
                                            <img src="../Resources/Images/dataset-concepts.png" />
                                        </p>
                                        <h2>Effects of a <span class="GeneralProductName2" data-mc-conditions="General.XDHelp">Xcalar Compute Engine</span> restart on your workbook</h2>
                                        <p>After <span class="GeneralProductName2" data-mc-conditions="General.XDHelp">Xcalar Compute Engine</span> is restarted, all workbooks become inactive. This means that you must re-activate a workbook to resume your work.</p>
                                        <p>Re-activating a workbook in this scenario requires that <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> can access all data sources for creating datasets used in the workbook. The path names to the data sources must be the same as before so that <span class="GeneralProductName3" data-mc-conditions="General.XDHelp">Xcalar</span> can rebuild the datasets in the same way as it did when you imported them the first time.</p>
                                        <h2>Data formats supported</h2>
                                        <p><span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> natively supports CSV, JSON, Excel, and raw text, and can support other formats using UDFs (user-defined functions).</p>
                                        <div class="Note"><span class="label">NOTE:</span>&#160;The CSV format includes not only comma-separated values but also other values separated by alternate delimiters. The default field delimiter is tab and the default record delimiter is newline (\n). You can select the delimiter for separating fields and for separating records. </div>
                                        <h2>How <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> saves your work</h2>
                                        <p><span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> saves the results of all data operations as they are being completed. For example, after you filter a column, the resultant table is saved automatically. You do not have to click <span class="UIelement">Save</span>.</p>
                                        <p>If your work is for manipulating the appearance of a table or a table column, <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> automatically saves your work in these situations:</p>
                                        <ul>
                                            <li value="1">It saves your work every two minutes. (You can change the time interval in the <span class="UIelement">General Settings</span> window as described in <a href="../C_AdvancedTasks/K_Monitor.htm#Setting" class="MCXref xref" xrefformat="{para}">Changing the environment settings for Xcalar Design</a>.</li>
                                            <li value="2">It saves your work when you sign out. However, before this automatic save, if you refresh your browser, your browser displays a message warning about unsaved changes. You must click <span class="UIelement">Save</span> to avoid losing the changes. The following screenshot shows the location of <span class="UIelement">Save</span>.</li>
                                        </ul>
                                        <h3>How to tell if there are unsaved changes</h3>
                                        <p>The following indicators show that there are unsaved changes in your workbook:</p>
                                        <ul>
                                            <li value="1">An asterisk displayed next to <span class="UIelement">Save</span> at the bottom of your browser window.  If you hover over <span class="UIelement">Save</span>, you can see a tooltip showing the time of the last save.</li>
                                            <li value="2">A blue dot on the <span class="GeneralCompanyNameShort">Xcalar</span> icon in the browser tab.</li>
                                        </ul>
                                        <p>To manually save changes, click <span class="UIelement">Save</span> as shown in the following screenshot. </p>
                                        <p data-mc-conditions="General.XDHelp"><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../Resources/Images/XD_screenshots/save-worksheet.png"><img class="MCPopupThumbnail img imgBigImage" data-mc-width="797" data-mc-height="569" src="../Resources/Images/XD_screenshots/save-worksheet_thumb_0_150.png" tabindex="" /></a>
                                        </p>
                                        <div class="Example"><span class="label">EXAMPLE:</span>&#160;After you hide the first table column and resize the second column, you can sign out  without clicking <span class="UIelement">Save</span>.&#160;These changes are automatically saved. However, if you refresh the browser after making these changes instead of signing out, the browser warns that you have unsaved changes. If you proceed with the browser refresh, the table in the refreshed browser does not reflect the hiding of the first column and the new width of the second column.</div>
                                        <div class="Note"><span class="label">IMPORTANT:</span>&#160;If you use the same browser window to go to another website, you can use the browser's <span class="UIelement">Back</span> button to return to <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span>. This causes the browser to reload the <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> page, and the result is similar to a browser refresh. This means that your changes are lost. Therefore, always click <span class="UIelement">Save</span> before you use the same browser window to navigate to another website.</div>
                                        <h2>Understanding what entities are shared by <span class="GeneralProductName3">Xcalar</span> users</h2>
                                        <p>Because multiple users can use <MadCap:conditionalText data-mc-conditions="General.XDHelp">the <span class="GeneralProductName3">Xcalar</span> cluster</MadCap:conditionalText>, to prevent actions that might adversely affect others, be aware that certain entities  are shared. The following list describes the entities that all users can use regardless of who created them: </p>
                                        <ul>
                                            <li value="1">Batch dataflow, including its associated parameters and schedule.</li>
                                            <li value="2">
                                                <p>Dataset.</p>
                                                <div class="Note"><span class="label">NOTE</span>:&#160;While all users can use the same dataset, only the dataset creator can delete the dataset.</div>
                                            </li>
                                            <li value="3">Export target.</li>
                                            <li value="4">UDF (user-defined function).</li>
                                        </ul>
                                        <p>In addition, memory  is shared. The amount of memory used by one user affects the amount of memory available for other users.</p>
                                        <p>The following list describes the entities that are not shared among <span class="GeneralProductName3">Xcalar</span> users:</p>
                                        <ul>
                                            <li value="1">Aggregate.</li>
                                            <li value="2">Table.</li>
                                            <li value="3">Workbook.</li>
                                            <li value="4">Worksheet.</li>
                                        </ul>
                                        <p>In addition, the general settings that control <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> user interface elements are not shared.</p>
                                        <h2>Understanding the license key</h2>
                                        <p>To use all features offered by <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span>, a valid license key must be entered during installation. Without a valid license, you cannot perform modeling by using operations such as filtering, finding aggregates, sorting, and joining. You can, however, import and export data.</p>
                                        <p>If you cannot perform operations due to an invalid license, contact your <span class="GeneralProductName3">Xcalar</span> administrator as soon as possible. To ensure uninterrupted  services, make sure that you have a valid license at all times.</p>
                                        <p>If you are an administrator, you can update the license in the <span class="UIelement">Setup</span> panel of the Monitor. For more information about the Monitor, see <a href="../C_AdvancedTasks/L_UseSetup.htm" class="MCXref xref" xrefformat="{para}">Using Setup (Xcalar admin only)</a>.</p>
                                        <h2>Displaying <MadCap:conditionalText data-mc-conditions="General.XDHelp"><span class="GeneralProductName2">Xcalar Compute Engine</span></MadCap:conditionalText> product version and license information</h2>
                                        <p>To display <span class="GeneralCompanyNameShort">Xcalar</span> product versions and the license expiration date, follow these steps:</p>
                                        <ol>
                                            <li value="1">Click <img src="../Resources/Images/XD_assets/xd-user.png" /> in the upper right corner of the <span class="GeneralGUIName1" data-mc-conditions="General.XDHelp">Xcalar Design</span> window.</li>
                                            <li value="2">
                                                <p>In the drop-down menu, click <span class="UIelement">About</span> to display a modal window that lists product versions,  license expiration date, and copyright information.</p>
                                                <p>If the <span class="UIelement">License Key Expiration</span> is Unlicensed, the cluster does not have a valid license key, and you can perform only a limited number of operations.</p>
                                            </li>
                                        </ol>
                                    </div>
                                    <p><a href="#Top">Go to top</a>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>