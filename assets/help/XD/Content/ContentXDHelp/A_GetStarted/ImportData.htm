<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___SideNav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Getting started|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Selecting format options during an import</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../Resources/TableStyles/SimpleTable.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlobal.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapUtilities.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapXhr.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTextEffects.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSlideshow.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapFeedback.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDefault.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAccessibility.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapHelpSystem.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.MiniToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.SideMenu.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapIndex.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlossary.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapParser.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTopic.js" defer="defer">
        </script>
        <script src="../../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 800px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../Home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <main id="main" class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="content">
                                        <p><a name="top"></a>
                                        </p>
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="sideContent">
                                                    <div class="clearfix">
                                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                            <div class="button-group-container-left">
                                                                <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                    <img alt="Navigate previous" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                    <img alt="Navigate next" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <div class="button-separator">
                                                                </div>
                                                                <button class="button needs-pie print-button" title="Print">
                                                                    <img alt="Print" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                                <h1>Selecting format options during an import</h1>
                                                <p>This topic describes the format options during an import in <span class="GeneralGUIName1">Xcalar Design</span>. </p>
                                                <h2 class="noPageBreak">Understanding the <span class="UIelement">Format</span> window</h2>
                                                <p>The <span class="UIelement">Format</span> window contains the following sections and entry fields:</p>
                                                <ul>
                                                    <li value="1">The <span class="UIelement">Previewing</span> section, which displays a preview of the data in tabular format generated from the selected data source for verifying column names and  data types. </li>
                                                    <li value="2">Dialect format parameter fields, which enable you to configure specific formats for your data, such as the type of field separator or special quote.</li>
                                                    <li value="3"><span class="UIelement">Schema</span> configuration section, which enables you to create the schema for your dataset or table.</li>
                                                    <li value="4">Advanced  settings, which are optional settings for adding columns and preference options for how <span class="GeneralProductName3">Xcalar</span> will handle errors during the import process.</li>
                                                </ul>
                                                <p>The <span class="UIelement">Format</span> window enables you to complete the following tasks:</p>
                                                <ul>
                                                    <li value="1"><a href="#Viewing" class="MCXref xref">Viewing records in the preview</a>
                                                    </li>
                                                    <li value="2"><a href="#Smart" class="MCXref xref">Smart casting</a>
                                                    </li>
                                                    <li value="3"><a href="#Changing" class="MCXref xref">Changing the data type and column name in a CSV&#160;data source</a>
                                                    </li>
                                                    <li value="4"><a href="#Setting" class="MCXref xref">Setting the dataset or the table name</a>
                                                    </li>
                                                    <li value="5"><a href="#Setting2" class="MCXref xref">Setting the data file format </a>
                                                    </li>
                                                    <li value="6"><a href="#Setting3" class="MCXref xref">Setting the format parameters</a>
                                                    </li>
                                                    <li value="7"><a href="#Applying" class="MCXref xref">Applying an import parser or import user-defined function</a>
                                                    </li>
                                                    <li value="8"><a href="#Configur" class="MCXref xref">Configuring the schema</a>
                                                    </li>
                                                    <li value="9"><a href="#About" class="MCXref xref">Setting advanced options</a>
                                                    </li>
                                                    <li value="10"><a href="#Creating" class="MCXref xref">Creating the dataset or the table</a>
                                                    </li>
                                                </ul>
                                                <h3><a name="Viewing"></a>Viewing records in the preview</h3>
                                                <p>You can change how records are displayed in the following ways:</p>
                                                <table class="TableStyle-SimpleTable" style="mc-table-style: url('../../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                                                    <col class="TableStyle-SimpleTable-Column-Column1" />
                                                    <col class="TableStyle-SimpleTable-Column-Column2" />
                                                    <thead>
                                                        <tr class="TableStyle-SimpleTable-Head-Header1">
                                                            <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">
                                                                <p>If you want to…</p>
                                                            </th>
                                                            <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">
                                                                <p>Do this</p>
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                                <p>Resize a column</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
                                                                <p>Position your mouse on a column header and drag it left or right.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                                <p>Bring hidden columns and rows into view</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">
                                                                <p>Move the horizontal or the vertical scroll bars.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                                <p>Include more rows in the preview</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
                                                                <p>Click <span class="UIelement">Show more rows</span>, displayed below the last row. </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                                <p>Preview records from another file you have chosen</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">
                                                                <p>Click the Down arrow next to the data source path. When a drop-down list of files is displayed, select the desired file.</p>
                                                                <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../Resources/Images/XD_screenshots/xd-file-preview-selection.png"><img class="MCPopupThumbnail img imgBigImage" data-mc-width="904" data-mc-height="278" src="../../Resources/Images/XD_screenshots/xd-file-preview-selection_thumb_0_150.png" tabindex="" /></a>
                                                                </p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">
                                                                <p>Adjust the height of the preview section</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyA-Column2-Body1">
                                                                <p>Place the cursor at the bottom border of the preview section and drag vertically. </p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <h3><a name="Smart"></a>Smart casting</h3>
                                                <p>If the format of your data source  is CSV, <span class="GeneralGUIName1">Xcalar Design</span> performs a smart cast when importing the data. Smart casting means that <span class="GeneralGUIName1">Xcalar Design</span> tries to automatically assign the appropriate data type to each field. You can change the data type and column name in the preview. </p>
                                                <p>For a non-CSV data source, you can change the data type only after creating the table or the dataset but you cannot change the column names.</p>
                                                <div class="Note"><span class="label">NOTE</span>:&#160;Smart casting and changing the column name and data type are possible only for a CSV&#160;data source with up to 127 fields. </div>
                                                <h3><a name="Changing"></a>Changing the data type and column name in a CSV&#160;data source</h3>
                                                <p> To change the data type of a column in the preview window:</p>
                                                <ol>
                                                    <li value="1">Click the data type icon in the column header. A pop-up list appears showing the possible data types.</li>
                                                    <li value="2">Select the appropriate data type.</li>
                                                </ol>
                                                <div class="Note"><span class="label">NOTE</span>:&#160;If <span class="GeneralProductName3">Xcalar</span> encounters a value in the column that cannot be cast, the data type of the column is set to Mixed. For example, if the Age column contains both numeric values and the string NA, you cannot change the data type from&#160;String to Integer because NA is not a numeric value.&#160;Instead, the column becomes a Mixed column. After you create the dataset, you can change this column's data type. Any value that cannot be cast as an integer is replaced with FNF. For more information about changing data types, see <a href="../C_XcalarAdvancedMode/B_Operations/ChangeDataType.htm" class="MCXref xref">Changing the data type and name of a column</a>.</div>
                                                <p>To change the column name in the preview window:</p>
                                                <ol>
                                                    <li value="1">Click the column header.</li>
                                                    <li value="2">
                                                        <p>Enter the new column name.</p>
                                                        <p>For more information on the column naming conventions, see <a href="../E_Reference/naming_rules.htm#Column" class="MCXref xref">Column</a></p>
                                                    </li>
                                                    <li value="3">Press Enter.</li>
                                                </ol>
                                                <p>The following screenshot illustrates how to change the data type and the column name for a particular column in the preview window:</p>
                                                <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../Resources/Images/XD_screenshots/xd-import-edits.png"><img class="MCPopupThumbnail img imgBigImage" data-mc-width="903" data-mc-height="612" src="../../Resources/Images/XD_screenshots/xd-import-edits_thumb_0_150.png" tabindex="" /></a>
                                                </p>
                                                <h3><a name="Setting"></a>Setting the dataset or the table name</h3>
                                                <p>In the <span class="UIelement">Dataset Name</span> or the <span class="UIelement">Table Name</span> field, either accept the suggested name or enter a different name. </p>
                                                <p>For more information on the dataset naming conventions, see <a href="../E_Reference/naming_rules.htm#Dataset" class="MCXref xref">Dataset</a>. </p>
                                                <p>For more information on the table naming conventions, see <a href="../E_Reference/naming_rules.htm#Table" class="MCXref xref">Table</a>. </p>
                                                <div class="Note"><span class="label">NOTE:</span> Columns in table names must observe the all capital letters rule, therefore <span class="GeneralGUIName1">Xcalar Design</span> automatically processes table and column names into uppercase.</div>
                                                <div class="Note"><span class="label">TIP:</span> Table names <span class="UIelement">cannot</span> be changed after the table is created, such as by using a SQL ALTER command. <br />If the table name is incorrect, run a <span class="UIelement">select</span> statement on the table with the incorrect name and then  from the result set create a new table with the correct name. For more information, see <a href="../B_SQLMode/sql_about_view_section.htm#Saving2" class="MCXref xref">Saving a result set to a table in SQL Mode</a>.</div>
                                                <div class="Note"><span class="label">TIP</span>:&#160;If the path to the data source is too long to be displayed completely, click the path to copy it to the clipboard. You can paste the path in the <span class="UIelement">Dataset&#160;Name</span> or <span class="UIelement">Table Name</span> field if you want to use a part of the path in the name. However, you must remove all the slashes in the name.</div>
                                                <h3><a name="Setting2"></a>Setting the data file format </h3>
                                                <p>In the <span class="UIelement">Format</span> section, either accept the suggested format or from the <span class="UIelement">Format</span> list, select a format from one of the following:</p>
                                                <ul>
                                                    <li value="1">Separated Values</li>
                                                    <li value="2">JSON</li>
                                                    <li value="3">Excel</li>
                                                    <li value="4">Text</li>
                                                    <li value="5">XML</li>
                                                    <li value="6">Parquet File</li>
                                                    <li value="7">Custom Format. If your data source requires custom processing during the import,  see <a href="#Applying" class="MCXref xref">Applying an import parser or import user-defined function</a>.</li>
                                                </ul>
                                                <div class="Note"><span class="label">NOTE:</span> If you select an incorrect format, the preview section will display an error message with a recommendation for a format that <span class="GeneralProductName3">Xcalar</span> can parse with this data.</div>
                                                <div class="Note"><span class="label">NOTE</span>: If the data source is an Excel file, you can import data from one Excel worksheet, which can be any worksheet from the Excel workbook.</div>
                                                <h3><a name="Setting3"></a>Setting the format parameters</h3>
                                                <p>Based on the option selected in the <span class="UIelement">Format</span> list, not all the field options that are described in this topic will display. For the entry fields that are displayed, verify that they contain the correct values. If not, make the appropriate changes.</p>
                                                <p>Specify the values for the fields as described in the following table:</p>
                                                <table class="TableStyle-SimpleTable" style="mc-table-style: url('../../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                                                    <col class="TableStyle-SimpleTable-Column-Column1" />
                                                    <col class="TableStyle-SimpleTable-Column-Column2" />
                                                    <thead>
                                                        <tr class="TableStyle-SimpleTable-Head-Header1">
                                                            <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Field</th>
                                                            <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Description</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1"><span class="UIelement">Promote First Row as Header</span>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
                                                                <p>Depending on the data format, <span class="GeneralGUIName1">Xcalar Design</span> automatically selects or deselects this option. For example, if the data source is a CSV file, <span class="GeneralGUIName1">Xcalar Design</span> recommends that you promote the first row as the header.</p>
                                                                <p>When importing multiple files with the same first row, <span class="GeneralGUIName1">Xcalar Design</span> promotes the first row of the first file being processed and omits the first row of subsequent files.</p>
                                                                <p>If you use the <span class="UIelement">Skip Rows</span> field to skip rows that do not require analysis, <span class="GeneralGUIName1">Xcalar Design</span> promotes the first row after the row-skipping.&#160;</p>
                                                                <div class="Example"><span class="label">EXAMPLE:</span>&#160;The  file contains comments in the first row, and the strings <span class="UIelement">Name</span> and <span class="UIelement">Salary</span> in cells on the second row. You can specify <span class="UIelement">1</span> in the <span class="UIelement">Skip Rows</span> field to eliminate the first row and promote the row containing <span class="UIelement">Name</span> and <span class="UIelement">Salary</span> as the header.</div>
                                                                <div class="Note"><span class="label">IMPORTANT:</span>&#160;You can promote the first row  only at this point. You will not be able to change the first row into the header row at a later time.</div>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2"><span class="UIelement">Record Delimiter</span>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">The UTF-8 character for separating records (for example, \n or a null character). It must be a single character, unless it is CRLF (<span class="UIelement">\r\n</span>). If your data uses a multiple-character delimiter, you must use an import UDF when importing the data.</td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1"><span class="UIelement">Field Delimiter</span>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">The UTF-8 character separating fields (for example, a tab or a comma). The delimiter can consist of multiple characters. The maximum length of the delimiter is 255 bytes.</td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2"><span class="UIelement">Quoting Character</span>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Character used as a quote mark. Delimiter characters between the quote marks are interpreted literally, not as delimiters. Leave this field empty if you want to treat delimiter characters as delimiters regardless of where these characters  appear.</td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1"><span class="UIelement">Skip Rows</span>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
                                                                <p>The number of rows  to omit at the beginning of each file when <span class="GeneralProductName3">Xcalar</span> imports the data source.&#160;Typically you omit rows that do not contain data requiring analysis (for example, rows containing comments). If you import a folder with multiple files, the same number of rows are skipped in each file.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2"><span class="UIelement">Worksheet Number</span>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">
                                                                <p>For an Excel data source, you can specify the worksheet number in the Excel workbook. You can import only one worksheet at a time.</p>
                                                                <p>The default worksheet number is 0, which specifies the first worksheet in the Excel workbook.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1"><span style="font-weight: normal;" class="UIelement">JMESPath</span>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
                                                                <p>For JSON&#160;data sources, you can import either all top-level JSON&#160;elements or certain JSON&#160;elements using JMESPath query syntax. Enter one or more JMESPath expressions into the JMESPath field and click the reload button to preview the data source. For example:</p>
                                                                <p><code style="font-style: normal;">[?searchkey==`value`].{key1:key1, key2:key2, ..., keyN:keyN}</code>
                                                                </p>
                                                                <p>where:</p>
                                                                <ul>
                                                                    <li value="1"><code style="font-style: normal;">searchkey</code>: a key to search for specific values</li>
                                                                    <li value="2"><code style="font-style: normal;">value</code>:&#160;the value to find within the key named searchkey</li>
                                                                    <li value="3"><code style="font-style: normal;">key1, key2, ..., keyN</code>:&#160;keys to add to the table or dataset</li>
                                                                </ul>
                                                                <p>For details on  JMESPath expressions, see <a href="http://jmespath.org/">http://jmespath.org</a>.</p>
                                                                <p>To better understand how to import a JSON data source, see <a href="ImportJSONExample.htm" class="MCXref xref">Example of importing a JSON data source</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                                <p><span class="UIelement">XPath</span>
                                                                </p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">
                                                                <p>For an XML data source, you must specify at least one XPath. Each XPath is a path expression selecting an XML node or node-set in your data source. To specify multiple XPaths, click the <span style="font-weight: normal;" class="UIelement">+&#160;New XPath</span> button, and enter in another XPath string. </p>
                                                                <p>Click the refresh button to preview the import using your XPath. In the data source preview, there will be one field for each XPath. Each element that matches the XPath will become one record. If an element matches multiple XPaths, it will become multiple records. </p>
                                                                <p>Optionally, you can add columns to the table or dataset as described in the following list:</p>
                                                                <ul>
                                                                    <li value="1">To add a field to the table or dataset from within the current XPath: <ol><li value="1">Click the <span class="UIelement">+ New Key</span> button. This will add an <span class="UIelement">Extra Key</span> input field and a <span class="UIelement">Key Name</span> input field. </li><li value="2">In <span class="UIelement">Extra Key</span>, enter the relative XPath for the additional element to add.</li><li value="3">In <span class="UIelement">Key Name</span>, enter the name of the field to contain this element.<br /></li></ol></li>
                                                                </ul>
                                                                <ul>
                                                                    <li value="1">If you select <span class="UIelement">Matched XPath</span>, <span class="GeneralGUIName1">Xcalar Design</span> creates a field that contains the matched XPath in each record.</li>
                                                                    <li value="2">
                                                                        <p>If you select <span class="UIelement">Element XPath</span>, <span class="GeneralGUIName1">Xcalar Design</span> creates a field that contains the XPath to the element in each record. </p>
                                                                        <div class="Note"><span class="label">NOTE</span>:&#160;Dataset creation might take a long time if you select <span class="UIelement">Element XPath</span>.</div>
                                                                    </li>
                                                                </ul>
                                                                <p>For additional information, see an XPath resource, such as <a href="https://www.w3schools.com/xml/xml_xpath.asp">https://www.w3schools.com/xml/xml_xpath.asp</a>.</p>
                                                                <p>To better understand how to import an XML&#160;data source, see <a href="ImportXMLExample.htm#Example" class="MCXref xref">Example of importing an XML&#160;data source</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Parquet File</td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
                                                                <p>If your data source is a parquet file or parquet dataset, follow the additional instructions in <a href="ImportParquet.htm" class="MCXref xref">Importing from a Parquet file or dataset</a>.</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">
                                                                <p class="tableParagraph">Number of rows</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">
                                                                <p class="tableParagraph">If your data source is Confluent Kafka, enter the number of rows you want to import, in this field. </p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <h3><a name="Applying"></a>Applying an import parser or import user-defined function</h3>
                                                <p>If your data source requires custom data processing during the import, you may have to write an import parser in the form of an import user-defined function (UDF). In <span class="GeneralProductName3">Xcalar</span>, UDFs are written in Python. To apply a UDF&#160;during an import, you must select the <span class="UIelement">Custom Format</span> format even if the original format of the data source is one of the listed formats in the <span class="UIelement">Format</span> list. For example, if your data source is a <span class="UIelement">CSV</span> file, which  during parsing requires a UDF to remove illegal characters, you must select <span class="UIelement">Custom Format</span> and not <span class="UIelement">Separated Values</span>. </p>
                                                <div class="Note"><span class="label">IMPORTANT:</span> If the format of your data source is CSV,  you can change the column names and their data types directly from the <span class="UIelement">Previewing</span> section. For all other <span class="GeneralProductName3">Xcalar</span> supported formats, you must use a UDF to change the column names and the data types.</div>
                                                <p>To apply an import parser or an import UDF:</p>
                                                <ol>
                                                    <li value="1">From the <span class="UIelement">Format</span> list, select <span class="UIelement">Custom Format</span>.</li>
                                                    <li value="2">Do one of the following:</li>
                                                    <ul style="list-style-type: circle;">
                                                        <li value="1">If the UDF already exists, from the <span class="UIelement">UDF&#160;Module</span> list, select the module that contains the function.</li>
                                                        <li value="2">If the UDF does not exist, click <span class="UIelement">Write Parser Using Jupyter</span>, which opens the JUPYTER NOTEBOOK workspace for you to either write a new UDF or edit an existing UDF with the required parsing code. For more information on writing an import parser or import UDF using Jupyter Notebook, see <a href="../C_XcalarAdvancedMode/D_Jupyter/UsingJupyter.htm#Creating" class="MCXref xref">Writing an import parser as a user-defined function</a>.<br />After saving the UDF module, from the <span class="UIelement">UDF&#160;Module</span> list, select the new UDF module containing the function.</li>
                                                    </ul>
                                                    <li value="3">
                                                        <p>(Optional) If you have additional parameters in your import UDF (other than the required fullPath and inStream), enter the argument name value pairs in JSON format in the <span class="UIelement">UDF Args</span> field. Do not enter the name value pair for fullPath and inStream. For example, if the third parameter in your import UDF is a Boolean parameter called <code>withHeader</code> and you want to pass <code>true</code> for the value, enter the following in the <span class="UIelement">UDF Args</span> field:</p>
                                                        <p><code>{"withHeader": true}</code>
                                                        </p>
                                                    </li>
                                                    <li value="4">Click <span class="UIelement">Apply UDF</span>.</li>
                                                    <p>After parsing the data with the import UDF, a preview table is displayed in the <span class="UIelement">Previewing</span> section. </p>
                                                    <div class="Note"><span class="label">TIP:</span> During parsing, <span class="GeneralGUIName1">Xcalar Design</span> displays the percentage completed. You can terminate the preview generation process at any time by clicking the <span class="UIelement">Cancel</span> icon.<br /></div>
                                                    <div class="Note"><span class="label">IMPORTANT:</span>  If you imported CSV formatted data, you cannot continue to make changes from the preview section after selecting the  <span class="UIelement">Custom Format</span> format setting. If you changed a column name or a data type in the <span class="UIelement">Previewing</span> section before you selected the <span class="UIelement">Custom Format</span> format, all your changes are overridden. In this case,  you must modify your UDF to include these changes and re-apply.</div>
                                                </ol>
                                                <p>For more information about UDFs, see <a href="../D_ClusterTasks/UDFUnderstand.htm" class="MCXref xref">Understanding user-defined functions</a> and <a href="../E_Reference/UdfExamples.htm#Example" class="MCXref xref">Example of using an import user-defined function</a>.</p>
                                                <h3><a name="Configur"></a>Configuring the schema</h3>
                                                <p>If you are creating a table, specify the table schema, as described in this section. </p>
                                                <p>If you are creating a dataset, you can specify the schema as described in this section only if the format of the file is CSV. For all other formats you cannot configure the schema.</p>
                                                <div class="Note"><span class="label">IMPORTANT:</span> When creating a table from multiple data sources, all data sources must each adhere to the same schema. </div>
                                                <p>To configure the schema, in the <span class="UIelement">Schema</span> section, do one of the following:</p>
                                                <ul>
                                                    <li value="1">Use the <span class="GeneralGUIName1">Xcalar Design</span> Schema Wizard, which detects the column names and their data types and populates the <span class="UIelement">Schema</span> field with these entries. <br />For this option, do the following:
			<ol style="list-style-type: lower-alpha;"><li value="1"> Click the <span class="UIelement">Schema Wizard</span> link.</li><p>The <span class="UIelement">Schema Wizard</span> modal window opens.</p><li value="2">Verify the column names and their data type format selections. </li><li value="3">(Optional) Edit the column names and their data type. For more information about the <span class="UIelement">Schema Wizard</span> modal window, see <a href="#Understa" class="MCXref xref">Understanding the Schema Wizard</a>.</li><li value="4">When you are satisfied with all the entries, click <span class="UIelement">Confirm</span>, which populates  the <span class="UIelement">Schema</span> field with the <span class="UIelement">Column Name</span> and <span class="UIelement">Column type</span> field entries.</li></ol><p>This is the most common option for creating your schema.</p></li>
                                                    <li value="2">If schema is already populated, verify  and use the schema that <span class="GeneralProductName3">Xcalar</span> created for you in the <span class="UIelement">Schema</span> field.<br /></li>
                                                    <p>This option is the fastest option for creating your table's schema.</p>
                                                    <li value="3">
                                                        <p>(CSV format only) Manually make changes from the <span class="UIelement">Previewing</span> section. <br /></p>
                                                        <p>As you make your changes the <span class="UIelement">Schema</span> field is populated with those changes. For more information, see <a href="#Changing" class="MCXref xref">Changing the data type and column name in a CSV&#160;data source</a>. </p>
                                                    </li>
                                                    <li value="4">Manually enter your column and data type values in the <span class="UIelement">Schema</span> field.<br />For this option, do the following:</li>
                                                    <p>In the <span class="UIelement">Schema</span> field, enter the column names and their data type. The syntax is as follows:</p>
                                                    <p>[{"name":"<var>column1</var>","type":"<var>data_type</var>"},{"name":"<var>column2</var>","type":"<var>data_type</var>"},{"name":"<var>column3</var>","type":"<var>data_type</var>","<var>pk</var>":"1"},{"name":"<var>colname. nestname</var>","<var>newName</var>": "<var>new_colname</var>", "type":"<var>data_type</var>"},{"name":"<var>element1</var>.<var>child_element2</var>", "newName": "<var>new_colname</var>", "type":"<var>datatype</var>"} ... ]</p>
                                                    <p>Where,</p>
                                                    <ul style="list-style-type: circle;">
                                                        <li value="1"><var>column</var> is the name of the column.</li>
                                                        <li value="2"><var>data_type</var> is the data type format of the column. Choose from boolean, integer, float, string, timestamp, and money. For more information on the data types formats that <span class="GeneralProductName3">Xcalar</span> supports, see <a href="../E_Reference/DataTypes.htm" class="MCXref xref">Data types supported</a>.</li>
                                                        <li value="3">(Optional) <var>pk</var> is the primary key that uniquely identifies each record in the table. This applies to tables only.</li>
                                                        <li value="4">(Optional) <var>colname</var> is the existing name of the column that contains the JSON objects and/or arrays.</li>
                                                        <li value="5">(Optional) <var>nestname</var> is the name of the JSON array or object that contains a group of items.</li>
                                                        <li value="6">(Optional) <var>newName</var> is the parameter for the new name of the column.</li>
                                                        <li value="7">(Optional) <var>new_colname</var> is the name for the new column. For JSON formats, the column records will contain the array or object data values and for XML formats, the column records will contain the XML nested element values.</li>
                                                        <li value="8">(Optional) <var>element</var> is a parent element in the hierarchical XML structure. </li>
                                                        <li value="9">(Optional) <var>child_element</var> is a nested child element of the parent element.</li>
                                                        <li value="10">(Optional) <var>sub_element</var> is a  sub element of the nested child element.</li>
                                                    </ul>
                                                    <p>This option is suitable for users who have an existing schema created for their data. </p>
                                                </ul>
                                                <p>For more information about the syntax for tables that require a primary key, see <a href="#Creating2" class="MCXref xref">Creating a primary key</a>.</p>
                                                <p>To better understand how to import a JSON data source, see <a href="ImportJSONExample.htm" class="MCXref xref">Example of importing a JSON data source</a>.</p>
                                                <p>To better understand how to import an XML&#160;data source, see <a href="ImportXMLExample.htm#Example" class="MCXref xref">Example of importing an XML&#160;data source</a>.</p>
                                                <h4><a name="Creating2"></a>Creating a primary key</h4>
                                                <p>The primary key uniquely identifies each record in the table. It is  created from one column, or from multiple columns (composite key) using the ascending order integer value of the <span class="UIelement">pk</span> parameter. </p>
                                                <p>To create a primary key, in the <span class="UIelement">Schema</span> field, enter one of the following:</p>
                                                <ul>
                                                    <li value="1">For a primary key that  uniquely identifies each record from a single column name, include <span class="UIelement">"pk":"1"</span> at the end of the column's syntax, as follows:
					<p>[{"name":"<var>column1</var>","type":"<var>data_type</var>"},{"name":"<var>column2</var>","type":"<var>data_type</var>"<span class="UIelement">,"pk":"1"</span>},{"name":"<var>column3</var>","type":"<var>data_type</var>"}, ... ]</p></li>
                                                    <li value="2">For a composite primary key that uniquely identifies each record from multiple column names, include the <span class="UIelement">"pk":"<var>integer value</var>"</span> syntax at the end of each column's syntax that specifies the composite primary key, as follows:
					<p>[{"name":"<var>column1</var>","type":"<var>data_type</var>"<span class="UIelement">,"pk":"2"</span>},{"name":"<var>column2</var>","type":"<var>data_type</var>"}<span class="UIelement">,"pk":"1"</span>},{"name":"<var>column3</var>","type":"<var>data_type</var>"}, ... ]</p></li>
                                                </ul>
                                                <div class="Note"><span class="label">NOTE:</span> The table cannot be updated when a primary key is not included in the schema .</div>
                                                <h4><a name="Understa"></a>Understanding the Schema Wizard</h4>
                                                <p>The Xcalar Schema Wizard helps you create the schema for the table by identifying the column names and data type formats from your source data.</p>
                                                <p>The Schema Wizard modal window contains the following:</p>
                                                <ul>
                                                    <li value="1">Column Name field, which lists the name of the column. You can change the name and add or remove the entry field.</li>
                                                    <li value="2">Column Type field, which lists the data type format of the column. You can change the data type format entry from the Column Type list and add or remove the entry field.</li>
                                                    <li value="3">CLEAR ALL icon, which removes all entry fields.</li>
                                                    <li value="4">DETECT icon, which automatically detects column names and their data type format from your source data.</li>
                                                </ul>
                                                <div class="Note"><span class="label">IMPORTANT: </span>Any changes to column names or data types that you previously entered manually, in the Schema field or from the Previewing section, cannot be changed with the <span class="UIelement">Schema Wizard</span>, even with the CLEAR ALL action.
		<br />If you do not require the previous changes, click the <span class="UIelement">Refresh preview</span> icon <img src="../../Resources/Images/XD_assets/xd_refresh_icon.png" />, which is by the side of the <span class="UIelement">Format</span> entry field. </div>
                                                <h3><a name="About"></a>Setting advanced options</h3>
                                                <p>The advanced options section, contains import data source settings that add columns for identifying and managing data in your table or dataset and preference options for how you would like <span class="GeneralProductName3">Xcalar</span> to handle errors during your data source import. </p>
                                                <h4>Add Columns option</h4>
                                                <p>By default, columns are created only from the fields in the data source.&#160;Before you import your data source, you can include the following columns that will help you identify and work more effectively with the data: </p>
                                                <ul>
                                                    <li value="1">A column that contains the original data source's file name for each record.<p>To add a column, which contains the data source's file name for each record, click the <span class="UIelement">File Name</span> check box and enter a name for the column (for example, fileName).</p><p>This column displays the data source file name. It is useful if the dataset or table  contains records from multiple files. For example, if a table or dataset consists of records from /datasets/flights/airlines1.csv and /datasets/flights/airlines2.csv, adding this column enables you to see which records are from airlines1.csv and which records are from airlines2.csv.</p></li>
                                                    <li value="2">A column that contains an identifier number for each record.</li>
                                                    <p>To add a column, which contains an identifier number for each record, click the <span class="UIelement">Record Number</span> check box and enter a name for the column (for example, recordNumber). Numbering starts at 0 for the first record in a file.</p>
                                                    <div class="Note"><span class="label">IMPORTANT:</span> For each new file imported, the record number begins at 0.&#160;Therefore, when creating a table or dataset that imports from multiple files, <span class="GeneralProductName3">Xcalar</span> recommends that you also create a  <span class="UIelement">File Name</span> column. For example, if  one dataset is created from the <i>/flights</i> folder that contains the files airlines1.csv and airlines2.csv, the table or dataset will contain duplicate identifier numbers for the second set of records from airlines2.csv. Creating the <span class="UIelement">File Name</span> column distinguishes records that contain the same identifier number.</div>
                                                </ul>
                                                <h4>Error Tolerance option</h4>
                                                <p>While importing your source files, you can select how <span class="GeneralGUIName1">Xcalar Design</span> handles errors:</p>
                                                <ul>
                                                    <li value="1">Low - Abort import on error&#160;</li>
                                                    <p>When <span class="GeneralGUIName1">Xcalar Design</span> detects an error, it logs the error and stops the import. This is the default setting.</p>
                                                </ul>
                                                <ul>
                                                    <li value="1">Medium - Skip to next file on error, continue </li>
                                                    <p>When <span class="GeneralGUIName1">Xcalar Design</span> detects an error, it logs the error, skips to the next file, and continues reading records. </p>
                                                </ul>
                                                <ul>
                                                    <li value="1">High - Skip to next file on unrecoverable error, continue</li>
                                                    <p>When <span class="GeneralGUIName1">Xcalar Design</span> detects an error, it logs the error and continues reading records from the file. For unrecoverable errors, it logs the error, skips to the next file, and continues reading records.</p>
                                                </ul>
                                                <p data-mc-conditions="Cloud.Hidden">You can view the errors logged by <span class="GeneralGUIName1">Xcalar Design</span> as described in <a href="../SingleSourcing/troubleshooting/viewingLogs.htm#Understa" class="MCXref xref">Understanding the Xcalar Design logs</a>.</p>
                                                <h3><a name="Creating"></a>Creating the dataset or the table</h3>
                                                <p>When you are satisfied with your settings, click <span class="UIelement">Create Table</span> or <span class="UIelement">Create Dataset</span>. A spinner is displayed, indicating that the dataset or the table creation is in progress. You can click the spinner to cancel the process if desired.</p>
                                                <div class="Note"><span class="label">NOTE</span>:&#160;If you import data to a table, you cannot cancel the final steps of the creation process.</div>
                                                <div class="Note"><span class="label">IMPORTANT</span>:&#160;The values you specify in the <span class="UIelement">Format</span> window apply to records of all items. For example, if you create two datasets from two files, both the datasets will use the same  line delimiter and the same record delimiter. Therefore, make sure that the import specifications are applicable to all items in one import.</div>
                                                <p>After the dataset or the table is successfully created, you see a preview. You also see the newly created dataset in the <span class="UIelement">Datasets</span> panel and the newly created table in the <span class="UIelement">Tables</span> panel.</p>
                                                <h2>Next step</h2>
                                                <p>Learn to create your data models in SQL Mode or Dataflow Mode by <a href="../B_SQLMode/sql_understand_wkspace.htm" class="MCXref xref">Understanding the SQL Workspace</a> and <a href="../C_XcalarAdvancedMode/A_Dataflows/AdvmodeWkspace.htm" class="MCXref xref">Understanding the Dataflow Mode workspace</a>.</p>
                                                <p><a href="#top">Go to the top</a>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </main>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>