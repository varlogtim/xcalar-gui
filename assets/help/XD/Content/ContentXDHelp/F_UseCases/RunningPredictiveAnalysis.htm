<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___SideNav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Running predictive analysis using a trained machine learning model</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlobal.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapUtilities.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapXhr.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTextEffects.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSlideshow.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapFeedback.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDefault.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAccessibility.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapHelpSystem.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.MiniToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.SideMenu.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapIndex.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlossary.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapParser.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTopic.js" defer="defer">
        </script>
        <script src="../../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 800px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../Home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <main id="main" class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="content">
                                        <p><a name="top"></a>
                                        </p>
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="sideContent">
                                                    <div class="clearfix">
                                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                            <div class="button-group-container-left">
                                                                <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                    <img alt="Navigate previous" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                    <img alt="Navigate next" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <div class="button-separator">
                                                                </div>
                                                                <button class="button needs-pie print-button" title="Print">
                                                                    <img alt="Print" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                                <h1>Running predictive analysis using a trained machine learning model</h1>
                                                <p>The publicly available Crunchbase funding data contains the funding information about 66k companies. It includes information like their current status, total funding, first funding date, last funding date, etc. </p>
                                                <p>In the <span class="UIelement">Cleaning and transforming data</span> use case, we cleaned this data and extracted the companies which already had liquidity or a liquidation event for training our machine learning (ML) model. Now, we will extract the companies which did not have liquidity or a liquidation event and run predictive analysis on them.</p>
                                                <h2 class="noPageBreak">Pre-requisites</h2>
                                                <ul>
                                                    <li value="1">You have access to Xcalar Design 2.1 or later.</li>
                                                    <li value="2">You have already cleaned the companies data as explained in <a href="CleaningTransforming.htm" class="MCXref xref" xrefformat="{para}">Transforming data</a> use case.</li>
                                                    <li value="3">You have already trained your ML model.</li>
                                                    <li value="4">You have already written your predictive analysis ML code in Python.</li>
                                                </ul>
                                                <h2 class="noPageBreak">Viewing your data</h2>
                                                <p>Open the dataflow we created in Cleaning and transforming data and view the result of the <span class="UIelement">Cast</span> Node. The result contains the clean funding data of all companies regardless of their status:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-cast-results.png" />
                                                </p>
                                                <h2 class="noPageBreak">Filtering the rows</h2>
                                                <p>For predictive analysis, we want to extract only those companies which have not had liquidity or a liquidation event, meaning companies with STATUS_NUM value as 0.</p>
                                                <p>To extract these companies, add a <span class="UIelement">SQL</span> Node to the dataflow and connect the output of the <span class="UIelement">Cast</span> Node to this <span class="UIelement">SQL</span> Node. Configure the <span class="UIelement">SQL</span> Node to select only those rows which have STATUS_NUM = 0:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc2-sql-prediction.png" />
                                                </p>
                                                <div class="Note" data-mc-conditions="Cloud.Hidden"><span class="label">NOTE</span>:&#160;You can also use a Filter Node to filter these rows.</div>
                                                <p>Save and execute the <span class="UIelement">SQL</span> Node. The new result contains only those companies which have STATUS_NUM equal to 0. These are the companies for which we want to run the predictive analysis:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc2-sql-statusnum-result.png" />
                                                </p>
                                                <h2 class="noPageBreak">Using integrated Jupyter Notebook to test your Python code</h2>
                                                <p>Assuming that you already have your ML code written in Python ready for predictive analysis, if you still want to test your code before you use it in <span class="GeneralProductName3">Xcalar</span>, you can use the Jupyter Notebook integrated with <span class="GeneralProductName3">Xcalar</span>.</p>
                                                <p>Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations, and narrative text.</p>
                                                <p>To open Jupyter Notebook from <span class="GeneralGUIName1">Xcalar Design</span>, click the Jupyter Notebook icon in the sidebar. <span class="GeneralProductName3">Xcalar</span> fills in some basic Python code in the first cell of the Jupyter Notebook to connect the current <span class="GeneralGUIName1">Xcalar Design</span> workbook to the newly created Jupyter Notebook. For our purposes, we don’t need this code.</p>
                                                <p>Create an empty cell in the Jupyter Notebook and paste your machine learning code for predictive analysis in that cell.</p>
                                                <p>Here is a <span class="UIelement">sample</span> function called predict which runs the predictive analysis on a company’s funding data:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc2-jn-code.png" />
                                                </p>
                                                <p>The predict function reads a trained model from a file (/mnt/xcalar/export/ml_model.obj). The model was trained using the standard Random Forest algorithm available in the scikit-learn library. The code then calls the standard predict_proba function on the trained model and returns the probability of each of the three possible outcomes for a company.</p>
                                                <p>To test this function, the code calls the predict function with some random funding data and gets the following output:</p>
                                                <p><code>acquired: 0.140  closed: 0.630  ipo: 0.230</code>
                                                </p>
                                                <p>The result shows that for this company, the probability of being acquired is 14%, the probability for its closing is 63% and the probability for going public is 23%.</p>
                                                <p>The advantage of the integrated Jupyter Notebook is that you can make changes to your Python code and see the results interactively without ever leaving Xcalar. Once you are satisfied with your results we can create a UDF with this code.</p>
                                                <h2 class="noPageBreak">Creating a user-defined function for your ML code</h2>
                                                <p>Once your ML code is ready to be used for predictive analysis, it’s easy to incorporate the code in your dataflow by creating a UDF and using it in a Map Node.</p>
                                                <p>Click the <span class="UIelement">UDF</span> icon in the sidebar to bring up the UDF panel. Copy and paste your ML code in the UDF panel. The code should be complete with all the imports and helper functions and should be able to access your trained model. Save the UDF and give it a name, for example, ml_predict.py. The function predict in this UDF module is accessible as <span class="UIelement">ml_predict:predict</span>.</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc2-udf-predict.png" />
                                                </p>
                                                <h2 class="noPageBreak">Using the UDF in your dataflow</h2>
                                                <p>Add a <span class="UIelement">Map</span> Node to the dataflow and connect the output of the last <span class="UIelement">SQL</span> Node to this <span class="UIelement">Map</span> Node. The result of the <span class="UIelement">SQL</span> Node contains the funding data of those companies, who haven’t had liquidity or a liquidation event and for which we want to run the predictive analysis.</p>
                                                <p>In the configuration panel of the <span class="UIelement">Map</span> Node, select the category <span class="UIelement">user-defined</span> and the function <span class="UIelement"> ml_predict:predict</span> that we just wrote. Select an input column for each of the arguments of the function <span class="UIelement">ml_predict:predict</span>. For example select column $FUNDING_TOTAL_USD for total_funding, $FUNDING_ROUNDS for total_rounds and so on. Enter RESULT for the <span class="UIelement">New Resultant Column Name</span> field:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc2-map-predict-udf.png" />
                                                </p>
                                                <p>Save and execute the Node. The UDF, containing the predictive analysis code is executed for each row and a new column named RESULT is added to the results with the probability prediction for each of the companies:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc2-final-result.png" />
                                                </p>
                                                <h2 class="noPageBreak">Summary</h2>
                                                <p>Using your ML code for predictive analysis is really easy using a UDF. <span class="GeneralProductName3">Xcalar</span> gives you the consistent reliability and speed when you can run your ML code on big data.</p>
                                                <p><a href="#top">Go to the top</a>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </main>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>