<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___SideNav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Advanced Mode">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Understanding UDFs</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlobal.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapDom.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapUtilities.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapXhr.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapTextEffects.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSlideshow.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapFeedback.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapDefault.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapHelpSystem.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.Breadcrumbs.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.MiniToc.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.SideMenu.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapIndex.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlossary.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapParser.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapTopic.js">
        </script>
        <script src="file://vmware-host/Shared Folders/florencechan On My Mac/xcalar-docs/FlareTemplates/Template-Sept2018/Content/Scripts/expandSideNavTopics.js">
        </script>
        <script src="../../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 800px)" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../Home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="content">
                                        <p><a name="top"></a>
                                        </p>
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="sideContent">
                                                    <div class="clearfix">
                                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                            <div class="button-group-container-left">
                                                                <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                    <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                                </button>
                                                                <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                    <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                                </button>
                                                                <div class="button-separator">
                                                                </div>
                                                                <button class="button needs-pie print-button" title="Print">
                                                                    <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                                <h1>Understanding UDFs</h1>
                                                <p>User-defined functions (UDFs) are programs that accept parameters and perform an operation to produce a value. Some built-in UDFs are included in <span class="GeneralProductName3">Xcalar</span> <span class="UIelement">default</span> module for you to enhance your operations. You can create additional UDFs to further extend the functions of <span class="GeneralProductName3">Xcalar</span>. </p>
                                                <h2 class="noPageBreak">When to run UDFs</h2>
                                                <p>You can run UDFs in these circumstances:</p>
                                                <ul>
                                                    <li value="1"><span style="font-weight: bold;">Map</span>&#160;— When you execute a Map operation, you can specify a UDF as a Map function.</li>
                                                    <li value="2"><span style="font-weight: bold;">Import</span>&#160;— When you import a data source, you run a UDF to parse the data and tell <span class="GeneralGUIName1">Xcalar Design</span> how to import it. </li>
                                                    <div class="Example"><span class="label">EXAMPLE:</span>&#160;If you want to import data in a format  not natively supported by <span class="GeneralProductName3">Xcalar</span>, run an import UDF to convert that particular format into a Python dictionary data structure. </div>
                                                    <div class="Example"><span class="label">EXAMPLE:</span>&#160;If your  data source uses a comma in field names, which is an illegal field name character in <span class="GeneralGUIName1">Xcalar Design</span>, run an import UDF to replace the comma when importing the data source.</div>
                                                    <li value="3">
                                                        <p><span style="font-weight: bold;">Export</span>&#160;— When you export data from <span class="GeneralProductName3">Xcalar</span>, you can run a UDF to process the data as it is written  to a target. <span class="GeneralProductName3">Xcalar</span> includes the following built-in export drivers:</p>
                                                        <ul style="list-style-type: circle;">
                                                            <li value="1"><span class="UIelement">fast_csv</span>, which splits the result set into smaller files during the export.</li>
                                                            <li value="2"><span class="UIelement">legacy_udf</span>, which exports your result set using a user-defined function (UDF). This is for legacy support only. </li>
                                                            <li value="3"><span class="UIelement">multiple_csv</span>, which splits the result set into smaller files during the export. This is similar to <span class="UIelement">fast_csv</span> except that <span class="UIelement">multiple_csv</span> lets you add a header line as the first line of the file. <span class="GeneralProductName3">Xcalar</span> recommends this option. </li>
                                                            <li value="4"><span class="UIelement">single_csv</span>, which exports the result set as one file.</li>
                                                        </ul>
                                                        <p>To learn more about using export drivers, please go through the <span class="UIelement">Exports (Tutorial5-ExportDrivers)</span> tutorial included with <span class="GeneralGUIName1">Xcalar Design</span>. Follow these steps to view the tutorial:</p>
                                                        <ol>
                                                            <li value="1">Click the <span class="UIelement">Tutorial Workbooks</span> icon under <span class="UIelement">System</span> icon in the sidebar. This displays the tutorials provided by <span class="GeneralCompanyNameShort">Xcalar</span> to help you learn various topics.</li>
                                                            <li value="2">Find the <span class="UIelement">Exports (Tutorial5-ExportDrivers)</span> tutorial in the list.</li>
                                                            <li value="3">Click the <span class="UIelement">Download</span> button to download it and follow the instructions in the tutorial to learn about using export drivers. </li>
                                                        </ol>
                                                    </li>
                                                </ul>
                                                <h2 class="noPageBreak">Understanding UDF names</h2>
                                                <p>Functions are defined in modules. Therefore, to uniquely identify a UDF, both the module name and function name are needed. <span class="GeneralGUIName1">Xcalar Design</span> shows UDF names in the following format:</p>
                                                <p>module_name:function_name</p>
                                                <p>For example, if a module named <span class="UIelement">calendar</span> contains a function named <span class="UIelement">getWeekday</span>, the name for the UDF  is <span class="UIelement">calendar:getWeekday</span>.</p>
                                                <h3><a name="UDF"></a>UDF naming conventions</h3>
                                                <p><span class="GeneralGUIName1">Xcalar Design</span> does not have restrictions on function names, but modules must follow the module naming conventions.</p>
                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage">The following list describes the naming conventions:</a></span>
                                                    <div class="MCDropDownBody dropDownBody">
                                                        <ul>
                                                            <li value="1">Characters must be a-z, 0-9,  hyphen (-), or underscore (_).</li>
                                                            <li value="2">Letters must be lowercase.</li>
                                                            <li value="3">First character must be a letter or an underscore.</li>
                                                            <li value="4">Character length:
			<ul><li value="1">UDF module name, the length must not exceed 1023 characters.
			<div class="Note"><span class="label">NOTE: </span>The UDF module name <var>default</var> is reserved by <span class="GeneralProductName3">Xcalar</span>.</div></li><li value="2">UDF function name, the length must not exceed 255 characters.</li><li value="3">UDF module source code, the length must not exceed 10485760 characters.</li></ul></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <h2 class="noPageBreak">Limitations and restrictions</h2>
                                                <p>The following list describes the UDF limitations and restrictions:</p>
                                                <ul>
                                                    <li value="1">UDFs must be written in Python. </li>
                                                    <li value="2">The Python version supported by <span class="GeneralProductName3">Xcalar</span> is 3.6. Do not use code in the UDF that is not supported by the Python 3.6 interpreter.</li>
                                                    <li value="3">The data type for values returned by a UDF is always String. UDFs, however, can accept arguments of different data types.</li>
                                                    <li value="4">Each UDF can have up to 16 parameters.</li>
                                                    <li value="5">
                                                        <p>UDFs cannot be used for aggregate operations.</p>
                                                    </li>
                                                    <li value="6">Python code errors occurring during operations are not reported in <span class="GeneralGUIName1">Xcalar Design</span>. However, the following errors are reported:<ul><li value="1">Errors generated during import UDF execution, are written in <span class="UIelement">xpu.out</span> log file. For more information about viewing the log file, see <a href="L_UseSetup.htm#Viewing" class="MCXref xref" xrefformat="{para}">Viewing recent log messages</a>.</li><li value="2">Map UDF execution failures result in FNFs in the impacted columns, but nothing is written in the logs.</li></ul></li>
                                                    <li value="7">Since UDFs contain user-written code, their memory consumption is controlled to protect the rest of the cluster from possible runaway memory consumption.</li>
                                                    <li value="8">
                                                        <p>There are no limits on UDFs' consumption of CPU time. Please contact <span class="GeneralProductName3">Xcalar</span> if you need to control it.</p>
                                                    </li>
                                                </ul>
                                                <div class="Note"><span class="label">NOTE</span>: UDFs have the same read and write privileges as the user that starts <span class="GeneralProductName3">Xcalar</span>. UDFs do not need to have read or write access to the file system including the data source from which <span class="GeneralProductName3">Xcalar</span> imports data.</div>
                                                <h2 class="noPageBreak">About importing Python libraries</h2>
                                                <p>Python libraries imported in the UDF must be installed on every node before you can upload the UDF. For example, if your UDF imports the PDFminer package, the package must be installed on every node of the cluster. Otherwise, your attempt to apply the Map UDF results in a significant number of FNFs (Field Not Found) in the results column, indicating that there is no module named PDFminer.</p>
                                                <h2 class="noPageBreak">About standard output in UDFs</h2>
                                                <p>All functions and statements that involve writing to standard output (stdout) are ignored by the Python interpreter. Do not use the print statement or the sys.stdout.write function to print debugging information in your UDF. If collecting debugging information is important to you,   <span class="GeneralCompanyNameShort">Xcalar</span> recommends that you use the Python logging facility, which is a standard Python library module. </p>
                                                <p>To add log entries to <span class="GeneralProductName3">Xcalar</span>'s xpu.out log files, use the logger named <span style="font-style: italic;">xcalar</span>, as follows:</p>
                                                <div class="Code">import logging<br />import sys<br /><br />logger = logging.getLogger("xcalar")<br />logger.setLevel(logging.INFO)<br /><br />logHandler = logging.StreamHandler(sys.stderr)<br />logger.addHandler(logHandler)<br /><br />logger.info("insert-log-entry-here")</div>
                                                <p>See your Python documentation for information about the Python logging facility.</p>
                                                <p>For more information about viewing the <span class="GeneralProductName3">Xcalar</span>'s log files, see <a href="L_UseSetup.htm#Viewing" class="MCXref xref" xrefformat="{para}">Viewing recent log messages</a>.</p>
                                                <h2 class="noPageBreak">Invoking modules or functions in a module</h2>
                                                <p>You can invoke third-party Python modules in UDFs, but they must be installed at a location accessible to the Python interpreter. That is, they must be on the Python search path.</p>
                                                <h2 class="noPageBreak">How to enter input for a Map UDF</h2>
                                                <p>A UDF can accept input just as other Map functions, which you enter in the <span class="UIelement">Map</span>&#160;panel.</p>
                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage">The following lists describe the rules and tips for entering information in a <span class="GeneralGUIName1">Xcalar Design</span> panel.</a></span>
                                                    <div class="MCDropDownBody dropDownBody">
                                                        <p>For selecting columns:</p>
                                                        <ul>
                                                            <li value="1">By default, the name of the column from which you start the function is displayed as an argument. You can select another column.</li>
                                                            <li value="2">If the column you want to select is not in the result set, go to the Data Browser to pull the column. Then you can select the column as input to the function.</li>
                                                        </ul>
                                                        <p>For typing a column name:</p>
                                                        <ul>
                                                            <li value="1">Always start with the dollar sign ($).</li>
                                                            <li value="2">Always include the prefix if one exists. A derived column does not have a column name prefix.</li>
                                                            <li value="3">To specify the resultant column name, type the name without preceding it with the dollar sign ($).</li>
                                                            <li value="4">To avoid mistakes when typing a column name, click on the argument field, move your cursor to the active result set and click anywhere in the desired column. The column's name is automatically entered for you.</li>
                                                            <li value="5">If an operand accepts a column name, it also accepts the aggregate name that you created when you calculated the aggregate value for a column. </li>
                                                        </ul>
                                                        <p>For typing an operand value:</p>
                                                        <ul>
                                                            <li value="1">In most cases, do not surround the value with quote marks, even if it is a string with a space. In cases where the function can evaluate the value as a string or numeric value, use the quote marks.&#160;You can check the syntax displayed in the panel.&#160;The syntax displays the quote marks for an operand if the operand is to be interpreted as a string.</li>
                                                            <li value="2">If the string contains  the backslash (\) or double quote mark ("), escape the character with a backslash (\). Not doing so causes an error message, indicating that the input string is a malformed evaluation string.</li>
                                                            <li value="3">The $ character has special meaning in <span class="GeneralGUIName1">Xcalar Design</span>. It denotes a column name. If your input string starts with $, escape it with a backslash (\).</li>
                                                            <li value="4">The caret (^) has  special meaning in <span class="GeneralGUIName1">Xcalar Design</span>.&#160;It denotes a named aggregate value. If your input string starts with a caret, escape it with a backslash (\).</li>
                                                            <li value="5">
                                                                <p>Boolean values are case-insensitive. For example, in an input field that accepts a Boolean value, you can type true, True, false, or False.</p>
                                                            </li>
                                                        </ul>
                                                        <p>In the panel, you can undo any typing with the undo key or key combination that you normally use in your browser.</p>
                                                    </div>
                                                </div>
                                                <p>When you enter a string that cannot be interpreted as another data type (for example, <span class="UIelement">airlines</span>), do not surround the string with quote marks. If the input can be interpreted as a numeric or Boolean value, surround the input with quote marks to indicate that the input is meant be a string. In the following examples, the input is interpreted as a string:</p>
                                                <ul>
                                                    <li value="1">"3"</li>
                                                    <li value="2">"true"</li>
                                                </ul>
                                                <p>Without the quote marks, <span class="UIelement">3</span> is interpreted as an integer, and <span class="UIelement">true</span> is interpreted as a Boolean value. </p>
                                                <p><a href="#top">Go to the top</a>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>