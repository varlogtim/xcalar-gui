<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Reference">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Map functions</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <link href="../Fonts/open-sans.regular.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Semibold.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Light.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Bold.ttf" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.topic-ratings-button
{
	-pie-background: transparent url('../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../Resources/TableStyles/SimpleTable.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <div id="contentBody">
                                    <div class="row collapse">
                                        <div class="sideContent">
                                            <div class="clearfix">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                        </button>
                                                        <button class="button needs-pie next-topic-button" title="Navigate next">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                        </button>
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/XD_help.js" data-mc-side-menu="True" data-mc-max-depth="-1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                        <div class="bodyProxyNarrow">
                                            <h1><a name="mapFunctions" class="ForCSH"></a>Map functions</h1>
                                            <p>This section describes the function categories supported by the Map operation. If the input type is shown as Any, the data type can be boolean, float, integer, or string.</p>
                                            <p>For information about how to start a Map operation, see <a href="../B_CommonTasks/K_Map.htm" class="MCXref xref">Using the Map function to create new values</a>.</p>
                                            <div class="Note"><span class="label">NOTE</span>:&#160;Boolean values are treated as integers in a Map function. For example, you can apply the mult function to multiply a Boolean value by a number.</div>
                                            <h2><a name="About"></a>About date and time formats</h2>
                                            <p>Some functions  require you to enter date or time formats in the input and output fields. You specify year, month, day, hour, minute, and second as %Y, %m, %d, %H, %M, and %S, respectively. </p>
                                            <p>Some specifiers use uppercase and lowercase letters to distinguish between  the long and short form of the same name. For example, %b is an abbreviated month name such as Aug, and %B is a full month name such as August. </p>
                                            <p>For a date to be displayed as <span class="UIelement">Sat, April 07, 2007</span> in a table column, specify the following format as the output format:</p>
                                            <p class="userInput">%a, %B %d, %Y </p>
                                            <p>For a complete list of specifiers that you can use in a <span class="GeneralProductName3">Xcalar</span> function, see  the following document:</p>
                                            <p><a href="http://www.cplusplus.com/reference/ctime/strftime/">http://www.cplusplus.com/reference/ctime/strftime/</a>
                                            </p>
                                            <h2>Arithmetic functions</h2>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" style="width: 82px;" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">abs</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the absolute value.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">absInt</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the absolute value.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">add</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Adds operand 1 and operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">ceil</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the smallest integer that is greater than or equal to the input.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">div</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Divides operand 1 by operand 2. If operand 2 is 0, the result is FNF.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">exp</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Raises e (the base of natural logarithms)&#160;to the power that is equal to the input.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">floor</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the largest integer less than or equal to the input.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">log</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                            <p>Returns the logarithm of the input to the base of e.</p>
                                                            <div class="Note"><span class="label">IMPORTANT</span>: This function is the natural logarithm. It is not the same as the log function in other applications such as Excel, which uses 10 as default base of the logarithm.</div>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">log10</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the logarithm of the input to the base of 10.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">log2</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the logarithm of the input to the base of 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">mod</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the remainder when operand 1 is divided by operand 2. If operand 2 is 0, the result is FNF.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">mult</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Multiplies operand 1 by operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">pow</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Raises operand 1 to the power of operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">round</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Rounds the input to the nearest integer.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">sqrt</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the square root of the input.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">sub</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Subtracts operand 2 from operand 1.</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Float</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h2>Bitwise functions</h2>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" style="width: 22px;" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">bitand</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the result of the AND&#160;operation on operand 1 and operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">bitlshift</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the result of a logical left shift on the bits of operand 1 by the number of bits specified by operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">bitor</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the result of the OR&#160;operation on operand 1 and operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">bitrshift</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the result of a logical right shift on the bits of operand 1 by the number of bits specified by operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">bitxor</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Returns the result of the XOR&#160;(exclusive OR) operation on operand 1 and operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">Integer or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body1">Integer</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h2><a name="Conditio"></a>Conditional functions</h2>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" style="width: 151px;" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" style="width: 151px;" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">and</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the result of the AND&#160;operation on operand 1 and operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">between</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is equal to or greater than operand 2, and less than or equal to operand 3.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">contains</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 contains operand 2. The pattern matching is case-sensitive by default. If you select the <span class="UIelement">IgnoreCase</span> option (that is, set the option to true), the pattern matching is case-insensitive.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                            <p>endsWith</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                            <p>Tests if operand 1 ends with the specified pattern. The pattern matching is case-sensitive by default. If you select the <span class="UIelement">IgnoreCase</span> option (that is, set the option to true), the pattern matching is case-insensitive.</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                            <p>String</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">
                                                            <p>Boolean</p>
                                                        </td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">eq</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 and operand 2 are equal.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any (but operands must be of the same type)</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">exists</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if a value exists in the input column.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">ge</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 is greater than or equal to operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">gt</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is greater than operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">isBoolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if the input data type is boolean.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">isFloat</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if the input data type is float.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">isInf</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if the input value is infinity.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">isInteger</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if the input data type is integer.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">isString</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if the input data type is string.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">le</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is less than or equal to operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">like</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 is similar to operand 2. The strings in the operands are case sensitive. The result is true only if the strings are a complete match. You can include an asterisk (*) as a wild card character. For example, if operand 1 is ABC and operand 2 is A*C, the result is true. If operand 1 is ABC and operand 2 is AB, the result is false.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">lt</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is less than operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">neq</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 is not equal to operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any (but operands must be of the same type)</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">not</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the logical NOT&#160;value of the input.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">or</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the result of the OR operation on operand 1 and operand 2.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">regex</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 matches operand 2, which is a regular expression.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">
                                                            <p>startsWith</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">
                                                            <p>Tests if operand 1 starts with the specified pattern. The pattern matching is case-sensitive by default. If you select the <span class="UIelement">IgnoreCase</span> option (that is, set the option to true), the pattern matching is case-insensitive.</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">
                                                            <p>String</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body1">
                                                            <p>Boolean</p>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h2>Conversion functions</h2>
                                            <div class="Note"><span class="label">NOTE</span>:&#160;Functions for converting date and time strings require an input or output format. For more information about how to specify the format, see <a href="#About" class="MCXref xref">About date and time formats</a>.</div>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">convertDate</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Converts the date from one format to another.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">convertFromUnixTS</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Converts from a UNIX timestamp to another time format.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">convertToUnixTS</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Converts a timestamp to a UNIX timestamp.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">dateAddDay</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Adds a specified number of days to a date. The number can be negative.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">dateAddInterval</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Adds a time interval (specified in the number of years, the number of months, and the number of days) to a date. The numbers can be negative.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">dateAddMonth</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Adds a specified number of months to a date. The number can be negative.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">dateAddYear</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Adds a specified number of years to a date. The number can be negative.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">dateDiff</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Calculates the number of days between two dates. </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">ipAddrToInt</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Converts an IPv4&#160;address (with the specified number of octets) to an integer.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">macAddrToInt</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Converts a MAC&#160;address (with the specified number of octets) to an integer.</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Integer</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h2>Miscellaneous functions</h2>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                                <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">dhtHash</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Generates a hash key used by the distributed hash table.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">genRandom</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Generates a random number between the first operand and second operand.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">genUnique</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Generates a unique integer for each row in a new column.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">N/A</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                            <p>if</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                            <p>Tests if a condition (first argument) is true or false. If true, returns the value of the second argument; if false, returns the value of the third argument.</p>
                                                            <p>If the first argument is a non-zero numeric value, it is considered to be true. If it is 0, it is considered to be false.</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">ifStr</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">
                                                            <p>Tests if a condition (first argument) is true or false. If true, returns the value of the second argument; if false, returns the value of the third argument.

</p>
                                                            <p>If the first argument is a non-zero numeric value, it is considered to be true. If it is 0, it is considered to be false.</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">Boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body1">String</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <div class="Note"><span class="label">NOTE</span>:&#160;For the if or ifStr function, an output value specified  in the incorrect data type results in FNF (field not found). For example, for the if function, suppose you specify a string as the output such as Correct for the true condition and Incorrect for the false condition, the function returns FNF because the appropriate output data type is float.</div>
                                            <h2>String functions</h2>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">concat</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Concatenates two strings.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">countChar</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Counts occurrences of specified character or string.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">cut</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">
                                                            <p>Returns the string located at the numbered field.&#160;Field numbers start at 1. Fields are separated by a delimiter. For example, if the string in the Date column is 12/6/2016, the delimiter is the / character, and the field number is 3, the function returns 2016, which is the third field in the string.</p>
                                                            <p>The function returns an empty string in the resultant column if any of either of the following conditions is true:</p>
                                                            <ul>
                                                                <li value="1">The numbered field does not exist.</li>
                                                                <li value="2">The delimiter does not exist and the field number is greater than 1</li>
                                                            </ul>
                                                            <p>If the delimiter does not exist and the field number is 1, the resultant column returns the input string.</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                            <p>Input to parse:&#160;String</p>
                                                            <p>Field number:&#160;Integer or boolean</p>
                                                            <p>Delimiter: String</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">find</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                            <p>Returns the index of the search string (that is, the position of the string's first character). Starting index and ending index limit where the string can be found.  Indexes start at 0 and are inclusive. To return an index as long as it is equal to or greater than the starting index, specify 0 for the ending index. If the string is not found within the specified indexes, the function returns -1.</p>
                                                            <p>For example:</p>
                                                            <p>For the Date column, you can search for 2007 with the starting index of 3 and ending index of 5. Suppose the source string is 1/1/2007, the function returns 4 because 2007 is found at index 4.</p>
                                                            <p>Suppose the source string is 12/12/2007, the function returns -1 because  2007 is not found at an index between 3 and 5. However, if the ending index is set to 0, the function returns 6.</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                            <p>Column to search:&#160;String</p>
                                                            <p>String to find:&#160;String</p>
                                                            <p>Starting index:&#160;Integer or boolean</p>
                                                            <p>Ending index:&#160;Integer or boolean</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">len</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the length of the input.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">lower</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Changes a string to lowercase.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">replace</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">
                                                            <p>Searches for a string and replaces it with another string in a specified column.</p>
                                                            <p>The pattern matching is case-sensitive by default. If you select the <span class="UIelement">IgnoreCase</span> option (that is, set the option to true), the pattern matching is case-insensitive.</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">rfind</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Same as the find function except that it returns the index of the last character of the search string.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                            <p>Column to search:&#160;String</p>
                                                            <p>String to find:&#160;String</p>
                                                            <p>Starting index:&#160;Integer or boolean</p>
                                                            <p>Ending index:&#160;Integer or boolean</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">strip</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Eliminates the leading and trailing white space from the input string.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">substring</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2"> Creates a string from the source that starts at the start index (inclusive) and ends at the end index (exclusive). This  is the equivalent of the python command <code>str[startIdx:endIdx]</code>. To have the same effect as  <code>str[startIdx:]</code>, specify 0 for the end index. To have the same effect as <code>str[:endIdx]</code>, specify 0 for the start index. To index back from the end of the string, use a negative index value.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                            <p>Column to search:&#160;String</p>
                                                            <p>Start index:&#160;Integer or boolean</p>
                                                            <p>End index:&#160;Integer or boolean</p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">upper</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Changes a string to uppercase.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">wordCount</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Returns the number of words in the input.</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">String</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Integer</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h2>Trigonometric functions</h2>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">acos</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the arccosine of input value, in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">acosh</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the hyperbolic arccosine of input value, in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">asin</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the arcsine of input value, in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">asinh</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the hyperbolic arcsine of input value, in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">atan</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the arctangent of input value, in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">atan2</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the principal value of arctangent(y/x), in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">atanh</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the hyperbolic arctangent of input value, in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">cos</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the cosine of input value expressed in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">cosh</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the hyperbolic cosine of input value expressed in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">degrees</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Converts input value, expressed in radians, to degrees.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">pi</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Creates a column with the value of pi in each row.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">N/A</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">radians</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Converts input value, expressed in degrees, to radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">sin</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the sine of input value expressed in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">sinh</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the hyperbolic sine of input value expressed in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">tan</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the tangent of input value expressed in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">tanh</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Returns the hyperbolic tangent of input value expressed in radians.</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">Integer, float, or boolean</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Float</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h2>Type-casting functions</h2>
                                            <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" style="width: 18px;" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" style="width: 18px;" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">bool</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">
                                                            <p>Casts value to a boolean value as follows:</p>
                                                            <ul>
                                                                <li value="1">A string is converted to the boolean value, false. The only exception is that if the string is <span class="UIelement">true</span>, it is converted to the boolean value, true.</li>
                                                                <li value="2">The number  0 is converted to the boolean value, false.</li>
                                                                <li value="3">A non-zero float or integer value is converted to the boolean value, true. </li>
                                                            </ul>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">float</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                            <p>Casts value to float. </p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">int</td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">
                                                            <p>Casts value to integer. </p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                    </tr>
                                                    <tr class="TableStyle-SimpleTable-Body-Body2">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">string</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">
                                                            <p>Casts value to string. </p>
                                                        </td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">Any</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">String</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <div class="Note"><span class="label">NOTE</span>:&#160;If the input is an empty string, the output of the float and int functions is 0, the output of the bool function is false, and the output of the string function is an empty string.</div>
                                            <h2>User-defined functions</h2>
                                            <p>User-defined functions (UDFs)&#160;are functions that you or other users of <span class="GeneralGUIName1">Xcalar Design</span> create and upload. <span class="GeneralProductName3">Xcalar</span> is shipped with several <span class="GeneralCompanyNameShort">Xcalar</span>-defined UDFs in the default module. This section describes the <span class="GeneralCompanyNameShort">Xcalar</span>-defined UDFs.</p>
                                            <div class="Note"><span class="label">NOTE</span>:&#160;The data type of all UDF output is string.</div>
                                            <h3>convertFormats</h3>
                                            <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertFormats(colName, inputFormat, outputFormat)</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Converts one time format to another.</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                            <p>colName: name of the column to convert.</p>
                                                            <p>inputFormat: format of the column named colName. For example, if the format is 2005-12-05 in the column, then the input format is %Y-%m-%d.</p>
                                                            <p>outputFormat: output format. For example if you want the date to be 12/05/2005, then the output format is %m/%d/%Y.</p>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h3>convertFromUnixTS</h3>
                                            <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertFromUnixTS(colName, outputFormat)</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Converts from a UNIX timestamp to another time format.</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                            <p>colName: name of the column to convert.</p>
                                                            <p>outputFormat: format to which the column is converted.</p>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h3>convertToUnixTS</h3>
                                            <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertToUnixTS(colName, inputFormat)</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Converts from a timestamp format to the UNIX timestamp format.</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                            <p>colName: name of the column to convert.</p>
                                                            <p>inputFormat: format from which the column is converted.</p>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h3>openExcel</h3>
                                            <p>This function is not to be invoked by <span class="GeneralProductName3">Xcalar</span> users. It is called by <span class="GeneralGUIName1">Xcalar Design</span> when you select the file format to be Excel during the dataset creation step. </p>
                                            <h3>convertExcelTime</h3>
                                            <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertExcelTime(colName, outputFormat)</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">In Excel, a date can be displayed and stored as a value that represents the number of days that have elapsed since the base date. For example, a date shown as 48739 means that 48739 days have elapsed since the base date. This function converts this value to a regular date. </td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                            <p>colName: name of the column to convert.</p>
                                                            <p>outputFormat: output format from which the Excel date is converted. For example, if you want the date to be 2005-12-04, then enter %Y-%m-%d.</p>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h3>splitWithDelim</h3>
                                            <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <col class="TableStyle-SimpleTable-Column-Column2" />
                                                <col class="TableStyle-SimpleTable-Column-Column1" />
                                                <thead>
                                                    <tr class="TableStyle-SimpleTable-Head-Header1">
                                                        <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                        <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                        <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr class="TableStyle-SimpleTable-Body-Body1">
                                                        <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">splitWithDelim(txt, index, delim)</td>
                                                        <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Extracts the substring from a string starting from the character following the delimiter with the specified index. For example, it there are two delimiters, the indexes for the delimiters are 0 and 1. To obtain the substring starting from the character following the second delimiter, specify 1 as the index.</td>
                                                        <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                            <p>txt: string from which a substring is extracted.</p>
                                                            <p>index: index of the delimiter. Indexing starts from 0, and the substring starts from the character following the delimiter pointed to by the index.</p>
                                                            <p>delim:&#160;character that serves as delimiter.</p>
                                                            <p>The following examples show how this function is used:</p>
                                                            <p>splitWithDelim(a-b-c, 1, -) produces the substring <span class="UIelement">b-c</span>. </p>
                                                            <p>splitWithDelim(a-b-c, 3, -) produces an empty substring. </p>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <h3>now</h3>
                                            <p>This function gets the current time of the <span class="GeneralProductName3">Xcalar</span> cluster. The output represents the number of seconds since the epoch, in UTC. </p>
                                            <p>This function does not take any input.</p>
                                        </div>
                                        <p><a href="#Top">Go to top</a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>