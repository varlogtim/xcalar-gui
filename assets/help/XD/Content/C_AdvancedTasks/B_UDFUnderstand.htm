<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Advanced tasks">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Understanding UDFs</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <link href="../Fonts/open-sans.regular.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Semibold.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Light.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Bold.ttf" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.topic-ratings-button
{
	-pie-background: transparent url('../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../Home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <div id="contentBody">
                                    <div class="row collapse">
                                        <div class="sideContent">
                                            <div class="clearfix">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                        </button>
                                                        <button class="button needs-pie next-topic-button" title="Navigate next">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                        </button>
                                                        <div class="button-group star-buttons loading feedback-topic-required">
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                            <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                            </div>
                                                        </div>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                        </button>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/XD_help.js" data-mc-side-menu="True" data-mc-max-depth="-1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                        <div class="bodyProxyNarrow">
                                            <h1>Understanding UDFs</h1>
                                            <p>User-defined functions (UDFs) are programs that accept parameters and perform an operation to produce a value. Some built-in UDFs are included in <span class="GeneralProductName3">Xcalar</span> default module for you to enhance your operations. You can create additional UDFs to further extend the functions of <span class="GeneralProductName3">Xcalar</span>. </p>
                                            <h2>When to run UDFs</h2>
                                            <p>You can run UDFs in these circumstances:</p>
                                            <ul>
                                                <li value="1"><span style="font-weight: bold;">Map UDF</span>&#160;— When you execute a Map operation, you can specify a UDF as a Map function.</li>
                                                <li value="2"><span style="font-weight: bold;">Import UDF</span>&#160;— When you import a data source, you run a UDF to parse the data and tell <span class="GeneralGUIName1">Xcalar Design</span> how to import it. </li>
                                                <div class="Example"><span class="label">EXAMPLE:</span>&#160;If you want to import data in a format  not natively supported by <span class="GeneralProductName3">Xcalar</span>, run an import UDF to convert that particular format into a Python dictionary data structure. </div>
                                                <div class="Example"><span class="label">EXAMPLE:</span>&#160;If your  data source uses a comma in field names, which is an illegal field name character in <span class="GeneralGUIName1">Xcalar Design</span>, run an import UDF to replace the comma when importing the data source.</div>
                                                <li value="3">
                                                    <p><span style="font-weight: bold;">Export UDF</span>&#160;— When you export data from <span class="GeneralProductName3">Xcalar</span>, you run a UDF to process the data as it is written  to a target. A UDF run when data is exported is called an export UDF.</p>
                                                </li>
                                            </ul>
                                            <h2>Understanding UDF names</h2>
                                            <p>Functions are defined in modules. Therefore, to uniquely identify a UDF, both the module name and function name are needed. <span class="GeneralGUIName1">Xcalar Design</span> shows UDF names in the following format:</p>
                                            <p>module_name:function_name</p>
                                            <p>For example, if a module named <span class="UIelement">calendar</span> contains a function named <span class="UIelement">getWeekday</span>, the name for the UDF  is <span class="UIelement">calendar:getWeekday</span>.</p>
                                            <div class="Note"><span class="label">IMPORTANT</span>: For an export UDF, the function you want to run during the export must be named main. For example, you can have a module named my_module containing several functions. But there must be a function named main in my_module that will be executed when you export data to the UDF. If the module does not contain a function named main, you cannot select the module as an export target.</div>
                                            <h3><a name="UDF"></a>UDF naming conventions</h3>
                                            <p><span class="GeneralGUIName1">Xcalar Design</span> does not have restrictions on function names, but modules must follow the module naming conventions.</p>
                                            <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="17" alt="Closed" data-mc-alt2="Open" />The following list describes the naming conventions:</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <ul>
                                                        <li value="1">Characters must be a-z, 0-9, hyphen (-), or underscore (_).</li>
                                                        <li value="2">Letters must be lowercase.</li>
                                                        <li value="3">First character must be a letter or an underscore.</li>
                                                        <li value="4">The module name <span style="font-style: italic;">default</span> is reserved by <span class="GeneralProductName3">Xcalar</span>.</li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <h2>Limitations and restrictions</h2>
                                            <p>The following list describes the UDF limitations and restrictions:</p>
                                            <ul>
                                                <li value="1">UDFs must be written in Python. </li>
                                                <li value="2">The Python version supported by <span class="GeneralProductName3">Xcalar</span> is 3.6. Do not use code in the UDF that is not supported by the Python 3.6 interpreter.</li>
                                                <li value="3">The data type for values returned by a UDF is always String. (UDFs, however, can accept arguments of different data types.)</li>
                                                <li value="4">Each UDF can have up to 16 parameters.</li>
                                                <li value="5">Python code errors occurring during operations are not reported in <span class="GeneralGUIName1">Xcalar Design</span>.</li>
                                                <li value="6">UDFs cannot be used for aggregate operations.</li>
                                            </ul>
                                            <div class="Note"><span class="label">NOTE</span>: UDFs have the same read and write privileges as the user that starts <span class="GeneralProductName3">Xcalar</span>. UDFs do not need to have read or write access to the file system including the data source from which <span class="GeneralProductName3">Xcalar</span> imports data.</div>
                                            <div class="Note"><span class="label">NOTE</span>:&#160;After you add a module to the cluster, you might see a function named <span class="UIelement">getreader</span> listed as one of the functions in the module. Do not use this function. Use only the functions that you defined in the UDF&#160;module.</div>
                                            <h2>About importing Python libraries</h2>
                                            <p>Python libraries imported in the UDF must be installed on every node before you can upload the UDF. For example, if your UDF imports the PDFminer package, the package must be installed on every node of the cluster. Otherwise, your attempt to apply the UDF results in a significant number of FNFs (Field Not Found) in the results column, indicating that there is no module named PDFminer.</p>
                                            <h2>About standard output in UDFs</h2>
                                            <p>All functions and statements that involve writing to standard output (stdout) are ignored by the Python interpreter. Do not use the print statement or the sys.stdout.write function to print debugging information in your UDF. If collecting debugging information is important to you,   <span class="GeneralCompanyNameShort">Xcalar</span> recommends that you use the Python logging facility, which is a standard Python library module. See your Python documentation for information about the Python logging facility.</p>
                                            <h2>Invoking modules or functions in a module</h2>
                                            <p>You can invoke third-party Python modules in UDFs, but they must be installed at a location accessible to the Python interpreter. That is, they must be on the Python search path.</p>
                                            <h2>How to enter input for a UDF</h2>
                                            <p>A UDF can accept input just as other Map functions, which you enter in the <span class="UIelement">MAP</span>&#160;panel.</p>
                                            <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="17" alt="Closed" data-mc-alt2="Open" />The following lists describe the rules and tips for entering information in a <span class="GeneralGUIName1">Xcalar Design</span> panel.</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <p>For selecting columns:</p>
                                                    <ul>
                                                        <li value="1">By default, the name of the column from which you start the function is displayed as an argument. You can select another column.</li>
                                                        <li value="2">If necessary,  click <img src="../Resources/Images/XD_assets/xd-show.png" /> in the panel to bring the specified table into focus. You can then scroll the table to select the desired column.</li>
                                                        <li value="3">If the column you want to select is not in the table, go to the Data Browser to pull the column. Then you can select the column as input to the function.</li>
                                                    </ul>
                                                    <p>For typing a column name:</p>
                                                    <ul>
                                                        <li value="1">Always start with the dollar sign ($).</li>
                                                        <li value="2">Always include the prefix if one exists. (A derived column does not have a column name prefix.) </li>
                                                        <li value="3">To specify the resultant column name, type the name without preceding it with the dollar sign ($).</li>
                                                        <li value="4">To avoid mistakes when typing a column name, place the insertion point in the argument field, move your cursor to the active table and click anywhere in the desired column. The column's name is automatically entered for you.</li>
                                                        <li value="5">If an operand accepts a column name, it also accepts the aggregate name that you created when you calculated the aggregate value for a column. </li>
                                                    </ul>
                                                    <p>For typing an operand value:</p>
                                                    <ul>
                                                        <li value="1">In most cases, do not surround the value with quote marks, even if it is a string with a space. In cases where the function can evaluate the value as a string or numeric value, use the quote marks.&#160;You can check the syntax displayed in the panel.&#160;The syntax displays the quote marks for an operand if the operand is to be interpreted as a string.</li>
                                                        <li value="2">If the string contains a special character, such as the backslash (\) or double quote mark ("), escape the special character with a backslash (\). Without using the backslash as the escape character, you will see an error message, indicating that the input string is a malformed evaluation string.</li>
                                                        <li value="3">The $ character has special meaning in <span class="GeneralGUIName1">Xcalar Design</span>: It denotes a column name. If your input string starts with $, escape it with a backslash (\).</li>
                                                        <li value="4">The caret (^) has  special meaning in <span class="GeneralGUIName1">Xcalar Design</span>:&#160;It denotes a named aggregate value. If your input string starts with a caret, escape it with a backslash (\).</li>
                                                    </ul>
                                                    <p>In the panel, you can undo any typing with the undo key or key combination that you normally use in your browser.</p>
                                                </div>
                                            </div>
                                            <p>When you enter a string that cannot be interpreted as another data type (for example, <span class="UIelement">airlines</span>), do not surround the string with quote marks. If the input can be interpreted as a numeric or Boolean value, surround the input with quote marks to indicate that the input is meant be a string. In the following examples, the input is interpreted as a string:</p>
                                            <ul>
                                                <li value="1">"3"</li>
                                                <li value="2">"true"</li>
                                            </ul>
                                            <p>Without the quote marks, <span class="UIelement">3</span> is interpreted as an integer, and <span class="UIelement">true</span> is interpreted as a Boolean value. </p>
                                            <p>&#160;</p>
                                        </div>
                                        <p><a href="#Top">Go to top</a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>