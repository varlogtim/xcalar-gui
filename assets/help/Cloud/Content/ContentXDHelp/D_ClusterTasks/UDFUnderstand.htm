<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___SideNav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Understanding user-defined functions</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlobal.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapUtilities.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapXhr.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTextEffects.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSlideshow.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapFeedback.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDefault.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAccessibility.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapHelpSystem.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.MiniToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.SideMenu.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapIndex.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlossary.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapParser.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTopic.js" defer="defer">
        </script>
        <script src="../../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 800px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../Home_cloud.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <main id="main" class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="content">
                                        <p><a name="top"></a>
                                        </p>
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="sideContent">
                                                    <div class="clearfix">
                                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                            <div class="button-group-container-left">
                                                                <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                    <img alt="Navigate previous" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                    <img alt="Navigate next" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <div class="button-separator">
                                                                </div>
                                                                <button class="button needs-pie print-button" title="Print">
                                                                    <img alt="Print" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                                <h1>Understanding user-defined functions</h1>
                                                <p>The purpose of the <span class="GeneralProductName3">Xcalar</span> user-defined functions (UDFs) is to extend the functionality of <span class="GeneralProductName3">Xcalar</span>. <span class="GeneralProductName3">Xcalar</span> UDFs are written in Python. By default, <span class="GeneralProductName3">Xcalar</span> includes a few built-in UDFs in the <span class="UIelement">default.py</span> module.  </p>
                                                <h2 class="noPageBreak">When to run UDFs</h2>
                                                <p>You can run UDFs in the following circumstances:</p>
                                                <ul>
                                                    <li value="1"><span style="font-weight: bold;">Map</span>&#160;— When you need to use Python to convert your column data into custom values,  you can write a Map UDF, and specify it as a function in the Map operation.</li>
                                                    <li value="2"><span style="font-weight: bold;">Import</span>&#160;— When your data source requires custom data processing during an import, you can use an import UDF to parse the data and tell <span class="GeneralGUIName1">Xcalar Design</span> how to import it. </li>
                                                    <div class="Example"><span class="label">EXAMPLE:</span>&#160;If you want to import data in a format  not natively supported by <span class="GeneralProductName3">Xcalar</span>, write and run an import UDF to convert that particular format into a Python dictionary data structure. </div>
                                                    <div class="Example"><span class="label">EXAMPLE:</span>&#160;If your  data source uses a comma in field names, which is an illegal field name character in <span class="GeneralGUIName1">Xcalar Design</span>, run an import UDF to replace the comma when importing the data source.</div>
                                                    <li value="3">
                                                        <p><span style="font-weight: bold;">Export</span>&#160;— When you export data from <span class="GeneralProductName3">Xcalar</span>, you can specify an export UDF to process the data as it is written  to the destination. This method of export is deprecated. </p>
                                                    </li>
                                                </ul>
                                                <h2 class="noPageBreak">Understanding user-defined function names</h2>
                                                <p>User-defined function (UDF) modules contain functions and both the module name and the function name are needed in the following format to uniquely identify a UDF:</p>
                                                <p>module_name:function_name</p>
                                                <p>For example, if a module named <span class="UIelement">calendar</span> contains a function named <span class="UIelement">getWeekday</span>, the name for the UDF  is <span class="UIelement">calendar:getWeekday</span>.</p>
                                                <h3><a name="UDF"></a>User-defined function name requirements</h3>
                                                <p><span class="GeneralGUIName1">Xcalar Design</span> does not have any restrictions on the function names, but user-defined function (UDF) modules must follow the module naming conventions. </p>
                                                <div class="Note"><span class="label">NOTE:</span> Starting from version 2.1, you cannot save or upload a UDF module with hyphens in the name but any existing UDF modules with hyphens in the names will continue to work.</div>
                                                <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="17" alt="Closed" data-mc-alt2="Open" />The following list describes the naming conventions:</a></span>
                                                    <div class="MCDropDownBody dropDownBody">
                                                        <ul>
                                                            <li value="1">Character length:
			<ul><li value="1">A UDF <span class="UIelement">module</span> name must not exceed 1023 characters.
			<div class="Note"><span class="label">IMPORTANT:</span> Must not use the reserved name <var>default</var>.</div></li><li value="2">A UDF <span class="UIelement">function</span> name must not exceed 255 characters.</li><li value="3">A UDF <span class="UIelement">module source code</span> file must not exceed 10485760 characters.</li></ul></li>
                                                            <li value="2">First character must be a letter of the alphabet or an underscore.</li>
                                                            <li value="3">Characters must be a-z, 0-9,  or underscore (_). </li>
                                                            <div class="Note"><span class="label">IMPORTANT:</span> Must not use uppercase letters of the alphabet.</div>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <h2 class="noPageBreak">Limitations and restrictions</h2>
                                                <p>The following list describes the UDF limitations and restrictions:</p>
                                                <ul>
                                                    <li value="1">UDFs must be written in Python. </li>
                                                    <li value="2">The Python version supported by <span class="GeneralProductName3">Xcalar</span> is 3.6. Do not use code in the UDF that is not supported by the Python 3.6 interpreter.</li>
                                                    <li value="3">The data type for values returned by a UDF is always String. UDFs, however, can accept arguments of different data types.</li>
                                                    <li value="4">Each UDF can have up to 16 parameters.</li>
                                                    <li value="5">
                                                        <p>UDFs cannot be used for aggregate operations.</p>
                                                    </li>
                                                    <li value="6">Map UDF execution failures result in FNFs in the impacted columns and the errors are displayed in a modal as described in <a href="../E_Reference/UdfExamples.htm#Locating" class="MCXref xref" xrefformat="{para}">Locating errors in the Map UDF execution </a>.</li>
                                                    <li value="7">Since UDFs contain user-written code, their memory consumption is controlled to protect the rest of the cluster from possible runaway memory consumption.</li>
                                                </ul>
                                                <div class="Note"><span class="label">NOTE</span>: UDFs have the same read and write privileges as the user that starts <span class="GeneralProductName3">Xcalar</span>. UDFs do not need to have read or write access to the file system including the data source from which <span class="GeneralProductName3">Xcalar</span> imports data.</div>
                                                <h2>Next step</h2>
                                                <p>Create and manage UDFs by following the instructions at <a href="UDFTasks.htm" class="MCXref xref" xrefformat="{para}">Creating and managing user-defined functions</a>.</p>
                                                <p><a href="#top">Go to the top</a>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </main>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>