<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___SideNav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Visualizing a Xcalar table in Tableau</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlobal.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapUtilities.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapXhr.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTextEffects.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSlideshow.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapFeedback.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDefault.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAccessibility.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapHelpSystem.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.MiniToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.SideMenu.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapIndex.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlossary.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapParser.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTopic.js" defer="defer">
        </script>
        <script src="../../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 800px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../Home_cloud.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <main id="main" class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="content">
                                        <p><a name="top"></a>
                                        </p>
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="sideContent">
                                                    <div class="clearfix">
                                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                            <div class="button-group-container-left">
                                                                <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                    <img alt="Navigate previous" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                    <img alt="Navigate next" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <div class="button-separator">
                                                                </div>
                                                                <button class="button needs-pie print-button" title="Print">
                                                                    <img alt="Print" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                                <h1>Visualizing a <span class="GeneralProductName3">Xcalar</span> table in Tableau</h1>
                                                <p>After you have processed your data in <span class="GeneralProductName3">Xcalar</span>, many times, you may want to visualize it using specialized Business Intelligence (BI) software like Tableau. This tutorial shows how you can write an application in <span class="GeneralProductName3">Xcalar</span> so that its result set is accessible from Tableau.</p>
                                                <p>The first step in creating an application in <span class="GeneralProductName3">Xcalar</span> is to create a project. A project is a container where you create, design, troubleshoot, and execute your application. Open <span class="GeneralGUIName1">Xcalar Design</span> in a browser and log in. Create a new project called VisualizeDataInTableau and open it by clicking on its project card.</p>
                                                <p><span class="GeneralProductName3">Xcalar</span> has two modes - the SQL Mode and the Developer Mode. In SQL Mode, you develop your queries using the SQL query statements and user-defined functions (UDFs) written in Python. In Developer Mode, you develop your applications using visual components, SQL query statements, and UDFs written in Python.</p>
                                                <p>We will be using visual components in this application; therefore, we will work in Developer Mode. If you are not in Developer Mode, click the mode switch to <span class="UIelement">Developer Mode</span> in the top menu bar.</p>
                                                <p>Next, we will import the wine reviews file (winemag-data.json) into <span class="GeneralProductName3">Xcalar</span>. If you have already imported this file into a dataset, skip to the second step. </p>
                                                <h2 class="noPageBreak">1. Importing the wine reviews file</h2>
                                                <p>To import the wine reviews file into <span class="GeneralProductName3">Xcalar</span>, click on the <span class="UIelement">Sources</span> icon in the sidebar, and then click <span class="UIelement">Import Data Source</span> in the <span class="UIelement">Datasets </span>panel. Since our file resides on <span class="GeneralProductName3">Xcalar</span>’s public S3 bucket, select <span class="UIelement">Public S3</span> as the <span class="UIelement">Connector</span>, and enter /xcmarketplace-us-east-1/tutorial-datasets/ as the <span class="UIelement">Data Source Path</span>. Click <span class="UIelement">Browse </span>to browse the directory structure and select winemag-data.json. Click <span class="UIelement">Next </span>to preview the file.</p>
                                                <p><span class="GeneralProductName3">Xcalar</span> automatically detects the format of the file and displays its preview. Since this is a simple json file, we don't need to pull out any nested fields. Accept all default options and click <span class="UIelement">Create Dataset</span>. A dataset called winemag-data is created with 129,971 rows and 13 columns. The next step is to read the dataset.</p>
                                                <h2 class="noPageBreak">2. Creating a module and reading the dataset</h2>
                                                <p>To read the dataset, we need to create a module. In <span class="GeneralProductName3">Xcalar</span>, a module is a graphical representation of a series of operations performed on data. Each operation is represented by a graphical component called Node. To create a module, click the <span class="UIelement">Application Builder</span> icon in the sidebar and then click either the <span class="UIelement">Create new module</span> or the <span class="UIelement">New module</span> tab. A new module called <span class="UIelement">Module 1</span> is created.</p>
                                                <p>Every module starts with a source Node, which brings the data into the module. Since we imported our data file into a dataset, let’s add a Dataset Node to the module and configure it to read the dataset we imported.</p>
                                                <p>From the <span class="UIelement">In</span> category of Nodes, add a <span class="UIelement">Dataset </span>Node to the canvas. To configure the Node, click on it and select <span class="UIelement">Configure</span>. Select the winemag-data dataset in the configuration panel and click <span class="UIelement">Save</span>. By default, the Node gets executed and the result set is displayed:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Tutorials/xp-dataset.png" />
                                                </p>
                                                <p>Next, we will group the wines by their ratings, stored in the points column.</p>
                                                <h2 class="noPageBreak">3. Grouping rows</h2>
                                                <p>To group the wines by their ratings, right click the points column header and select <span class="UIelement">Group By</span>. A Group By Node is added to the canvas and its configuration panel opens up. Configure the Node as follows:</p>
                                                <p class="CLIoutput">Fields to group on: $winemag_data::points</p>
                                                <p class="CLIoutput">Function to apply to group: count</p>
                                                <p class="CLIoutput">Field name to count occurrences of: $winemag_data::title</p>
                                                <p class="CLIoutput">New column name for the group by resultant column: wine_count</p>
                                                <p>Save and execute the Node. A new result set is displayed with 21 rows:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Tutorials/xp-group-by-result.png" />
                                                </p>
                                                <h2 class="noPageBreak">4. Changing data types</h2>
                                                <p>If you look carefully at the data type of each column in the column header, you will notice that the points column is of type string (<img src="../../Resources/Images/Tutorials/ts-string.png" />). To visualize this result set, we may need to convert this column to integer. Right click on the points column header and select <span class="UIelement">Change data type -&gt; Integer</span>. A <span class="UIelement">Cast </span>Node is added to the canvas and it's configuration panel is displayed. The points column is at the top of the panel showing a <span class="UIelement">New Name</span> and <span class="UIelement">New Type</span>:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Tutorials/xp-cast-config.png" />
                                                </p>
                                                <p>Click <span class="UIelement">Save </span>and execute the Node. </p>
                                                <p>A new result set is displayed with points column as integer. </p>
                                                <p>
                                                    <img src="../../Resources/Images/Tutorials/xp-cast-result.png" />
                                                </p>
                                                <h2 class="noPageBreak">5. Saving the result set as a table</h2>
                                                <p>To ensure a seamless client-side application compatibility, <span class="GeneralProductName3">Xcalar</span> emulates the Spark Java Database Connectivity (JDBC) and Open Database Connectivity (ODBC) server protocols. Therefore, any BI software that supports JDBC or ODBC can access <span class="GeneralProductName3">Xcalar</span> as long as the data is stored in standard tables. </p>
                                                <p>To save our result set in a table, from the <span class="UIelement">Out </span>category of Nodes, drag and drop the <span class="UIelement">Publish Table</span> Node to the canvas and connect it to the  Cast Node. To configure the <span class="UIelement">Publish Table</span> Node, click on it and select <span class="UIelement">Configure</span>. In the configuration panel, enter a table name and check <span class="UIelement">Select All</span>.  Leave other fields as default. </p>
                                                <div class="Note"><span class="label">NOTE:</span> <span class="GeneralProductName3">Xcalar</span> automatically converts the name of the table to the upper case.</div>
                                                <p>
                                                    <img src="../../Resources/Images/Tutorials/xt-xcalar-tableau.png" />
                                                </p>
                                                <p>Save and execute the Node. The WINE_RATINGS table is created. </p>
                                                <p>To verify the table, click the <span class="UIelement">Sources </span>icon, and then the <span class="UIelement">Tables </span>icon in the sidebar. The Tables panel opens up. Look for WINE_RATINGS table and click on it to see its preview:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Tutorials/xt-table.png" />
                                                </p>
                                                <h2 class="noPageBreak">5. Visualizing a <span class="GeneralProductName3">Xcalar</span> table in Tableau</h2>
                                                <p>To visualize a <span class="GeneralProductName3">Xcalar</span> table in Tableau, you need to connect to a <span class="GeneralProductName3">Xcalar</span> instance  from Tableau, and then select the table of interest.</p>
                                                <h3>Configuring Tableau to work with <span class="GeneralProductName3">Xcalar</span></h3>
                                                <ol style="list-style-type: lower-alpha;">
                                                    <li value="1">Open Tableau desktop</li>
                                                    <li value="2">
                                                        <p>In the <span class="UIelement">Connect</span> panel, under the <span class="UIelement">To a Server</span> section, locate and select <span class="UIelement">Spark SQL</span>.</p>
                                                        <p>The Spark SQL modal appears.</p>
                                                    </li>
                                                    <li value="3">In the <span class="UIelement">Server</span> field, enter the hostname or IP&#160;address of the  <span class="GeneralProductName3">Xcalar</span> cluster.</li>
                                                    <li value="4">Verify that the value of the <span class="UIelement">Port</span> field is <span class="UIelement">10000</span>.</li>
                                                    <li value="5">From the <span class="UIelement">Type</span> list, select <span class="UIelement">SparkThriftServer</span>.</li>
                                                    <li value="6">From the <span class="UIelement">Authentication</span> list, select <span class="UIelement">Username and Password</span>.</li>
                                                    <p>Based on this selection the <span class="UIelement">Username</span> and <span class="UIelement">Password</span> fields are made editable.</p>
                                                    <li value="7">In the Transport drop-down, select SASL.</li>
                                                    <li value="8">In the <span class="UIelement">Username</span> field, enter a valid   <span class="GeneralProductName3">Xcalar</span> user name. </li>
                                                    <li value="9">In the <span class="UIelement">Password</span> field, enter the password for the valid <span class="GeneralProductName3">Xcalar</span> user name. </li>
                                                    <li value="10">(Optional) If you require a secure internet connection,  select the <span class="UIelement">Require SSL</span> check box.</li>
                                                    <li value="11">Click <span class="UIelement">Sign In</span>, which takes you back to the Tableau desktop and the data source page.</li>
                                                </ol>
                                                <h3>Viewing <span class="GeneralProductName3">Xcalar</span> tables in Tableau</h3>
                                                <ol style="list-style-type: lower-alpha;">
                                                    <li value="1">In the data source page, from the <span class="UIelement">Schema</span> list, click the search icon and locate and select the <span class="UIelement">default</span> database.</li>
                                                    <li value="2">
                                                        <p>In the <span class="UIelement">Table</span> section, click the search icon in the search field to populate your <span class="GeneralProductName3">Xcalar</span> tables. </p>
                                                        <div class="Note"><span class="label">NOTE</span>:&#160;Only the active <span class="GeneralProductName3">Xcalar</span> tables show up in this list.</div>
                                                    </li>
                                                    <li value="3">Drag the WINE_RATINGS table to the canvas, and then select the sheet tab to view or start analysis.</li>
                                                    <li value="4">
                                                        <p>Here is a sample graph for WINE_RATINGS table in Tableau:</p>
                                                        <p>
                                                            <img src="../../Resources/Images/Tutorials/xt-tableau-graph.png" />
                                                        </p>
                                                    </li>
                                                </ol>
                                                <h2 class="noPageBreak">Summary</h2>
                                                <p>This tutorial touched upon the following topics:</p>
                                                <ul>
                                                    <li value="1">Grouping rows</li>
                                                    <li value="2">Saving a result set to a table</li>
                                                    <li value="3">Connecting Tableau desktop to a <span class="GeneralProductName3">Xcalar</span> instance</li>
                                                    <li value="4">Visualizing <span class="GeneralProductName3">Xcalar</span> tables in Tableau</li>
                                                </ul>
                                                <p>For detailed information about these topics, see the  online help for <span class="GeneralProductName3">Xcalar</span>.</p>
                                                <p>The VisualizeDataInTableau application is available on the tutorial page of <span class="GeneralGUIName1">Xcalar Design</span>.</p>
                                                <p><a href="#top">Go to the top</a>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </main>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>