<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___SideNav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Transforming data</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../Resources/TableStyles/SimpleTable.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlobal.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDom.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapUtilities.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapXhr.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTextEffects.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSlideshow.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapFeedback.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapDefault.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAccessibility.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapHelpSystem.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.MiniToc.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapToc.SideMenu.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapIndex.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapGlossary.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapParser.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapSearch.js" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapTopic.js" defer="defer">
        </script>
        <script src="../../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 800px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../Home_cloud.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <main id="main" class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="content">
                                        <p><a name="top"></a>
                                        </p>
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="sideContent">
                                                    <div class="clearfix">
                                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                            <div class="button-group-container-left">
                                                                <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                    <img alt="Navigate previous" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                    <img alt="Navigate next" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                                <div class="button-separator">
                                                                </div>
                                                                <button class="button needs-pie print-button" title="Print">
                                                                    <img alt="Print" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" class="invisible-label" />
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                                <h1>Transforming data</h1>
                                                <p>The publicly available Crunchbase funding data contains the funding information about 66k companies. It includes information like their current status, total funding, first funding date, last funding date, etc. For our exercise, we will transform this data which can then be used to train a machine learning (ML) model and do predictive analysis.</p>
                                                <p>The data file <cite>companies.csv</cite> can be found at <cite>https://github.com/notpeter/crunchbase-data</cite></p>
                                                <h2 class="noPageBreak">Pre-requisites</h2>
                                                <ul>
                                                    <li value="1">You have access to <span class="GeneralGUIName1">Xcalar Design</span> 2.1 or later.</li>
                                                    <li value="2">You have a basic understanding of how to create a dataflow in <span class="GeneralGUIName1">Xcalar Design</span>.</li>
                                                    <li value="3">You have already imported the Crunchbase data for companies (companies.csv) into a dataset called companies.</li>
                                                </ul>
                                                <h2 class="noPageBreak">Viewing your data</h2>
                                                <p>To start working on your data, click the <span class="UIelement">Dataflow Mode</span> switch on the top right corner of <span class="GeneralGUIName1">Xcalar Design</span> to go to the <span class="UIelement">Dataflow Mode</span>. Drag and drop a <span class="UIelement">Dataset</span> Node into the dataflow canvas and configure it to read the companies dataset.</p>
                                                <p>Save and execute the Node. A tabular view of the data read by the Dataset Node is displayed with 66,368 rows:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-dataset.png" />
                                                </p>
                                                <h2 class="noPageBreak">Removing extra columns</h2>
                                                <p>The first step in transforming your data is to view all the columns and remove any columns that you don’t need. In our case, we do not need the permalink, homepage_url, category_list, country_code, state_code, region and city columns.</p>
                                                <p>To remove the extra columns, drag and drop a <span class="UIelement">SQL</span> Node to the dataflow canvas and connect the <span class="UIelement">Dataset</span> Node to the <span class="UIelement">SQL</span> Node. Configure the <span class="UIelement">SQL</span> Node to select only the required columns:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-sql-config2.png" />
                                                </p>
                                                <p>Save and execute the <span class="UIelement">SQL</span> Node. The new result displays only the columns selected in the SQL statement:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-sql-result.png" />
                                                </p>
                                                <h2 class="noPageBreak">Excluding the rows with missing data</h2>
                                                <p>One of the most important tasks of transforming the data is to find the missing or incorrect data. <span class="GeneralGUIName1">Xcalar Design</span> provides many ways of doing that. Let’s use the <span class="UIelement">Profile</span> feature to view the distribution of values in a column. Right-click the header of a column and select <span class="UIelement">Profile</span> to see if it has missing or negative values. The missing values are displayed as FNFs (field not found).</p>
                                                <p>For example, profiling FUNDING_TOTAL_USD column shows that many companies have ‘-’ as the funding amount:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-profile-funding.png" />
                                                </p>
                                                <p>Also, many companies do not have the funding amount or some of the funding dates. Let’s exclude the companies with missing funding amounts or missing founded dates or missing last funding dates.</p>
                                                <p>Add a <span class="UIelement">Filter</span> Node to the dataflow and connect the output of the last Node to this <span class="UIelement">Filter</span> Node. Configure the <span class="UIelement">Filter</span> Node with the following conditions:</p>
                                                <table style="mc-table-style: url('../../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                    <col class="TableStyle-SimpleTable-Column-Column1" />
                                                    <col class="TableStyle-SimpleTable-Column-Column2" />
                                                    <col class="TableStyle-SimpleTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-SimpleTable-Head-Header1">
                                                            <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Filter Function</th>
                                                            <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Field 1</th>
                                                            <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Field 2</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                                <p>neq</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">$FUNDING_TOTAL_USD</td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column1-Body1">-</td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                                <p>exists</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                                <p>$FOUNDED_AT</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column1-Body2">
                                                                <p>&#160;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">exists</td>
                                                            <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">$LAST_FUNDING_AT</td>
                                                            <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">&#160;</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-filter-missing-info.png" />
                                                </p>
                                                <p>Save and execute the Node. The new result is displayed. If you profile these columns again, you will notice that the rows with missing data have been excluded from the result. The total number of rows is reduced from 66,368 to 41,891.</p>
                                                <h2 class="noPageBreak">Filling in the missing data</h2>
                                                <p>Sometimes, instead of excluding the rows with missing data, you want to fill them with some other data. For example, if a company has a founded date but not the first funding date, we can use the founded date as the first funding date.</p>
                                                <p>Let’s add a <span class="UIelement">Map</span> Node to the dataflow and connect the output of the previous <span class="UIelement">Filter</span> Node to the <span class="UIelement">Map</span> Node. In the configuration, select the category <span class="UIelement">miscellaneous</span> and the function <span class="UIelement">ifTimestamp</span>. Fill in the fields as follows:</p>
                                                <table style="mc-table-style: url('../../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                    <col class="TableStyle-SimpleTable-Column-Column1" />
                                                    <col class="TableStyle-SimpleTable-Column-Column2" />
                                                    <thead>
                                                        <tr class="TableStyle-SimpleTable-Head-Header1">
                                                            <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Field name</th>
                                                            <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Value</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                                <p>Condition</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">
exists($FIRST_FUNDING_AT)
</td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                                <p>Timestamp to return if true</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">
                                                                <p>$FIRST_FUNDING_AT</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Timestamp to return if false</td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">$FOUNDED_AT</td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">
                                                                <p>New Resultant Column Value</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">
                                                                <p>$FIRST_FUNDING_FILLED</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>Save and Execute the Node. A new column called FIRST_FUNDING_FILLED is created and it has no FNFs. The number of rows is the same as before because we did not exclude any rows:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-map-fill-missing-dates.png" />
                                                </p>
                                                <h2 class="noPageBreak">Transforming the date columns</h2>
                                                <p>All dates in our example data are timestamps. For our ML model, we need to convert them into months from today's date. To transform the timestamps to months, add another <span class="UIelement">Map</span> Node to the dataflow and connect the output of the last Node to this <span class="UIelement">Map</span> Node. In the configuration panel, select the category <span class="UIelement">timestamp</span> and the function <span class="UIelement">monthsBetween</span> to convert the 3 date columns (FOUNDED_AT, FIRST_FUNDING_FILLED, LAST_FUNDING_AT) into 3 new columns - AGE, MON_SINCE_FIRST_FUND, and MON_SINCE_LAST_FUND:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-map-month.png" />
                                                </p>
                                                <p>Save and Execute the Node. Now that we have transformed our date columns, we can hide the columns with timestamps and here is how our current data looks:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-map-month-results.png" />
                                                </p>
                                                <h2 class="noPageBreak">Sorting the columns to find missing or negative values</h2>
                                                <p>Since we have just computed new columns, it’s a good idea to check if the computed data is correct using <span class="UIelement">Sort</span> or <span class="UIelement">Profile</span> options. Let’s sort the new columns one by one by clicking on the ascending or descending chevrons on the column headers and check for negative and missing values.</p>
                                                <p>Ascending sort results show that a couple of these columns have negative values, which means that some of the dates were incorrect. Let’s apply a filter to remove all negative values from these columns. Add a <span class="UIelement">Filter</span> Node to the dataflow and configure it to add the following conditions:</p>
                                                <table style="mc-table-style: url('../../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                                    <col class="TableStyle-SimpleTable-Column-Column1" />
                                                    <col class="TableStyle-SimpleTable-Column-Column2" />
                                                    <col class="TableStyle-SimpleTable-Column-Column1" />
                                                    <thead>
                                                        <tr class="TableStyle-SimpleTable-Head-Header1">
                                                            <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Filter Function</th>
                                                            <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Field 1</th>
                                                            <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Field 2</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                                <p>gt</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">$AGE</td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column1-Body1">0</td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body2">
                                                            <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                                <p>gt</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                                <p>$MON_SINCE_FIRST_FUND</p>
                                                            </td>
                                                            <td class="TableStyle-SimpleTable-BodyD-Column1-Body2">
                                                                <p class="tableParagraph">0</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-SimpleTable-Body-Body1">
                                                            <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">gt</td>
                                                            <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">$MON_SINCE_LAST_FUND</td>
                                                            <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">0</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <p>Save and execute the Node. Sort the columns again, they should not have any negative values. The total number of rows is reduced from 41,891 to 41,866.</p>
                                                <h2 class="noPageBreak">Using Python for custom transformation</h2>
                                                <p>In our example data, the STATUS column contains a string, which can be one of the following - “operating”, “acquired”, “closed”, and “ipo”. Our ML model requires these to be in numeric format, which can be easily achieved by writing a user-defined function (UDF) in Python.</p>
                                                <p>Click on the <span class="UIelement">UDF</span> icon in the sidebar to display the UDF panel. Write the Python code to define a dictionary of all possible status strings and a function called <cite>convertStatus</cite> to lookup the dictionary and return the corresponding numeric value. Save the UDF as ml_status.py. The function convertStatus in this UDF is accessible as ml_status:convertStatus.</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-udf-panel.png" />
                                                </p>
                                                <p>Add a <span class="UIelement">Map</span> Node to the dataflow and connect the output of the last Node to this <span class="UIelement">Map</span> Node. In the configuration panel, select the category <span class="UIelement">user-defined</span> and the function  <span class="UIelement">ml_status:convertStatus</span>. Since we want to convert the STATUS column to numeric values, select the STATUS column for the <span class="UIelement">status</span> argument and enter STATUS_NUM for the <span class="UIelement">New Resultant Column Name</span>.</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-map-udf-config.png" />
                                                </p>
                                                <p>Save and execute the Node. A new column names STATUS_NUM is added with status string converted to a numeric value for each row.</p>
                                                <h2 class="noPageBreak">Changing column data types</h2>
                                                <p>Our data seems clean now, except that we have FUNDING_TOTAL_USD and STATUS_NUM columns as strings, AGE, MON_SINCE_FIRST_FUND, and MON_SINCE_LAST_FUND columns as floats and FUNDING_ROUNDS as an integer. Our ML model needs all these columns as integers.</p>
                                                <p>Let’s change the data type of all these columns to integers. Add a <span class="UIelement">Cast</span> Node to the dataflow and connect the output of the last Node to this <span class="UIelement">Cast</span> Node. In the configuration panel, select all the columns which require a data type change and choose the <span class="UIelement">New Type</span> as Integer:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-cast-into-integer.png" />
                                                </p>
                                                <p>Save and Execute the <span class="UIelement">Cast </span>Node. In the new results, all the cast columns are converted to integers:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-cast-results.png" />
                                                </p>
                                                <p>Now we have a result set, which is ready to be used in an ML model. However, we still need to separate out the rows which can be used to train the ML model and the rows for which we need to run the predictive analysis.</p>
                                                <h2 class="noPageBreak">Exporting data to train your ML model</h2>
                                                <p>For training our ML model, we need the companies which have already had liquidity or a liquidation event. These are the companies with STATUS_NUM &gt; 0. Let’s filter these rows.</p>
                                                <p>Add a <span class="UIelement">SQL</span> Node to the dataflow and connect the output of the <span class="UIelement">Cast</span> Node to this <span class="UIelement">SQL</span> Node. Configure the <span class="UIelement">SQL</span> Node to select only those rows which have STATUS_NUM &gt; 0:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-sql-training.png" />
                                                </p>
                                                <p>Save and execute the <span class="UIelement">SQL</span> Node. The new result contains only 8,178 rows:</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-sql-onstatus.png" />
                                                </p>
                                                <p>Add an <span class="UIelement">Export</span> Node to the dataflow and connect the output of the previous <span class="UIelement">SQL</span> Node to the <span class="UIelement">Export </span>Node. Configure the <span class="UIelement">Export </span>Node to select STATUS_NUM, FUNDING_TOTAL_USD, FUNDING_ROUNDS, AGE, MON_SINCE_FIRST_FUND, and MON_SINCE_LAST_FUND columns and save the results to a single comma-separated file.</p>
                                                <p>
                                                    <img src="../../Resources/Images/Usecases/uc1-export-final-result.png" />
                                                </p>
                                                <p>Save and execute the <span class="UIelement">Export </span>Node. The result is saved in the specified file, which can be used to train your ML model.</p>
                                                <h2 class="noPageBreak">Summary</h2>
                                                <p>Transforming data using visual tools, SQL and Python in Xcalar Design is really easy. Simply point and click to use visual tools and create your dataflows in minutes.</p>
                                                <p><a href="#top">Go to the top</a>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </main>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>