<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Reference">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Map functions</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.5.5.0.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <link href="../Fonts/open-sans.regular.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Semibold.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Light.ttf" rel="stylesheet" />
        <link href="../Fonts/OpenSans-Bold.ttf" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.topic-ratings-button
{
	-pie-background: transparent url('../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.edit-user-profile-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/edit-profile.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../Resources/TableStyles/SimpleTable.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.5.5.0_custom.js">
        </script>
        <script src="../../Resources/Scripts/foundation.offcanvas.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap">
            <div class="off-canvas-wrap" data-offcanvas="">
                <section class="inner-wrap">
                    <nav class="tab-bar" data-mc-ignore="true">
                        <section class="middle tab-bar-section outer-row clearfix">
                            <div class="relative clearfix"><a class="logo" href="../Home.htm" alt="Logo"></a>
                                <div class="navigation-wrapper">
                                    <ul class="navigation clearfix">
                                        <li class="has-children"><a href="../A_GettingStarted/GettingStarted.htm">Getting started</a>
                                            <ul class="sub-menu">
                                                <li><a href="../A_GettingStarted/A_Requirements.htm">Requirements for Xcalar Insight</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/B_BasicConcepts.htm">Basic Xcalar Insight concepts</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/C_EasySteps.htm">Easy steps (with default settings)</a>
                                                </li>
                                                <li><a href="../A_GettingStarted/D_DetailedStepsForPointing.htm">Detailed steps (with custom settings)</a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="has-children"><a href="../B_CommonTasks/CommonTasks.htm">Common tasks</a>
                                            <ul class="sub-menu">
                                                <li><a href="../B_CommonTasks/A_ManageDatasetRef.htm">Managing dataset references</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/B_CreateTable.htm">Creating a table</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/C_AddColumns.htm">Adding columns from a dataset to a table</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/D_ChangeDataType.htm">Changing the data type for a column</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/E_CountOccurrencesOfValues.htm">Counting occurrences of unique values in a column</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/E1_SortAndQuartile.htm">Sorting a column and finding quartiles</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/F_UndoRedo.htm">Undoing and redoing an operation</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/G_FilterValue.htm">Filtering in a table column</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/H_UnderstandICV.htm">Creating an integrity constraint violations table</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/I_JoinTables.htm">Joining tables</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/J_GroupBy.htm">Grouping data in a table</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/K_Map.htm">Using the Map function to create new values</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/L_Correlation.htm">Determining correlation between two values</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/M_QuickAggregates.htm">Determining aggregate values</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/N_ChangeTableStatus.htm">Understanding and changing a table status</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/O_ManageWorksheet.htm">Managing worksheets</a>
                                                </li>
                                                <li><a href="../B_CommonTasks/P_UnderstandFNF.htm">Working with a table containing FNF</a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="has-children"><a href="../C_AdvancedTasks/AdvancedTasks.htm">Advanced tasks</a>
                                            <ul class="sub-menu">
                                                <li><a href="../C_AdvancedTasks/A_Extensions.htm">Using extensions</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/B_UDFUnderstand.htm">Understanding user-defined functions (UDFs)</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/C_UDFTasks.htm">Using user-defined functions (UDFs)</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/D_FunctionBar.htm">Using the function or search bar</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/E_CreateBatchDataflow.htm">Understanding and creating batch dataflows</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/F_UseBatchDataflow.htm">Using batch dataflows</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/G_ExportTable.htm">Exporting a table</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/H_Parameterization.htm">Parameterizing queries</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/I_UnderstandMemoryUse.htm">Understanding memory usage</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/J_OptimizeMemory.htm">Optimizing memory usage</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/K_Monitor.htm">Using the Monitor</a>
                                                </li>
                                                <li><a href="../C_AdvancedTasks/L_UseSetup.htm">Using Setup (XDP administrators only)</a>
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="has-children"><a href="Reference.htm">Reference</a>
                                            <ul class="sub-menu">
                                                <li><a href="A_InsightWindow.htm">Xcalar Insight window</a>
                                                </li>
                                                <li><a href="B_WkbkBrowser.htm">Workbook Browser</a>
                                                </li>
                                                <li><a href="C_WorksheetWindow.htm">Worksheet window with tables</a>
                                                </li>
                                                <li><a href="D_DataBrowser.htm">Data Browser</a>
                                                </li>
                                                <li><a href="E_DataflowGraph.htm">Dataflow graph</a>
                                                </li>
                                                <li><a href="F_Table_options.htm">Table options</a>
                                                </li>
                                                <li><a href="G_ColumnOptions.htm">Column options</a>
                                                </li>
                                                <li><a href="H_CellOptions.htm">Cell options</a>
                                                </li>
                                                <li><a href="#" class="selected">Map functions</a>
                                                </li>
                                                <li><a href="J_ExcelComparison.htm">Excel-equivalent functions</a>
                                                </li>
                                                <li><a href="L_Glossary.htm">Glossary</a>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                </div><a class="menu-icon right-off-canvas-toggle" href="#"><span></span></a>
                            </div>
                        </section>
                        <div class="nav-search row outer-row">
                            <form class="search" action="#">
                                <div class="search-bar search-bar-container needs-pie">
                                    <input class="search-field needs-pie" type="search" placeholder="Search" />
                                    <div class="search-filter-wrapper">
                                        <div class="search-filter">
                                            <div class="search-filter-content">
                                                <ul>
                                                    <li>All Files</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="search-submit-wrapper" dir="ltr">
                                        <div class="search-submit" title="Search">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </nav>
                    <aside class="right-off-canvas-menu" data-mc-ignore="true">
                        <ul class="off-canvas-list" data-mc-back-link="Back" data-mc-css-tree-node-expanded="has-submenu" data-mc-css-tree-node-collapsed="has-submenu" data-mc-css-sub-menu="right-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.fndtn.offcanvas" data-mc-toc="True">
                        </ul>
                    </aside>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <div id="contentBody">
                                <div class="row collapse">
                                    <div class="sideContent">
                                        <div class="clearfix">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component">
                                                <div class="button-group-container-left">
                                                    <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                    </button>
                                                    <button class="button needs-pie next-topic-button" title="Navigate next">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                    </button>
                                                    <div class="button-group star-buttons loading feedback-topic-required">
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="topic rating" />
                                                        </div>
                                                    </div>
                                                    <div class="button-separator">
                                                    </div>
                                                    <button class="button feedback-required login-button" id="normalLoginBtn" data-state1-class="login-button" data-state2-class="edit-user-profile-button" title="Login" data-state1-title="Login">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="login" />
                                                    </button>
                                                    <button class="button needs-pie print-button" title="Print">
                                                        <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <ul class="menu _Skins_SideMenu mc-component">
                                            <li class="has-children"><a href="Reference.htm">Reference</a>
                                                <ul class="sub-menu">
                                                    <li><a href="A_InsightWindow.htm">Xcalar Insight window</a>
                                                    </li>
                                                    <li><a href="B_WkbkBrowser.htm">Workbook Browser</a>
                                                    </li>
                                                    <li><a href="C_WorksheetWindow.htm">Worksheet window with tables</a>
                                                    </li>
                                                    <li><a href="D_DataBrowser.htm">Data Browser</a>
                                                    </li>
                                                    <li><a href="E_DataflowGraph.htm">Dataflow graph</a>
                                                    </li>
                                                    <li><a href="F_Table_options.htm">Table options</a>
                                                    </li>
                                                    <li><a href="G_ColumnOptions.htm">Column options</a>
                                                    </li>
                                                    <li><a href="H_CellOptions.htm">Cell options</a>
                                                    </li>
                                                    <li><a href="#" class="selected">Map functions</a>
                                                    </li>
                                                    <li><a href="J_ExcelComparison.htm">Excel-equivalent functions</a>
                                                    </li>
                                                    <li><a href="L_Glossary.htm">Glossary</a>
                                                    </li>
                                                </ul>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="Reference.htm">Reference</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Map functions</span>
                                    </div>
                                    <div class="bodyProxyNarrow">
                                        <h1>Map functions</h1>
                                        <p>This section describes the function categories supported under the Map function. If the input type is shown as Any, the data type can be boolean, float, integer, or string.</p>
                                        <h2>Arithmetic functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" style="width: 82px;" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">abs</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the absolute value.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">absInt</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the absolute value.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">add</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Adds operand 1 and operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">ceil</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the smallest integer that is greater than or equal to the input.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">div</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Divides operand 1 by operand 2. If operand 2 is 0, the result is FNF.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">exp</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Raises e (the base of natural logarithms)&#160;to the power that is equal to the input.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">floor</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the largest integer less than or equal to the input.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">log</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                        <p>Returns the logarithm of the input to the base of e.</p>
                                                        <div class="Note"><span class="label">IMPORTANT</span>: This function is the natural logarithm. It is not the same as the log function in other applications such as Excel, which uses 10 as default base of the logarithm.</div>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">log10</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the logarithm of the input to the base of 10.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">log2</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the logarithm of the input to the base of 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">mod</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the remainder when operand 1 is divided by operand 2. If operand 2 is 0, the result is FNF.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">mult</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Multiplies operand 1 by operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">pow</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Raises operand 1 to the power of operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">round</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Rounds the input to the nearest integer.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">sqrt</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the square root of the input.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">sub</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Subtracts operand 2 from operand 1.</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Float</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>Bitwise functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" style="width: 22px;" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">bitand</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the result of the AND&#160;operation on operand 1 and operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">bitlshift</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the result of a logical left shift on the bits of operand 1 by the number of bits specified by operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">bitor</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the result of the OR&#160;operation on operand 1 and operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">bitrshift</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the result of a logical right shift on the bits of operand 1 by the number of bits specified by operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">bitxor</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Returns the result of the XOR&#160;(exclusive OR) operation on operand 1 and operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">Integer or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body1">Integer</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>Conditional functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" style="width: 151px;" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" style="width: 151px;" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">And</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the result of the AND&#160;operation on operand 1 and operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Between</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is equal to or greater than operand 2, and less than or equal to operand 3.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float or integer</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Contains</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 contains operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Eq</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 and operand 2 are equal.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any (but operands must be of the same type)</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Exists</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if a value exists in the input column.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Ge</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is greater than or equal to operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Gt</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 is greater than operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">isBoolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if the input data type is boolean.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">isFloat</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if the input data type is float.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">isInf</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if the input value is infinity.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Float</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">isInt</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if the input data type is integer.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">isStr</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if the input data type is string.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">le</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 is less than or equal to operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">like</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is similar to operand 2. The strings in the operands are case sensitive. The result is True only if the strings are a complete match. You can include an asterisk (*) as a wild card character. For example, if operand 1 is ABC and operand 2 is A*C, the result is True. If operand 1 is ABC and operand 2 is AB, the result is False.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">lt</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Tests if operand 1 is less than operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">neq</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Tests if operand 1 is not equal to operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any (but operands must be of the same type)</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">not</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the logical NOT&#160;value of the input.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">or</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the result of the OR operation on operand 1 and operand 2.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">regex</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Tests if operand 1 matches operand 2, which can be a regular expression.</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body1">Boolean</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>Conversion functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">ipAddrToInt</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Converts an IPv4&#160;address (with the specified number of octets) to an integer.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">macAddrToInt</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Converts a MAC&#160;address (with the specified number of octets) to an integer.</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Integer</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>Miscellaneous functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column1" />
                                            <col style="width: 134px;" class="TableStyle-SimpleTable-Column-Column2" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">dhtHash</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Generates a hash key used by the distributed hash table.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">genRandom</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Generates a random number between the first operand and second operand.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">genUnique</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Generates a unique integer per row in a new column.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">N/A</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                        <p>iffloat</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                        <p>Tests if a condition (first argument)&#160;is true or false. If true, returns the value of the second argument; if false, returns the value of the third argument.</p>
                                                        <p>A condition is true if the value is any numeric value except 0 or is a boolean value of True.</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">ifInt</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Same as the if function.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">ifStr</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Same as the if function.</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">String</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <div class="Note"><span class="label">NOTE</span>:&#160;For the if, ifInt, or ifStr function, an output value specified  in the incorrect data type results in FNF (field not found). For example, for the ifInt function, if you specify the string Correct for a true condition and Incorrect for the false condition, the function returns FNF becaues the appropriate output data type is integer.</div>
                                        <h2>String functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">concat</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Concatenates two strings.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">countChar</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Counts occurrences of specified character or string.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">cut</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">
                                                        <p>Returns the string located at the numbered field.&#160;Field numbers start at 0. Fields are separated by a delimiter. For example, if the string in the Date column is 12/6/2016 and the delimiter is the / character and the field number is 3, the function returns 2016 because it is the third field in the string.</p>
                                                        <p>The function does not return a value if the numbered field does not exist,  the delimiter does not exist, or the delimiter is a multi-character string.</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                        <p>Input to parse:&#160;String</p>
                                                        <p>Field number:&#160;Integer or boolean</p>
                                                        <p>Delimiter: String</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">find</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                        <p>Returns the index of the search string (that is, the position of the string's first character). Starting index and ending index limit where the string can be found.  Indexes start at 0 and are inclusive. To return an index as long as it is equal to or greater than the starting index, specify 0 for the ending index. If the string is not found within the specified indexes, the function returns -1.</p>
                                                        <p>For example:</p>
                                                        <p>For the Date column, you can search for 2007 with the starting index of 3 and ending index of 5. Suppose the source string is 1/1/2007, the function returns 4 because 2007 is found at index 4.</p>
                                                        <p>Suppose the source string is 12/12/2007, the function returns -1 because  2007 is not found at an index between 3 and 5. However, if the ending index is set to 0, the function returns 6.</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">
                                                        <p>Column to search:&#160;String</p>
                                                        <p>String to find:&#160;String</p>
                                                        <p>Starting index:&#160;Integer or boolean</p>
                                                        <p>Ending index:&#160;Integer or boolean</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">len</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the length of the input.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">replace</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Searches for a string and replaces it with another string in a specified column.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">String</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">rfind</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Same as the find function except that it returns the index of the last character of the search string.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                        <p>Column to search:&#160;String</p>
                                                        <p>String to find:&#160;String</p>
                                                        <p>Starting index:&#160;Integer or boolean</p>
                                                        <p>Ending index:&#160;Integer or boolean</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">strip</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Eliminates the leading and trailing white space from the input string.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">String</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">substring</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1"> Creates a string from the source that starts at the start index (inclusive) and ends at the end index (exclusive). This  is the equivalent of the python command <code>str[startIdx:endIdx]</code>. To have the same effect as  <code>str[startIdx:]</code>, specify 0 for the end index. To have the same effect as <code>str[:endIdx]</code>, specify 0 for the start index. To index back from the end of the string, use a negative index value.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">
                                                        <p>Column to search:&#160;String</p>
                                                        <p>Start index:&#160;Integer or boolean</p>
                                                        <p>End index:&#160;Integer or boolean</p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">String</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">wordCount</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Returns the number of words in the input.</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">String</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Integer</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>Trigonometric functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">acos</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the arccosine of input value, in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">acosh</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the hyperbolic arccosine of input value, in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">asin</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the arcsine of input value, in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">asinh</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the hyperbolic arcsine of input value, in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">atan</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the arctangent of input value, in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">atan2</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the principal value of arctangent(y/x), in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">atanh</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the hyperbolic arctangent of input value, in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">cos</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the cosine of input value expressed in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">cosh</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the hyperbolic cosine of input value expressed in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">degrees</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Converts input value, expressed in radians, to degrees.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">pi</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Creates a column with the value of pi in each row.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">N/A</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">radians</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Converts input value, expressed in degrees, to radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">sin</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the sine of input value expressed in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">sinh</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">Returns the hyperbolic sine of input value expressed in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">tan</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">Returns the tangent of input value expressed in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">tanh</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">Returns the hyperbolic tangent of input value expressed in radians.</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">Integer, float, or boolean</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">Float</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>Type-casting functions</h2>
                                        <table style="mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;width: 100%;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" style="width: 18px;" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" style="width: 18px;" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Function</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Input type</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column2-Header1">Output type</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">bool</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">
                                                        <p>Casts value to a boolean value as follows:</p>
                                                        <ul>
                                                            <li value="1">A string is converted to the boolean value, false. The only exception is that if the string is <span class="UIelement">true</span>, it is converted to the boolean value, true.</li>
                                                            <li value="2">The number  0 is converted to the boolean value, false.</li>
                                                            <li value="3">A non-zero float or integer value is converted to the boolean value, true. </li>
                                                        </ul>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Boolean</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">float</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body2">
                                                        <p>Casts value to float. </p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body2">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body2">Float</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">int</td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column2-Body1">
                                                        <p>Casts value to integer. </p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyE-Column1-Body1">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyD-Column2-Body1">Integer</td>
                                                </tr>
                                                <tr class="TableStyle-SimpleTable-Body-Body2">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">string</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body2">
                                                        <p>Casts value to string. </p>
                                                    </td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body2">Any</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column2-Body2">String</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>User-defined functions</h2>
                                        <p>User-defined functions (UDFs)&#160;are the ones that you or other users of the cluster define and upload. <span class="GeneralProductName3short">XDP</span> is shipped with several <span class="GeneralCompanyNameShort">Xcalar</span>-defined UDFs in the default module. This section describes the <span class="GeneralCompanyNameShort">Xcalar</span>-defined UDFs.</p>
                                        <div class="Note"><span class="label">NOTE</span>:&#160;The data type of all UDF output is string.</div>
                                        <h3>convertFormats</h3>
                                        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertFormats(colName, inputFormat, outputFormat)</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Converts one time format to another.</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                        <p>colName: name of the column to convert.</p>
                                                        <p>inputFormat: format of the column named colName. For example, if the format is 2005-12-05 in the column, then the input format is %Y-%m-%d.</p>
                                                        <p>outputFormat: output format. For example if you want the date to be 12/05/2005, then the output format is %m/%d/%Y.</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h3>convertFromUnixTS</h3>
                                        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertFromUnixTS(colName, outputFormat)</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Converts from UNIX timestamp to another time format.</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                        <p>colName: name of the column to convert.</p>
                                                        <p>outputFormat: output format to which the UNIX&#160;timestamp is converted.</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h3>convertToUnixTS</h3>
                                        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertToUnixTS(colName, inputFormat)</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Converts from a timestamp format to the UNIX timestamp format.</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                        <p>colName: name of the column to convert.</p>
                                                        <p>inputFormat: input format from which the column is converted to the UNIX&#160;timestamp format</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h3>openExcel</h3>
                                        <p>This function is not to be invoked by <span class="GeneralProductName3short">XDP</span> users. It is called by <span class="GeneralProductName">Xcalar Insight</span> when you select the file format to be Excel during the dataset reference creation step. </p>
                                        <h3>convertExcelTime</h3>
                                        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">convertExcelTime(colName, outputFormat)</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">In Excel, a date can be displayed and stored as a value that represents the number of days that have elapsed since the base date. For example, a date shown as 48739 means that 48739 days have elapsed since the base date. This function converts this value to a regular date. </td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                        <p>colName: name of the column to convert.</p>
                                                        <p>outputFormat: output format from which the Excel date is converted. For example, if you want the date to be 2005-12-04, then do %Y-%m-%d.</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h3>splitWithDelim</h3>
                                        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/SimpleTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-SimpleTable" cellspacing="0">
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <col class="TableStyle-SimpleTable-Column-Column2" />
                                            <col class="TableStyle-SimpleTable-Column-Column1" />
                                            <thead>
                                                <tr class="TableStyle-SimpleTable-Head-Header1">
                                                    <th class="TableStyle-SimpleTable-HeadE-Column1-Header1">Syntax</th>
                                                    <th class="TableStyle-SimpleTable-HeadE-Column2-Header1">Description</th>
                                                    <th class="TableStyle-SimpleTable-HeadD-Column1-Header1">Input</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-SimpleTable-Body-Body1">
                                                    <td class="TableStyle-SimpleTable-BodyB-Column1-Body1">splitWithDelim(txt, index, delim)</td>
                                                    <td class="TableStyle-SimpleTable-BodyB-Column2-Body1">Extracts the substring from a string starting from the character following the delimiter with the specified index. For example, it there are two delimiters, the indexes for the delimiters are 0 and 1. To obtain the substring starting from the character following the second delimiter, specify 1 as the index.</td>
                                                    <td class="TableStyle-SimpleTable-BodyA-Column1-Body1">
                                                        <p>txt: string from which a substring is extracted.</p>
                                                        <p>index: index of the delimiter. Indexing starts from 0, and the substring starts from the character following the delimiter pointed to by the index.</p>
                                                        <p>delim:&#160;character that serves as delimiter.</p>
                                                        <p>The following examples show how this function is used:</p>
                                                        <p>splitWithDelim("a-b-c", "-", 1) produces the substring <span class="UIelement">b-c</span>. </p>
                                                        <p>splitWithDelim("a-b-c", "-", 3) produces an empty substring. </p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h3>now</h3>
                                        <p>This function gets the current time of the <span class="GeneralProductName3short">XDP</span> cluster. The output represents the number of seconds since the epoch, in UTC. </p>
                                        <p>This function does not take any input.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a class="exit-off-canvas"></a>
                </section>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>