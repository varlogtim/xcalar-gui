const SupersetSchemas = require('./SupersetSchemas.js');
var assert = require('assert');

var schemas = [];
var schema1 = JSON.parse("{ \"path\": \"/xcfield/instantdatamart/csv/forecast_canonical.csv\", \"success\": true, \"status\": \"success\", \"schema\": { \"numColumns\": \"10\", \"columnsList\": [ { \"name\": \"COL_Row_Number\", \"mapping\": \"$.Row_Number\", \"type\": \"INTEGER\" }, { \"name\": \"City_Name\", \"mapping\": \"$.City_Name\", \"type\": \"VARCHAR(8)\" }, { \"name\": \"City_Canonical_Name\", \"mapping\": \"$.City_Canonical_Name\", \"type\": \"VARCHAR(64)\" }, { \"name\": \"Lat_Lon\", \"mapping\": \"$.Lat_Lon\", \"type\": \"VARCHAR(32)\" }, { \"name\": \"Start_Time\", \"mapping\": \"$.Start_Time\", \"type\": \"INTEGER\" }, { \"name\": \"End_Time\", \"mapping\": \"$.End_Time\", \"type\": \"INTEGER\" }, { \"name\": \"Temperature\", \"mapping\": \"$.Temperature\", \"type\": \"REAL\" }, { \"name\": \"Pressure\", \"mapping\": \"$.Pressure\", \"type\": \"REAL\" }, { \"name\": \"Humidity\", \"mapping\": \"$.Humidity\", \"type\": \"INTEGER\" }, { \"name\": \"Weather_ID\", \"mapping\": \"$.Weather_ID\", \"type\": \"INTEGER\" } ] } }");
var schema2 = JSON.parse("{ \"path\": \"/xcfield/instantdatamart/csv/forecast_canonical1.csv\", \"success\": true, \"status\": \"success\", \"schema\": { \"numColumns\": \"10\", \"columnsList\": [ { \"name\": \"COL_Row_Number\", \"mapping\": \"$.Row_Number\", \"type\": \"INTEGER\" }, { \"name\": \"City_Name\", \"mapping\": \"$.City_Name\", \"type\": \"VARCHAR(8)\" }, { \"name\": \"City_Canonical_Name\", \"mapping\": \"$.City_Canonical_Name\", \"type\": \"VARCHAR(64)\" }, { \"name\": \"Lat_Lon\", \"mapping\": \"$.Lat_Lon\", \"type\": \"VARCHAR(32)\" }, { \"name\": \"Start_Time\", \"mapping\": \"$.Start_Time\", \"type\": \"INTEGER\" }, { \"name\": \"End_Time\", \"mapping\": \"$.End_Time\", \"type\": \"INTEGER\" }, { \"name\": \"Temperature\", \"mapping\": \"$.Temperature\", \"type\": \"REAL\" }, { \"name\": \"Pressure\", \"mapping\": \"$.Pressure\", \"type\": \"REAL\" }, { \"name\": \"Humidity\", \"mapping\": \"$.Humidity\", \"type\": \"INTEGER\" } ] } }");
var schema3 = JSON.parse("{ \"path\": \"/xcfield/instantdatamart/csv/forecast_canonical2.csv\", \"success\": true, \"status\": \"success\", \"schema\": { \"numColumns\": \"10\", \"columnsList\": [ { \"name\": \"COL_Row_Number\", \"mapping\": \"$.Row_Number\", \"type\": \"INTEGER\" }, { \"name\": \"City_Name\", \"mapping\": \"$.City_Name\", \"type\": \"VARCHAR(8)\" }, { \"name\": \"City_Canonical_Name\", \"mapping\": \"$.City_Canonical_Name\", \"type\": \"VARCHAR(64)\" }, { \"name\": \"Lat_Lon\", \"mapping\": \"$.Lat_Lon\", \"type\": \"VARCHAR(32)\" }, { \"name\": \"Start_Time\", \"mapping\": \"$.Start_Time\", \"type\": \"INTEGER\" }, { \"name\": \"End_Time\", \"mapping\": \"$.End_Time\", \"type\": \"INTEGER\" }, { \"name\": \"Temperature\", \"mapping\": \"$.Temperature\", \"type\": \"REAL\" }, { \"name\": \"Pressure\", \"mapping\": \"$.Pressure\", \"type\": \"REAL\" }, { \"name\": \"Humidity\", \"mapping\": \"$.Humidity\", \"type\": \"INTEGER\" }, { \"name\": \"Weather_ID\", \"mapping\": \"$.WeatherID\", \"type\": \"INTEGER\" } ] } }");

schemas = [schema1, schema2, schema3]
supersetSchemas = new SupersetSchemas()
observedResult = supersetSchemas.getSchemas(schemas);

expectedResult =   { "S1": { "path": [ "/xcfield/instantdatamart/csv/forecast_canonical.csv", "/xcfield/instantdatamart/csv/forecast_canonical1.csv" ], "schema": { "numColumns": 10, "columnsList": [ { "name": "COL_Row_Number", "mapping": "$.Row_Number", "type": "INTEGER" }, { "name": "City_Name", "mapping": "$.City_Name", "type": "VARCHAR(8)" }, { "name": "City_Canonical_Name", "mapping": "$.City_Canonical_Name", "type": "VARCHAR(64)" }, { "name": "Lat_Lon", "mapping": "$.Lat_Lon", "type": "VARCHAR(32)" }, { "name": "Start_Time", "mapping": "$.Start_Time", "type": "INTEGER" }, { "name": "End_Time", "mapping": "$.End_Time", "type": "INTEGER" }, { "name": "Temperature", "mapping": "$.Temperature", "type": "REAL" }, { "name": "Pressure", "mapping": "$.Pressure", "type": "REAL" }, { "name": "Humidity", "mapping": "$.Humidity", "type": "INTEGER" }, { "name": "Weather_ID", "mapping": "$.Weather_ID", "type": "INTEGER" } ] } }, "S2": { "path": [ "/xcfield/instantdatamart/csv/forecast_canonical2.csv" ], "schema": { "numColumns": 10, "columnsList": [ { "name": "COL_Row_Number", "mapping": "$.Row_Number", "type": "INTEGER" }, { "name": "City_Name", "mapping": "$.City_Name", "type": "VARCHAR(8)" }, { "name": "City_Canonical_Name", "mapping": "$.City_Canonical_Name", "type": "VARCHAR(64)" }, { "name": "Lat_Lon", "mapping": "$.Lat_Lon", "type": "VARCHAR(32)" }, { "name": "Start_Time", "mapping": "$.Start_Time", "type": "INTEGER" }, { "name": "End_Time", "mapping": "$.End_Time", "type": "INTEGER" }, { "name": "Temperature", "mapping": "$.Temperature", "type": "REAL" }, { "name": "Pressure", "mapping": "$.Pressure", "type": "REAL" }, { "name": "Humidity", "mapping": "$.Humidity", "type": "INTEGER" }, { "name": "Weather_ID", "mapping": "$.WeatherID", "type": "INTEGER" } ] } } }

//console.info("observedResult = " + JSON.stringify(observedResult, null, 2));

assert(JSON.stringify(observedResult) === JSON.stringify(expectedResult))
