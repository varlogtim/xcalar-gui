class DagNodeRound extends DagNode {
    protected input: DagNodeRoundInput;

    public constructor(options: DagNodeInfo) {
        super(options);
        this.type = DagNodeType.Round;
        this.minParents = 1;
        this.maxParents = 1;
        this.display.icon = "&#xe9da;"
        this.input = new DagNodeRoundInput(options.input);
    }

    /**
     * @override
     * @param param 
     */
    public setParam(param: DagNodeRoundInputStruct): void {
        this.input.setInput({
            sourceColumn: param.sourceColumn || '',
            numDecimals: param.numDecimals || 0,
            destColumn: param.destColumn || ''
        });
        super.setParam();
    }

    /**
     * @override
     * @param columns 
     */
    public lineageChange(columns: ProgCol[]): DagLineageChange {
        const newColName = this.input.getInput().destColumn;
        const newCol = ColManager.newPullCol(newColName, newColName, ColumnType.float);
        if (xcHelper.parsePrefixColName(newColName).prefix) {
            throw new Error("columns generated by map cannot have prefix");
        }

        return {
            columns: columns.concat([newCol]),
            changes: [{ from: null, to: newCol }]
        };
    }
}